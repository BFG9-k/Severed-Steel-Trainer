#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropLift

#include "Basic.hpp"

#include "BP_PropVoxelWorld_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PropLift.BP_PropLift_C
// 0x00D0 (0x0B80 - 0x0AB0)
class ABP_PropLift_C final : public ABP_PropVoxelWorld_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PropLift_C;                      // 0x0AB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             Dims;                                              // 0x0AC0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_LiftCall_C*>                 MyCallButtons;                                     // 0x0AD0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FTransform>                     MyCallTransforms;                                  // 0x0AE0(0x0010)(Edit, BlueprintVisible, SaveGame)
	class ABP_LiftCall_C*                         FoundCallDestination;                              // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LiftControl_C*                      MyControlsUp;                                      // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             MyControlTransformUp;                              // 0x0B00(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	struct FTransform                             MyControlTransformDown;                            // 0x0B30(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	class ABP_LiftControl_C*                      MyControlsDown;                                    // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ElevatorLoop;                                      // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGoingUp;                                          // 0x0B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B71[0x3];                                      // 0x0B71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x0B74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PropLift(int32 EntryPoint);
	void GoDownOne();
	void GoUpOne();
	void CustomEvent_0();
	void CalledTo(const struct FVector& CallerLocation);
	void PostDataLoaded();
	void ReceiveBeginPlay();
	void Rebuild(bool bRebuildWorld);
	void AddCallButton();
	bool GetShouldSave();
	void AddControls(const struct FTransform& InTransformUp, const struct FTransform& InTransformDown);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PropLift_C">();
	}
	static class ABP_PropLift_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PropLift_C>();
	}
};
static_assert(alignof(ABP_PropLift_C) == 0x000010, "Wrong alignment on ABP_PropLift_C");
static_assert(sizeof(ABP_PropLift_C) == 0x000B80, "Wrong size on ABP_PropLift_C");
static_assert(offsetof(ABP_PropLift_C, UberGraphFrame_BP_PropLift_C) == 0x000AB0, "Member 'ABP_PropLift_C::UberGraphFrame_BP_PropLift_C' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, Audio) == 0x000AB8, "Member 'ABP_PropLift_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, Dims) == 0x000AC0, "Member 'ABP_PropLift_C::Dims' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, MyCallButtons) == 0x000AD0, "Member 'ABP_PropLift_C::MyCallButtons' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, MyCallTransforms) == 0x000AE0, "Member 'ABP_PropLift_C::MyCallTransforms' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, FoundCallDestination) == 0x000AF0, "Member 'ABP_PropLift_C::FoundCallDestination' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, MyControlsUp) == 0x000AF8, "Member 'ABP_PropLift_C::MyControlsUp' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, MyControlTransformUp) == 0x000B00, "Member 'ABP_PropLift_C::MyControlTransformUp' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, MyControlTransformDown) == 0x000B30, "Member 'ABP_PropLift_C::MyControlTransformDown' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, MyControlsDown) == 0x000B60, "Member 'ABP_PropLift_C::MyControlsDown' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, ElevatorLoop) == 0x000B68, "Member 'ABP_PropLift_C::ElevatorLoop' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, bGoingUp) == 0x000B70, "Member 'ABP_PropLift_C::bGoingUp' has a wrong offset!");
static_assert(offsetof(ABP_PropLift_C, Speed) == 0x000B74, "Member 'ABP_PropLift_C::Speed' has a wrong offset!");

}

