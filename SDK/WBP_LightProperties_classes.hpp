#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LightProperties

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LightProperties.WBP_LightProperties_C
// 0x0080 (0x02E0 - 0x0260)
class UWBP_LightProperties_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComboBoxString*                        AttachID;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               BColor;                                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Brightness;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Distance;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_129;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               GColor;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Pitch;                                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               RColor;                                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Roll;                                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           Simple;                                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Temp;                                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_11;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               Yaw;                                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_EditorLight_C*                      SelectedLight;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSettingUp;                                        // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSholdTransact;                                    // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_LightProperties(int32 EntryPoint);
	void BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__WBP_LightProperties_simple_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature();
	void BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod);
	void BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod);
	void BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod);
	void BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature(const struct FLinearColor& NewColor);
	void BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod);
	void BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod);
	void BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, ETextCommit CommitMethod);
	void BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void Setup(class ABP_EditorLight_C* InLight);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LightProperties_C">();
	}
	static class UWBP_LightProperties_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LightProperties_C>();
	}
};
static_assert(alignof(UWBP_LightProperties_C) == 0x000008, "Wrong alignment on UWBP_LightProperties_C");
static_assert(sizeof(UWBP_LightProperties_C) == 0x0002E0, "Wrong size on UWBP_LightProperties_C");
static_assert(offsetof(UWBP_LightProperties_C, UberGraphFrame) == 0x000260, "Member 'UWBP_LightProperties_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, AttachID) == 0x000268, "Member 'UWBP_LightProperties_C::AttachID' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, BColor) == 0x000270, "Member 'UWBP_LightProperties_C::BColor' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Brightness) == 0x000278, "Member 'UWBP_LightProperties_C::Brightness' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Distance) == 0x000280, "Member 'UWBP_LightProperties_C::Distance' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, EditableTextBox_129) == 0x000288, "Member 'UWBP_LightProperties_C::EditableTextBox_129' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, GColor) == 0x000290, "Member 'UWBP_LightProperties_C::GColor' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Pitch) == 0x000298, "Member 'UWBP_LightProperties_C::Pitch' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, RColor) == 0x0002A0, "Member 'UWBP_LightProperties_C::RColor' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Roll) == 0x0002A8, "Member 'UWBP_LightProperties_C::Roll' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Simple) == 0x0002B0, "Member 'UWBP_LightProperties_C::Simple' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Temp) == 0x0002B8, "Member 'UWBP_LightProperties_C::Temp' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, WBO_Row_11) == 0x0002C0, "Member 'UWBP_LightProperties_C::WBO_Row_11' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, Yaw) == 0x0002C8, "Member 'UWBP_LightProperties_C::Yaw' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, SelectedLight) == 0x0002D0, "Member 'UWBP_LightProperties_C::SelectedLight' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, bSettingUp) == 0x0002D8, "Member 'UWBP_LightProperties_C::bSettingUp' has a wrong offset!");
static_assert(offsetof(UWBP_LightProperties_C, bSholdTransact) == 0x0002D9, "Member 'UWBP_LightProperties_C::bSholdTransact' has a wrong offset!");

}

