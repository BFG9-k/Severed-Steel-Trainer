#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameSettingsV3

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.ExecuteUbergraph_WBP_GameSettingsV3
// 0x0140 (0x0140 - 0x0000)
struct WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)(ConstParm)
	class UWBP_CONFIRM_C*                         CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_CONFIRM_C*                         CallFunc_Create_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsController)>           K2Node_CreateDelegate_OutputDelegate_4;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	EScrollWhenFocusChanges                       Temp_byte_Variable;                                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_1;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_9;                // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_8;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_7;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x00D8(0x0018)(ConstParm)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_6;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_5;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_2;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_5;                              // 0x0110(0x0018)(ConstParm)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_4;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_3;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_2;                // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color_1;                // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_ComponentBoundEvent_Color;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsController;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_3;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       K2Node_Select_Default;                             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3");
static_assert(sizeof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3) == 0x000140, "Wrong size on WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, EntryPoint) == 0x000000, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_text_Variable) == 0x000008, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_text_Variable_1) == 0x000020, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_text_Variable_2) == 0x000038, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_text_Variable_3) == 0x000050, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, CallFunc_Create_ReturnValue) == 0x000068, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, CallFunc_Create_ReturnValue_1) == 0x000080, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_CreateDelegate_OutputDelegate_2) == 0x000098, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A8, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_bool_Variable) == 0x0000B8, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000BC, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_byte_Variable) == 0x0000CC, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_byte_Variable_1) == 0x0000CD, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_Event_IsDesignTime) == 0x0000CE, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_9) == 0x0000CF, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_9' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_8) == 0x0000D0, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_8' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_7) == 0x0000D1, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_7' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_text_Variable_4) == 0x0000D8, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, CallFunc_GetTYVCGameMode_NewParam) == 0x0000F0, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, CallFunc_GetTYVCGameMode_NewParam_1) == 0x0000F8, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_6) == 0x000100, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_6' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_5) == 0x000101, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_5' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, CallFunc_GetTYVCGameMode_NewParam_2) == 0x000108, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::CallFunc_GetTYVCGameMode_NewParam_2' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, Temp_text_Variable_5) == 0x000110, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_4) == 0x000128, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_4' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_3) == 0x000129, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_3' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_2) == 0x00012A, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color_1) == 0x00012B, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_ComponentBoundEvent_Color) == 0x00012C, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_ComponentBoundEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_CustomEvent_bIsController) == 0x00012D, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_CustomEvent_bIsController' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, CallFunc_GetTYVCGameMode_NewParam_3) == 0x000130, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::CallFunc_GetTYVCGameMode_NewParam_3' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3, K2Node_Select_Default) == 0x000138, "Member 'WBP_GameSettingsV3_C_ExecuteUbergraph_WBP_GameSettingsV3::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.OnControllerSwap_Event_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_OnControllerSwap_Event_0 final
{
public:
	bool                                          bIsController;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameSettingsV3_C_OnControllerSwap_Event_0) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_OnControllerSwap_Event_0");
static_assert(sizeof(WBP_GameSettingsV3_C_OnControllerSwap_Event_0) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_OnControllerSwap_Event_0");
static_assert(offsetof(WBP_GameSettingsV3_C_OnControllerSwap_Event_0, bIsController) == 0x000000, "Member 'WBP_GameSettingsV3_C_OnControllerSwap_Event_0::bIsController' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_White_1_K2Node_ComponentBoundEvent_41_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Red_1_K2Node_ComponentBoundEvent_40_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Green_1_K2Node_ComponentBoundEvent_39_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Blue_1_K2Node_ComponentBoundEvent_38_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__WBP_GameSettingsV3_Orange_1_K2Node_ComponentBoundEvent_37_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__Red_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__Green_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__White_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__Blue_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature, Color) == 0x000000, "Member 'WBP_GameSettingsV3_C_BndEvt__Orange_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature::Color' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameSettingsV3_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_PreConstruct");
static_assert(sizeof(WBP_GameSettingsV3_C_PreConstruct) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_PreConstruct");
static_assert(offsetof(WBP_GameSettingsV3_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GameSettingsV3_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.UpdateDisplay
// 0x0038 (0x0038 - 0x0000)
struct WBP_GameSettingsV3_C_UpdateDisplay final
{
public:
	EAutoSlowMoSettings                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHudColor                                     Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AdamHUDColor_C*                    K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AdamHUDColor_C*                    K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameSettingsV3_C_UpdateDisplay) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_UpdateDisplay");
static_assert(sizeof(WBP_GameSettingsV3_C_UpdateDisplay) == 0x000038, "Wrong size on WBP_GameSettingsV3_C_UpdateDisplay");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, Temp_byte_Variable) == 0x000000, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, Temp_bool_Variable) == 0x000001, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, Temp_bool_Variable_2) == 0x000003, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, Temp_byte_Variable_2) == 0x000005, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, CallFunc_GetTYVCGameMode_NewParam) == 0x000008, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, K2Node_Select_Default) == 0x000018, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, K2Node_Select_Default_1) == 0x000028, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_UpdateDisplay, K2Node_Select_Default_2) == 0x000030, "Member 'WBP_GameSettingsV3_C_UpdateDisplay::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.HUDColorSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_HUDColorSelected final
{
public:
	EHudColor                                     InColor;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_HUDColorSelected) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_HUDColorSelected");
static_assert(sizeof(WBP_GameSettingsV3_C_HUDColorSelected) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_HUDColorSelected");
static_assert(offsetof(WBP_GameSettingsV3_C_HUDColorSelected, InColor) == 0x000000, "Member 'WBP_GameSettingsV3_C_HUDColorSelected::InColor' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.GatherSettingsAndSave
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_GameSettingsV3_C_GatherSettingsAndSave final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAutoSlowMoSettings                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoSlowMoSettings                           Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAutoSlowMoSettings                           K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameSettings                          K2Node_MakeStruct_GameSettings;                    // 0x0028(0x0090)()
};
static_assert(alignof(WBP_GameSettingsV3_C_GatherSettingsAndSave) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_GatherSettingsAndSave");
static_assert(sizeof(WBP_GameSettingsV3_C_GatherSettingsAndSave) == 0x0000B8, "Wrong size on WBP_GameSettingsV3_C_GatherSettingsAndSave");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, Temp_bool_Variable) == 0x000000, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, Temp_byte_Variable) == 0x000001, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, CallFunc_GetTYVCGameMode_NewParam) == 0x000008, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, CallFunc_GetSelectedIndex_ReturnValue) == 0x000010, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, K2Node_Select_Default) == 0x000015, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000018, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_GatherSettingsAndSave, K2Node_MakeStruct_GameSettings) == 0x000028, "Member 'WBP_GameSettingsV3_C_GatherSettingsAndSave::K2Node_MakeStruct_GameSettings' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.To Ammo Indy
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_To_Ammo_Indy final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_To_Ammo_Indy) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_To_Ammo_Indy");
static_assert(sizeof(WBP_GameSettingsV3_C_To_Ammo_Indy) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_To_Ammo_Indy");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Ammo_Indy, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_To_Ammo_Indy::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Ammo_Indy, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_To_Ammo_Indy::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.To HUDColor
// 0x0028 (0x0028 - 0x0000)
struct WBP_GameSettingsV3_C_To_HUDColor final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_To_HUDColor) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_To_HUDColor");
static_assert(sizeof(WBP_GameSettingsV3_C_To_HUDColor) == 0x000028, "Wrong size on WBP_GameSettingsV3_C_To_HUDColor");
static_assert(offsetof(WBP_GameSettingsV3_C_To_HUDColor, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_To_HUDColor::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_HUDColor, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_To_HUDColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_HUDColor, Temp_byte_Variable) == 0x000010, "Member 'WBP_GameSettingsV3_C_To_HUDColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_HUDColor, CallFunc_GetTYVCGameMode_NewParam) == 0x000018, "Member 'WBP_GameSettingsV3_C_To_HUDColor::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_HUDColor, K2Node_Select_Default) == 0x000020, "Member 'WBP_GameSettingsV3_C_To_HUDColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.To Run Speed
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_To_Run_Speed final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_To_Run_Speed) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_To_Run_Speed");
static_assert(sizeof(WBP_GameSettingsV3_C_To_Run_Speed) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_To_Run_Speed");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Run_Speed, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_To_Run_Speed::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Run_Speed, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_To_Run_Speed::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.To Next XHair
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_To_Next_XHair final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_To_Next_XHair) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_To_Next_XHair");
static_assert(sizeof(WBP_GameSettingsV3_C_To_Next_XHair) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_To_Next_XHair");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Next_XHair, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_To_Next_XHair::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Next_XHair, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_To_Next_XHair::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.DoCustomNavigation_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameSettingsV3_C_DoCustomNavigation_0 final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_DoCustomNavigation_0) == 0x000001, "Wrong alignment on WBP_GameSettingsV3_C_DoCustomNavigation_0");
static_assert(sizeof(WBP_GameSettingsV3_C_DoCustomNavigation_0) == 0x000001, "Wrong size on WBP_GameSettingsV3_C_DoCustomNavigation_0");
static_assert(offsetof(WBP_GameSettingsV3_C_DoCustomNavigation_0, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_DoCustomNavigation_0::Navigation_0' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.To XHair Color
// 0x0048 (0x0048 - 0x0000)
struct WBP_GameSettingsV3_C_To_XHair_Color final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_To_XHair_Color) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_To_XHair_Color");
static_assert(sizeof(WBP_GameSettingsV3_C_To_XHair_Color) == 0x000048, "Wrong size on WBP_GameSettingsV3_C_To_XHair_Color");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, Temp_byte_Variable) == 0x000010, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, CallFunc_GetTYVCGameMode_NewParam) == 0x000018, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, K2Node_Select_Default) == 0x000030, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_XHair_Color, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'WBP_GameSettingsV3_C_To_XHair_Color::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.To Prev XHair
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_To_Prev_XHair final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_To_Prev_XHair) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_To_Prev_XHair");
static_assert(sizeof(WBP_GameSettingsV3_C_To_Prev_XHair) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_To_Prev_XHair");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Prev_XHair, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_To_Prev_XHair::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_To_Prev_XHair, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_To_Prev_XHair::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.HandleKeyDown
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameSettingsV3_C_HandleKeyDown final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Handled;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleKeyDown_Handled;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameSettingsV3_C_HandleKeyDown) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_HandleKeyDown");
static_assert(sizeof(WBP_GameSettingsV3_C_HandleKeyDown) == 0x000020, "Wrong size on WBP_GameSettingsV3_C_HandleKeyDown");
static_assert(offsetof(WBP_GameSettingsV3_C_HandleKeyDown, Key) == 0x000000, "Member 'WBP_GameSettingsV3_C_HandleKeyDown::Key' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HandleKeyDown, Handled) == 0x000018, "Member 'WBP_GameSettingsV3_C_HandleKeyDown::Handled' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HandleKeyDown, CallFunc_HandleKeyDown_Handled) == 0x000019, "Member 'WBP_GameSettingsV3_C_HandleKeyDown::CallFunc_HandleKeyDown_Handled' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HandleKeyDown, CallFunc_HasFocusedDescendants_ReturnValue) == 0x00001A, "Member 'WBP_GameSettingsV3_C_HandleKeyDown::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HandleKeyDown, CallFunc_HasAnyUserFocus_ReturnValue) == 0x00001B, "Member 'WBP_GameSettingsV3_C_HandleKeyDown::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HandleKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'WBP_GameSettingsV3_C_HandleKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.ToNextIndi
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_ToNextIndi final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_ToNextIndi) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_ToNextIndi");
static_assert(sizeof(WBP_GameSettingsV3_C_ToNextIndi) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_ToNextIndi");
static_assert(offsetof(WBP_GameSettingsV3_C_ToNextIndi, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_ToNextIndi::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ToNextIndi, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_ToNextIndi::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.ToManEndArc
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_ToManEndArc final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_ToManEndArc) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_ToManEndArc");
static_assert(sizeof(WBP_GameSettingsV3_C_ToManEndArc) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_ToManEndArc");
static_assert(offsetof(WBP_GameSettingsV3_C_ToManEndArc, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_ToManEndArc::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ToManEndArc, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_ToManEndArc::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.ToiCanAkim
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_ToiCanAkim final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameSettingsV3_C_ToiCanAkim) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_ToiCanAkim");
static_assert(sizeof(WBP_GameSettingsV3_C_ToiCanAkim) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_ToiCanAkim");
static_assert(offsetof(WBP_GameSettingsV3_C_ToiCanAkim, Navigation_0) == 0x000000, "Member 'WBP_GameSettingsV3_C_ToiCanAkim::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_ToiCanAkim, ReturnValue) == 0x000008, "Member 'WBP_GameSettingsV3_C_ToiCanAkim::ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.HasOwnerFocusForUser
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameSettingsV3_C_HasOwnerFocusForUser final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocusedDescendants_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameSettingsV3_C_HasOwnerFocusForUser) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_HasOwnerFocusForUser");
static_assert(sizeof(WBP_GameSettingsV3_C_HasOwnerFocusForUser) == 0x000020, "Wrong size on WBP_GameSettingsV3_C_HasOwnerFocusForUser");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, Widget) == 0x000000, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::Widget' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, UserIndex) == 0x000008, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::UserIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, Value) == 0x00000C, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::Value' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000D, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, CallFunc_HasUserFocusedDescendants_ReturnValue) == 0x000018, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::CallFunc_HasUserFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, CallFunc_HasUserFocus_ReturnValue) == 0x000019, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocusForUser, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'WBP_GameSettingsV3_C_HasOwnerFocusForUser::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_GameSettingsV3.WBP_GameSettingsV3_C.HasOwnerFocus
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameSettingsV3_C_HasOwnerFocus final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameSettingsV3_C_HasOwnerFocus) == 0x000008, "Wrong alignment on WBP_GameSettingsV3_C_HasOwnerFocus");
static_assert(sizeof(WBP_GameSettingsV3_C_HasOwnerFocus) == 0x000010, "Wrong size on WBP_GameSettingsV3_C_HasOwnerFocus");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocus, Widget) == 0x000000, "Member 'WBP_GameSettingsV3_C_HasOwnerFocus::Widget' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocus, Value) == 0x000008, "Member 'WBP_GameSettingsV3_C_HasOwnerFocus::Value' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocus, CallFunc_HasFocusedDescendants_ReturnValue) == 0x000009, "Member 'WBP_GameSettingsV3_C_HasOwnerFocus::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocus, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'WBP_GameSettingsV3_C_HasOwnerFocus::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocus, CallFunc_HasAnyUserFocus_ReturnValue) == 0x00000B, "Member 'WBP_GameSettingsV3_C_HasOwnerFocus::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameSettingsV3_C_HasOwnerFocus, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'WBP_GameSettingsV3_C_HasOwnerFocus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

