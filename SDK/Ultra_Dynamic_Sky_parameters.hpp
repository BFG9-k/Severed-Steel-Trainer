#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Sky

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UDS_LensFlareType_structs.hpp"
#include "UDS_NoiseType_structs.hpp"
#include "UDS_VolRT_Mode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UDS_Season_structs.hpp"
#include "UDS_SkyMode_structs.hpp"
#include "UDS_and_UDW_State_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ExecuteUbergraph_Ultra_Dynamic_Sky
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0xB];                                       // 0x0085(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Time_of_Day_Offset_ReturnValue;           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Current_Sunset_Event_Time_ReturnValue_1;  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0160(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_bUse;                                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000190, "Wrong size on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00004D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable_1) == 0x000061, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000062, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_2) == 0x000063, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_2) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000065, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_3) == 0x000066, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000067, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_4) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue_1) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_struct_Variable) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_5) == 0x0000C1, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_AddComponent_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_6) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_int_Variable) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_7) == 0x0000DD, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Abs_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsDedicatedServer_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_1) == 0x000129, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_8) == 0x00012A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_RandomFloatInRange_ReturnValue) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Time_of_Day_Offset_ReturnValue) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Time_of_Day_Offset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Less_FloatFloat_ReturnValue) == 0x000155, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunset_Event_Time_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunset_Event_Time_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_9) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00015D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_bUse) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_bUse' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Get_Item) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000181, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.SetUseSkylight
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_SetUseSkylight final
{
public:
	bool                                          bUse;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_SetUseSkylight) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_SetUseSkylight");
static_assert(sizeof(Ultra_Dynamic_Sky_C_SetUseSkylight) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_SetUseSkylight");
static_assert(offsetof(Ultra_Dynamic_Sky_C_SetUseSkylight, bUse) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_SetUseSkylight::bUse' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Sun and Moon Root Rotation
// 0x076C (0x076C - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation final
{
public:
	struct FVector                                Moon_Alignment;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Real_Moon_Phase;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x01F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue_1;         // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue_2;         // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue_3;         // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue_4;         // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_Process_Processed_Vector; // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x039C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x03C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x03DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF[0x1];                                      // 0x03DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_3;       // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0434(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_Process_Processed_Vector_1; // 0x04C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0524(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_4;       // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_1;              // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_1;                   // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x05A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_4;            // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x05E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x067C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x3];                                      // 0x0689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x068C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x069C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x06AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_4;            // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_5;       // 0x06CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x06DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x00076C, "Wrong size on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Moon_Alignment) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Phase) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Position) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Sun_Position) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00028C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue) == 0x00029C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Forward_Vector_ReturnValue_1) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Forward_Vector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0002C4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Using_2D_Clouds_ReturnValue) == 0x0002DC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Forward_Vector_ReturnValue_2) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Forward_Vector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X) == 0x0002EC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z) == 0x0002F4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Forward_Vector_ReturnValue_3) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Forward_Vector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X_1) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y_1) == 0x00030C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z_1) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000314, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00031C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_FClamp_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_FClamp_ReturnValue_1) == 0x000324, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00032C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Abs_ReturnValue) == 0x000334, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MapRangeClamped_ReturnValue) == 0x00033C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, K2Node_MakeStruct_LinearColor) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Forward_Vector_ReturnValue_4) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Forward_Vector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X_2) == 0x00035C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z_2) == 0x000364, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00036C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Cloud_Shadows_Light_Vector_Process_Processed_Vector) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Cloud_Shadows_Light_Vector_Process_Processed_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_FClamp_ReturnValue_2) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_1) == 0x000384, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_2) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x00039C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectVector_ReturnValue) == 0x0003AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X_3) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y_3) == 0x0003BC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z_3) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, K2Node_MakeStruct_LinearColor_1) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_1) == 0x0003D4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_2) == 0x0003D5, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanAND_ReturnValue) == 0x0003D6, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanAND_ReturnValue_1) == 0x0003D7, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectFloat_ReturnValue) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_3) == 0x0003DC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanAND_ReturnValue_2) == 0x0003DD, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_4) == 0x0003DE, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_3) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0003EC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetUpVector_ReturnValue) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectFloat_ReturnValue_1) == 0x0003FC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00040C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectVector_ReturnValue_1) == 0x00041C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Normal_ReturnValue) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000434, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x000444, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x00045C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x00046C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_4) == 0x00048C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X_4) == 0x0004A4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y_4) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z_4) == 0x0004AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_FClamp_ReturnValue_3) == 0x0004C4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Cloud_Shadows_Light_Vector_Process_Processed_Vector_1) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Cloud_Shadows_Light_Vector_Process_Processed_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0004E4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0004F4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Fraction_ReturnValue) == 0x000504, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00050C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000514, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000524, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X_5) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y_5) == 0x000534, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z_5) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x00053C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeVector_ReturnValue) == 0x000544, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_4) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectRotator_ReturnValue) == 0x00055C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectRotator_ReturnValue_1) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000574, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Fraction_ReturnValue_1) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00057C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Abs_ReturnValue_1) == 0x000584, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00058C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_FClamp_ReturnValue_4) == 0x00059C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Lerp_ReturnValue) == 0x0005AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeVector_ReturnValue_1) == 0x0005BC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_RotateAngleAxis_ReturnValue_4) == 0x0005D4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_RotateAngleAxis_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_X_6) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Y_6) == 0x00066C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BreakVector_Z_6) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000674, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeVector_ReturnValue_2) == 0x00067C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00068C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectVector_ReturnValue_2) == 0x00069C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectVector_ReturnValue_3) == 0x0006AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectFloat_ReturnValue_2) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectVector_ReturnValue_4) == 0x0006BC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_5) == 0x0006CC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0006DC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SelectFloat_ReturnValue_3) == 0x000764, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Active Variables
// 0x0720 (0x0720 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Active_Variables final
{
public:
	struct FLinearColor                           Sun_Disk_Color_Current;                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Dark_Color_Current;                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Light_Color_Current;                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Zenith_Base_Color_Current;                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Horizon_Base_Color_Current;                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Directional_Inscattering_Multiplier_Out;  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Directional_Inscattering_Multiplier_Out_1; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sky_Atmosphere_Fog_Influence_Influence;   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Volumetric_Cloud_Cloud_Top_Altitude_Cloud_Top_Altitude; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color; // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color; // 0x02BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color; // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color; // 0x02DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color; // 0x02EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Overcast_Swirl_ReturnValue;       // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Wisps_Opacity_ReturnValue;        // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sky_MID_Cloud_Density_ReturnValue;        // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Overall_Intensity_ReturnValue;    // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Lit_Intensity_ReturnValue;        // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Saturation_ReturnValue;           // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fog_Start_Distance_ReturnValue;           // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fog_Height_Falloff_ReturnValue;           // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Fog_Density_ReturnValue;          // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_2D_Cloud_Tint_ReturnValue;        // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue;   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_1; // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_2; // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_3; // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_4; // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_5; // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_6; // 0x0336(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_7; // 0x0337(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_8; // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Overcast_Light_Contribution_ReturnValue;  // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Volumetric_Aurora_Intensity_ReturnValue;  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0394(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Stars_Color_ReturnValue;          // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue; // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Mie_Scattering_Scale_ReturnValue; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Mie_Anisotropy_ReturnValue;       // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color; // 0x03F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue; // 0x0404(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           CallFunc_Tinted_Sky_Light_Maps_and_Blend_Source;   // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureCube*                           CallFunc_Tinted_Sky_Light_Maps_and_Blend_Destination; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Tinted_Sky_Light_Maps_and_Blend_Blend;    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Moon_Light_Specular_Scale_ReturnValue;    // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue; // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Moon_Light_Casting_Shadows_Yes;        // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Sun_Radius_ReturnValue;           // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Sun_Light_Intensity_ReturnValue;  // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Sun_Light_Casting_Shadows_Yes;         // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Sun_Light_Color_ReturnValue;      // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Disk_Color_ReturnValue;       // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity; // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness; // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Z_Disturbance_ReturnValue;        // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom; // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top; // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha;  // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha_1; // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue; // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue; // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion; // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Volumetric_Cloud_Subnoise_Amount_Erosion; // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Volumetric_Cloud_Taper_Position_Taper; // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Top; // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Bottom; // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Volumetric_Clouds_Density_ReturnValue; // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x04FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0516(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0517(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x051B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_11;                              // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x2];                                      // 0x0532(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0534(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0544(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0554(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x0564(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x0574(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0584(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x05C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C6[0x2];                                      // 0x05C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x05D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FA[0x2];                                      // 0x05FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x061A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B[0x1];                                      // 0x061B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_14;                              // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652[0x2];                                      // 0x0652(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x065E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x065F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0660(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x0670(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0680(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x06A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x06B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_3; // 0x06C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_4; // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x06E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_5;                // 0x06F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_4;              // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_5;              // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000720, "Wrong size on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Sun_Disk_Color_Current) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Sun_Disk_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Cloud_Dark_Color_Current) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Cloud_Dark_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Cloud_Light_Color_Current) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Cloud_Light_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Zenith_Base_Color_Current) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Zenith_Base_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Horizon_Base_Color_Current) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Horizon_Base_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_3) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_5) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_5) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_6) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_7) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_6) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_7) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000092, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_1) == 0x000093, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_2) == 0x000095, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000096, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_3) == 0x000097, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_4) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00009A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_5) == 0x00009B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Night_Filter_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_6) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_LinearColorLerp_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Directional_Inscattering_Multiplier_Out) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Directional_Inscattering_Multiplier_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Directional_Inscattering_Multiplier_Out_1) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Directional_Inscattering_Multiplier_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sky_Atmosphere_Fog_Influence_Influence) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sky_Atmosphere_Fog_Influence_Influence' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_IsValid_ReturnValue) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetCameraLocation_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X_1) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z_1) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x0001B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_8) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_8) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x0001CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Cloud_Top_Altitude_Cloud_Top_Altitude) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Cloud_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x0001E4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x0001EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_5) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_6) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_1) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_7) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000214, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_2) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_8) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x000224, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_3) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_9) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x000234, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_4) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_10) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x000244, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_5) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_11) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_5) == 0x000254, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_6) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_12) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_7) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_6) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_13) == 0x000274, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_7) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_14) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_9) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_8) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_9) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_9) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_8) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_15) == 0x0002A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_9) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color) == 0x0002BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color) == 0x0002CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color) == 0x0002DC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color) == 0x0002EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Overcast_Swirl_ReturnValue) == 0x0002FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Overcast_Swirl_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Wisps_Opacity_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Wisps_Opacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sky_MID_Cloud_Density_ReturnValue) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sky_MID_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Overall_Intensity_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Lit_Intensity_ReturnValue) == 0x00030C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Lit_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Saturation_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Saturation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Fog_Start_Distance_ReturnValue) == 0x000314, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Fog_Start_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Fog_Height_Falloff_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Fog_Height_Falloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Fog_Density_ReturnValue) == 0x00031C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Fog_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_2D_Cloud_Tint_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_2D_Cloud_Tint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_1) == 0x000331, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_2) == 0x000332, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_3) == 0x000333, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_4) == 0x000334, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_5) == 0x000335, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_6) == 0x000336, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_7) == 0x000337, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_8) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Coverage_Has_Changed_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000339, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00033A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x00033B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x00033C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Overcast_Light_Contribution_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Overcast_Light_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Aurora_Intensity_ReturnValue) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Aurora_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000394, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Stars_Color_ReturnValue) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Stars_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Mie_Scattering_Scale_ReturnValue) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Mie_Scattering_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Mie_Anisotropy_ReturnValue) == 0x0003EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Mie_Anisotropy_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color) == 0x0003F4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue) == 0x000404, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Tinted_Sky_Light_Maps_and_Blend_Source) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Tinted_Sky_Light_Maps_and_Blend_Source' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Tinted_Sky_Light_Maps_and_Blend_Destination) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Tinted_Sky_Light_Maps_and_Blend_Destination' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Tinted_Sky_Light_Maps_and_Blend_Blend) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Tinted_Sky_Light_Maps_and_Blend_Blend' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Moon_Light_Specular_Scale_ReturnValue) == 0x00042C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Moon_Light_Specular_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Is_Moon_Light_Casting_Shadows_Yes) == 0x000434, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Is_Moon_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sun_Radius_ReturnValue) == 0x000444, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sun_Radius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X_2) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y_2) == 0x00044C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z_2) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sun_Light_Intensity_ReturnValue) == 0x000454, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sun_Light_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Is_Sun_Light_Casting_Shadows_Yes) == 0x00045C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Is_Sun_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sun_Light_Color_ReturnValue) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sun_Light_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sun_Disk_Color_ReturnValue) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sun_Disk_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity) == 0x000484, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Z_Disturbance_ReturnValue) == 0x00048C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Z_Disturbance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha_1) == 0x0004B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue) == 0x0004BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Cloud_Subnoise_Amount_Erosion) == 0x0004D4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Cloud_Subnoise_Amount_Erosion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Cloud_Taper_Position_Taper) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Cloud_Taper_Position_Taper' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Top) == 0x0004DC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Bottom) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Clouds_Density_ReturnValue) == 0x0004E4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Clouds_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_10) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_10) == 0x0004EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_10) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_10) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetForwardVector_ReturnValue) == 0x0004FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X_3) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y_3) == 0x00050C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z_3) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000514, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x000515, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000516, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000517, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_1) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_2) == 0x000519, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_7) == 0x00051A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_8) == 0x00051B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_9) == 0x00051C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_11) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_11) == 0x000524, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_11) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_11) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000531, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000534, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectColor_ReturnValue) == 0x000544, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000554, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x000564, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x000574, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000584, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000594, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Abs_ReturnValue) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_12) == 0x00059C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_12) == 0x0005A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_10) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_12) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_12) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_13) == 0x0005BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Percent_IntInt_ReturnValue) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_IsDedicatedServer_ReturnValue) == 0x0005C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_3) == 0x0005C5, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0005CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectColor_ReturnValue_1) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue_1) == 0x0005F4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0005F9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0005FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_13) == 0x000604, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_14) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_13) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_13) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000619, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x00061A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_14) == 0x00061C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_15) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_14) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_14) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000634, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00063C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_15) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_16) == 0x000644, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_15) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_15) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000651, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue_2) == 0x000654, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x00065C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_11) == 0x00065D, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00065E, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x00065F, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectColor_ReturnValue_2) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectColor_ReturnValue_3) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetClampedLinearColorValue_ReturnValue_3) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetClampedLinearColorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetClampedLinearColorValue_ReturnValue_4) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetClampedLinearColorValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectColor_ReturnValue_4) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectColor_ReturnValue_5) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000704, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_12) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue_3) == 0x00070C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue_4) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue_5) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Time of Day in Real Time Format
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format final
{
public:
	struct FTimecode                              Time;                                              // 0x0000(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0014(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Time of Day using Time Code
// 0x0024 (0x0024 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code final
{
public:
	struct FTimecode                              Time_Code;                                         // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code) == 0x000024, "Wrong size on Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, Time_Code) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::Time_Code' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Static Variables
// 0x0820 (0x0820 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Static_Variables final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Stars_Texture_2D_Tex;                     // 0x00F0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_16;                        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_17;                        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_18;                        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_19;                        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_20;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_21;                        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_24;              // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x02D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x035C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Light_Color_ReturnValue;      // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x03C8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_RGBToHSV_Vector_HSV;                      // 0x0404(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x042C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_22;                        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x04A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0570(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x05B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_23;                              // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x3];                                      // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_23;                        // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_23;               // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Scale_Sample_Count_out;                   // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue_1;    // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture;               // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_1;             // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_2;             // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Scale_Sample_Count_out_1;                 // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1; // 0x0668(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_692[0x2];                                      // 0x0692(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Clouds_Texture_Tex;        // 0x06A0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x06C8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_2;                 // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_24;                              // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_24;                        // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_24;               // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0728(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_3;                           // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Clouds_Texture_Tex_1;      // 0x0750(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_3;                 // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789[0x3];                                      // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Scale_Sample_Count_out_2;                 // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Scale_Sample_Count_out_3;                 // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x07D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x07E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0800(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Static_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Static_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Static_Variables) == 0x000820, "Wrong size on Ultra_Dynamic_Sky_C_Update_Static_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_3) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_4) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_5) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_5) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_6) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_7) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_6) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_7) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_8) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_9) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_8) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_9) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_10) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_11) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_10) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_11) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_12) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_13) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_12) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_13) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_1) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_4) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_float_Variable) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_float_Variable_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_14) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_15) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_14) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_15) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_16) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_17) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_16) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_17) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_18) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_19) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_18) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_19) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_20) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_21) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_20) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_21) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Stars_Texture_2D_Tex) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Stars_Texture_2D_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_2) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x000159, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_4) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_5) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x000179, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_5) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_6) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_6) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_7) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_5) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_6) == 0x000199, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_7) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_8) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_9) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_7) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_8) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_10) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_8) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_9) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_11) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_9) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_10) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_12) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_10) == 0x0001E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_13) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_11) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_12) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_14) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_15) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_11) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_12) == 0x000209, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_13) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_14) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_16) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_17) == 0x000224, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_13) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_14) == 0x000229, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_15) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_16) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_18) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_19) == 0x000244, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_15) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_16) == 0x000249, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_17) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_18) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_20) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_21) == 0x000264, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_17) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_18) == 0x000269, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_19) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_20) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_22) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_23) == 0x000284, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_19) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_20) == 0x000289, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_21) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_24) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_21) == 0x00029C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y) == 0x0002B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue) == 0x0002C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0002D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00035C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x00036C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000374, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Current_Sun_Light_Color_ReturnValue) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Current_Sun_Light_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Lerp_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x00038C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X_1) == 0x00039C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y_1) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z_1) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0003AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0003BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_1) == 0x0003C1, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_1) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_RGBToHSV_Vector_HSV) == 0x000404, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_RGBToHSV_Vector_HSV' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_R) == 0x000414, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_G) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_B) == 0x00041C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_A) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000424, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_HSVToRGB_ReturnValue) == 0x00042C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00043C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue) == 0x00043D, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_1) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_22) == 0x000444, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_22) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_22) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_22) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00045C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000464, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00046C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_2) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000474, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x00047C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000484, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue_1) == 0x00048C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue_2) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0004A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x00052C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_FClamp_ReturnValue) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x000534, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue_3) == 0x00053C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000554, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_3) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector2D_X) == 0x000594, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector2D_Y) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_4) == 0x00059C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_5) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectString_ReturnValue) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Concat_StrStr_ReturnValue) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_23) == 0x0005CC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_23) == 0x0005D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_23) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_23) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out) == 0x0005E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_LinearColorToColor_ReturnValue_1) == 0x0005EC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_LinearColorToColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_2) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture_1) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_3) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture_2) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_4) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x000634, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_1) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_FloatToString_ReturnValue) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_6) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x000664, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000691, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x000694, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_2D_Clouds_Base_Clouds_Texture_Tex) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_2D_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_2) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_5) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_24) == 0x000704, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_24) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_24) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_24) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x00071C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_1) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue_4) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_2) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_3) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_4) == 0x00074C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_2D_Clouds_Base_Clouds_Texture_Tex_1) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_2D_Clouds_Base_Clouds_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_3) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_6) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x00078C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000794, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x00079C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x0007A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x0007AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_2) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x0007B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x0007BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_3) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x0007C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeRotator_ReturnValue) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0007D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0007E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Cloud Timing
// 0x0208 (0x0208 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Cloud_Timing final
{
public:
	float                                         Time_of_Day_Factor;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Clouds_Time_of_Day_Factor_ReturnValue;    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1;  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue_1;     // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue_2;     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_4;   // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_5;   // 0x01B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Cloud_Timing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing) == 0x000208, "Wrong size on Ultra_Dynamic_Sky_C_Set_Cloud_Timing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Time_of_Day_Factor) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Time_of_Day_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_3) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_3) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_4) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue_2) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_4) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_4) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SelectVector_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_4) == 0x00019C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_5) == 0x0001B4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001E4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construction Script Function
// 0x0740 (0x0740 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construction_Script_Function final
{
public:
	bool                                          Run_By_Counterpart;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Move_Static_Lights;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x0008(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs;           // 0x0078(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1;         // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x00B0(0x0560)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0613(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0616(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0617(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A[0x6];                                      // 0x062A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x063B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66B[0x5];                                      // 0x066B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_2;         // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_3;         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x06BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x06BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x06BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x06BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x06BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C3[0x5];                                      // 0x06C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     K2Node_Select_Default_2;                           // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     K2Node_Select_Default_3;                           // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x06F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x06F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x06F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F6[0x2];                                      // 0x06F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x06F8(0x0010)(NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0708(0x0010)(ReferenceParm)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0718(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A[0x6];                                      // 0x072A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_8; // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000740, "Wrong size on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Run_By_Counterpart) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Run_By_Counterpart' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Move_Static_Lights) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Move_Static_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_All_Volumetric_Cloud_MIDs_MIDs) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_All_Volumetric_Cloud_MIDs_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable) == 0x00009A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AA, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_2) == 0x0000AB, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_PostProcessSettings) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_1) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000611, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_3) == 0x000612, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsStandalone_ReturnValue) == 0x000613, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_2) == 0x000614, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_4) == 0x000615, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000616, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000617, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_5) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_6) == 0x000619, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_object_Variable) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_7) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_8) == 0x000629, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_object_Variable_1) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000639, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_1) == 0x00063A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00063B, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_1) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_3) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000669, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00066A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_2) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_2) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_3) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_3) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0006B9, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_4) == 0x0006BA, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0006BB, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0006BC, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0006BD, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0006BE, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_2) == 0x0006BF, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_3) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0006C1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_9) == 0x0006C2, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_1) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_2) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_3) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_1) == 0x0006F1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_2) == 0x0006F2, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_3) == 0x0006F3, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue) == 0x0006F4, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_1) == 0x0006F5, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_WeightedBlendable) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_WeightedBlendables) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_2) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_3) == 0x000729, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_8) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_8' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Variables Controlled by Weather
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather final
{
public:
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000062, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather, CallFunc_IsValid_ReturnValue) == 0x000063, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_by_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Settings Based on Platform and Scalability
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability final
{
public:
	bool                                          Requires_Updates;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Effects_Quality;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUDS_SkyMode                                  CallFunc_Map_Find_Value;                           // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, Requires_Updates) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::Requires_Updates' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, Effects_Quality) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::Effects_Quality' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_1) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_GetPlatformName_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Array_Contains_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00002A, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_3) == 0x00002B, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_4) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_5) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Map_Find_Value) == 0x00002E, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Map_Find_ReturnValue) == 0x00002F, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_GetGameUserSettings_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Directional Lights
// 0x0134 (0x0134 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Directional_Lights final
{
public:
	bool                                          Move_Static_Lights;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Directional_Lights) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Directional_Lights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Directional_Lights) == 0x000134, "Wrong size on Ultra_Dynamic_Sky_C_Update_Directional_Lights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, Move_Static_Lights) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::Move_Static_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Lights, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Lights::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Date and Time
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Date_and_Time final
{
public:
	struct FDateTime                              Date_Time;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, Date_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::Date_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Month) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Day) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Hour) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Minute) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Second) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Millisecond) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Approximate Real Sun Moon and Stars
// 0x05C8 (0x05C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars final
{
public:
	int32                                         Month_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_0;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Year_0;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_of_Day_0;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_Zone_0;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Only_Calculate_Sun;                                // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Sun_Vector;                                        // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Vector;                                       // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Real_Phase;                                        // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Phase_Alignment;                                   // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Celestial_Orbit;                                   // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Celestial_Yaw;                                     // 0x0044(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Equation_of_Time_Offset;                           // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Equation_of_Time_Curve;                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lunar_Inclination_Cycle;                           // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Center;                                       // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lunar_Time;                                        // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Earth_Center;                                      // 0x0074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Moon_Real_Phase;                                   // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Alignment;                                    // 0x0084(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Direction;                                    // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Celestial_North_Pole;                              // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stars_Orbit;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Stars_Yaw;                                         // 0x00AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Sun_Direction;                                     // 0x00BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Leap_Year;                                         // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UTC_Year;                                          // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Year;                                        // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Zenith_Direction;                                  // 0x00D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Axial_Tilt;                                        // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Viewer_Position_on_Earth;                          // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Local_Geocoordinate;                               // 0x00F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Seasonal_Time;                                     // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_of_Year_Index;                                 // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Month;                                       // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Day;                                         // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Day;                                           // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Month;                                         // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UTC_Time_of_Year;                                  // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UTC_Time_of_Day;                                   // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   CallFunc_Get_Current_Season_ReturnValue;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_1;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_1;               // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_4; // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_10;            // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_11;            // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_12;            // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_5; // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_7;                     // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_6; // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x04AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_13;            // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_14;            // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_3;         // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_9;                // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_15;            // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_4;         // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_16;            // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x053B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0540(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_Select_Default_1;                           // 0x0550(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_572[0x2];                                      // 0x0572(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57D[0x3];                                      // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default_2;                           // 0x05A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x0005C8, "Wrong size on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Month_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Month_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Day_0) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Year_0) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Year_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Time_of_Day_0) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Time_of_Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Time_Zone_0) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Time_Zone_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Only_Calculate_Sun) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Only_Calculate_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Vector) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Vector) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Real_Phase) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Phase_Alignment) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Orbit) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Yaw) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Offset) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Curve) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Curve' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Inclination_Cycle) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Inclination_Cycle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Center) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Time) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Earth_Center) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Earth_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Real_Phase) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Alignment) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Direction) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_North_Pole) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_North_Pole' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Orbit) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Yaw) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Direction) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Leap_Year) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Year) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Year) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Zenith_Direction) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Zenith_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Axial_Tilt) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Axial_Tilt' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Viewer_Position_on_Earth) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Viewer_Position_on_Earth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Geocoordinate) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Geocoordinate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Seasonal_Time) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Seasonal_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Day_of_Year_Index) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Day_of_Year_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Month) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Day) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Day) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Month) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Year) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Day) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_int_Array_Index_Variable) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_True_if_break_was_hit_Variable) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Not_PreBool_ReturnValue) == 0x000129, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_UtcNow_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Year) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Month) == 0x000144, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Day) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Hour) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Minute) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Second) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Millisecond) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00016C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_ReturnValue) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_1) == 0x00017C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_FloatFloat_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000189, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Get_Current_Season_ReturnValue) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Get_Current_Season_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetRightVector_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x00020C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_1) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_2) == 0x000224, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x00023C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch) == 0x00024C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_1) == 0x000254, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_1) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_1) == 0x00025C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000264, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00026C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_1) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000284, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000294, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_3) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue_1) == 0x0002BC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_2) == 0x0002C4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0002DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_RotateAngleAxis_ReturnValue) == 0x0002EC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeDateTime_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeDateTime_ReturnValue_1) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Days) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Hours) == 0x000324, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Minutes) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Seconds) == 0x00032C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Milliseconds) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000334, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x00033C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000344, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00034C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_3) == 0x000354, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000364, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000374, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_3) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_4) == 0x00037C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeVector_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_4) == 0x000394, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Dot_VectorVector_ReturnValue) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_4) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_DegAcos_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0003B4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Cross_VectorVector_ReturnValue) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_5) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_X) == 0x0003D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Y) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Z) == 0x0003DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_LinearColor) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue) == 0x0003F4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x0003FC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_4) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x000404, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_10) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x00040C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_11) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_IntInt_ReturnValue) == 0x000414, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00041C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_2) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue) == 0x000424, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_12) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_5) == 0x00042C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x00043C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_6) == 0x000454, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_5) == 0x00046C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_7) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x000484, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_6) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_7) == 0x000494, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_6) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0004AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0004BC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_13) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_14) == 0x0004C4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_3) == 0x0004CC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_8) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0004DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_9) == 0x0004EC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_1) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_2) == 0x000504, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_15) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000514, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_4) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x00051C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_IntInt_ReturnValue) == 0x000524, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_3) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00052C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_FloatFloat_ReturnValue_16) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000534, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable) == 0x000539, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable_1) == 0x00053A, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable_2) == 0x00053B, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default_1) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item_1) == 0x000564, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_4) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Length_ReturnValue) == 0x00056C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_IntInt_ReturnValue_1) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanAND_ReturnValue_1) == 0x000571, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000574, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00057C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000584, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_1) == 0x00058C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_5) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_6) == 0x000594, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_IntInt_ReturnValue) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_2) == 0x00059C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_3) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default_2) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_7) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item_2) == 0x0005BC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Force Valid Day
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Force_Valid_Day final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Day
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Day final
{
public:
	bool                                          Leap_Year;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Day) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Leap_Year) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_bool_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Array_Get_Item) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Daylight Savings Time
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x001C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_2;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DateTimeDateTime_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue; // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_LessEqual_DateTimeDateTime_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_LessEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_2) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000053, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Date and Time
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time final
{
public:
	struct FDateTime                              Current_Date_and_Time;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x000C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, Current_Date_and_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::Current_Date_and_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_MakeDateTime_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.OnRep_Replicated Time of Day
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Static Clouds
// 0x0104 (0x0104 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Static_Clouds final
{
public:
	float                                         Shading_Intensity;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_6;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_7;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_8;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_9;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_10;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Static_Clouds) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Static_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Static_Clouds) == 0x000104, "Wrong size on Ultra_Dynamic_Sky_C_Update_Static_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, Shading_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::Shading_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_BreakVector_X) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_BreakVector_Z) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_4) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_5) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, K2Node_MakeStruct_LinearColor) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GetForwardVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_BreakVector_Y_1) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_6) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_7) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_8) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Lerp_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_9) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_FClamp_ReturnValue_10) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, K2Node_MakeStruct_LinearColor_1) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_LinearColorLerp_ReturnValue) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create UDS and UDW State for Saving
// 0x02B0 (0x02B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving final
{
public:
	struct FUDS_and_UDW_State                     Packaged_State;                                    // 0x0000(0x00D8)(Parm, OutParm, HasGetValueTypeHash)
	struct FUDS_and_UDW_State                     State;                                             // 0x00D8(0x00D8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_and_UDW_State                     CallFunc_Get_State_for_Saving_UDW_State;           // 0x01C8(0x00D8)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time; // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x0002B0, "Wrong size on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, Packaged_State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::Packaged_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, State) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_State_for_Saving_UDW_State) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_State_for_Saving_UDW_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_IsValid_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Saved UDS and UDW State
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State final
{
public:
	struct FUDS_and_UDW_State                     State;                                             // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State) == 0x000110, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Year) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Month) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Day) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Hour) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Minute) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Second) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Millisecond) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sunrise Times
// 0x013C (0x013C - 0x0000)
struct Ultra_Dynamic_Sky_C_Sunrise_Times final
{
public:
	float                                         Sunset_Time;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Factor;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sunrise_Time;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_5;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1; // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1; // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1; // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1; // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x00013C, "Wrong size on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunset_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunset_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Current_Factor) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Current_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunrise_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunrise_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_3) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_4) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable_1) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue_1) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_5) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_6) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_7) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_8) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_9) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_10) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_11) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default_1) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X_1) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z_1) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Less_FloatFloat_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Moon Parameters
// 0x003C (0x003C - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Moon_Parameters final
{
public:
	float                                         CallFunc_Moon_Light_Current_Intensity_Out;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Light_Material_Color_ReturnValue; // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Material_Intensity_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Phase_Angle_ReturnValue;     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Moon_Parameters");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters) == 0x00003C, "Wrong size on Ultra_Dynamic_Sky_C_Update_Moon_Parameters");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Moon_Light_Current_Intensity_Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Moon_Light_Current_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Light_Material_Color_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Light_Material_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Material_Intensity_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Material_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Phase_Angle_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Phase_Angle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Lens Flare
// 0x0600 (0x0600 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Material;      // 0x0000(0x0028)(HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0028(0x0010)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0060(0x0010)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0080(0x0560)()
	struct FLinearColor                           CallFunc_Current_Lens_Flare_Color_ReturnValue;     // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1[0x3];                                      // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare) == 0x000600, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Lens_Flare_Parent_Material_Material) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Lens_Flare_Parent_Material_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_WeightedBlendable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeArray_Array) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_DynamicCast_AsMaterial_Interface) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_WeightedBlendables) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_PostProcessSettings) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Current_Lens_Flare_Color_ReturnValue) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Current_Lens_Flare_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Not_PreBool_ReturnValue) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0005F4, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_BooleanAND_ReturnValue) == 0x0005F9, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Lens Flare
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Lens_Flare final
{
public:
	float                                         CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Hypotenuse_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetCameraLocation_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetFOVAngle_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_X) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Z) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Hypotenuse_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetCameraRotation_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetForwardVector_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_X_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Y_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetForwardVector_ReturnValue_2) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Less_FloatFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Dot_VectorVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_DegAcos_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanAND_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000095, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanOR_ReturnValue) == 0x0000A2, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A3, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A5, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Sky Light Intensity
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity final
{
public:
	float                                         New_Sky_Light_Intensity_Multiplier;                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Transition_Time;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, New_Sky_Light_Intensity_Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::New_Sky_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, Transition_Time) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::Transition_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Dynamic Sky Light Multiplier
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_FInterpTo_Constant_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Clouds Density
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Volumetric Cloud Extinction Scales
// 0x002C (0x002C - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales final
{
public:
	float                                         Top;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bottom;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales) == 0x00002C, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, Top) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, Bottom) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Taper Position
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position final
{
public:
	float                                         Taper;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, Taper) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::Taper' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Subnoise Amount
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount final
{
public:
	float                                         erosion;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, erosion) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::erosion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Multiscattering Occlusion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion final
{
public:
	float                                         Occlusion;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Abs_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Albedo
// 0x0064 (0x0064 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000064, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Macro Variation
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Parent Materials
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials final
{
public:
	class UMaterialInterface*                     Simplified;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Complex;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_3;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_4;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_5;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x0000B0, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Simplified) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Complex) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_3) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_3) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_4) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_5) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_4) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_6) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_object_Variable_7) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_5) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_4) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_5) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lerp to Simplified Clouds
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, Alpha) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Texture Velocity
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_ClampVectorSize_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Base Clouds Scale
// 0x000C (0x000C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x00000C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.All Volumetric Cloud MIDs
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs final
{
public:
	bool                                          Shadows;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, Shadows) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::Shadows' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, MIDs) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, Temp_bool_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, K2Node_MakeArray_Array) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Volumetric Cloud Emissive Colors
// 0x016C (0x016C - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors final
{
public:
	struct FLinearColor                           Bottom;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Top;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Overcast_Light_Contribution_ReturnValue;  // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_4;  // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_5;  // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_3; // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_6;  // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_4; // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_7;  // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x00016C, "Wrong size on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Night_Filter_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Overcast_Light_Contribution_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Overcast_Light_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_4) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_5) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_3) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_6) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_4) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_SelectColor_ReturnValue) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_7) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_7' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Z Disturbance
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Z_Disturbance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Z_Disturbance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Z_Disturbance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Lerp_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Cloud Shadows Intensity and Softness
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness final
{
public:
	float                                         Intensity;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Softness;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, Softness) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Lerp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Lerp_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Cloud Density
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Intensity
// 0x002C (0x002C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x00002C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Flat_Cloudiness_Alpha_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Flat_Cloudiness_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Color
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Current_Sun_Disk_Intensity_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Current_Sun_Disk_Intensity_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Current_Sun_Disk_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_SelectColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Color
// 0x007C (0x007C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x00007C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, K2Node_Select_Default) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_SelectColor_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Sun Light Casting Shadows
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Intensity
// 0x005C (0x005C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Directional_Inscattering_Multiplier_Out;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x00005C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Directional_Inscattering_Multiplier_Out) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Directional_Inscattering_Multiplier_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Y) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Radius
// 0x002C (0x002C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Radius final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x00002C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Y) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Forward Vector
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Forward_Vector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Forward_Vector) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Forward_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Forward_Vector) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Forward_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Forward_Vector, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Forward_Vector::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Forward_Vector, CallFunc_GetForwardVector_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Sun_Forward_Vector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Current Intensity
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity final
{
public:
	float                                         Out;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calculate_Night_Brightness_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Calculate_Night_Brightness_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Calculate_Night_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_BreakVector_X) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_BreakVector_Z) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_GetForwardVector_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_BreakVector_X_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_BreakVector_Y_1) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_FClamp_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Current_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Moon Light Casting Shadows
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_GetForwardVector_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x00001F, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Volumetric Scattering Intensity
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Specular Scale
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_GetForwardVector_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_X) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Z) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Scale and Cutout Value
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cutout;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, Cutout) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::Cutout' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_GetForwardVector_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_Y) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Phase Angle
// 0x003C (0x003C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x00003C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Material Intensity
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Flat_Cloudiness_Alpha_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Flat_Cloudiness_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Y) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Lit Percent
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Material Color
// 0x0094 (0x0094 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x000094, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetForwardVector_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Y) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Tinted Sky Light Maps and Blend
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend final
{
public:
	class UTextureCube*                           Source;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureCube*                           Destination;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureCube*                           K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, Source) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::Source' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, Destination) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::Destination' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, Blend) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::Blend' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, Temp_bool_Variable) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, Temp_bool_Variable_1) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, CallFunc_Less_FloatFloat_ReturnValue) == 0x000016, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, K2Node_Select_Default) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend, K2Node_Select_Default_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Tinted_Sky_Light_Maps_and_Blend::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Light Lower Hemisphere Color
// 0x0054 (0x0054 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000054, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_R) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_G) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_B) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_A) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_MakeColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_SelectColor_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Sky Light Color and Intensity
// 0x0200 (0x0200 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity final
{
public:
	float                                         Out_Intensity;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Find_Overall_Intensity_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Absent_Directional_Lights_Brightness_ReturnValue_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Tint_Color_By_Weather_ReturnValue;        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_5;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x01E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_1;   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000200, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Color) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Find_Overall_Intensity_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Find_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Night_Filter_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Night_Filter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Tint_Color_By_Weather_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Tint_Color_By_Weather_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Current_Light_Pollution_ReturnValue) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_GetForwardVector_ReturnValue) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_BreakVector_X) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_BreakVector_Y) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_BreakVector_Z) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FClamp_ReturnValue) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000144, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectColor_ReturnValue) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x00019C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_5) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectColor_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0001E4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_1) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0001FC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Anisotropy
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Flat_Cloudiness_Alpha_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Flat_Cloudiness_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Lerp_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Scattering Scale
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue_1;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_Alpha_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_Alpha_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_Alpha_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Rayleigh Scattering Color
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Stars Color
// 0x0054 (0x0054 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Stars_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x000054, "Wrong size on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Flat_Cloudiness_Alpha_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Flat_Cloudiness_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Night Sky Glow
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Aurora Intensity
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Aurora_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Tint Color By Weather
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Tint_Color_By_Weather final
{
public:
	struct FLinearColor                           Clear_Color;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Partly_Cloudy_Color;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Overcast_Color;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Tint_Color_By_Weather");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Tint_Color_By_Weather");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, Clear_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::Clear_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, Partly_Cloudy_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::Partly_Cloudy_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, Overcast_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::Overcast_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, CallFunc_LinearColorLerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tint_Color_By_Weather, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Tint_Color_By_Weather::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Adjust Color for Night Brightness
// 0x0064 (0x0064 - 0x0000)
struct Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness final
{
public:
	struct FLinearColor                           In_Color;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calculate_Night_Brightness_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness) == 0x000064, "Wrong size on Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, In_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::In_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_Calculate_Night_Brightness_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_Calculate_Night_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_BreakVector_Y) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_GetFloatValue_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness, CallFunc_LinearColorLerp_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Adjust_Color_for_Night_Brightness::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Light Contribution
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Light_Contribution final
{
public:
	bool                                          For_Volumetric_Clouds;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue_1;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Light_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Light_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, For_Volumetric_Clouds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::For_Volumetric_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Using_2D_Clouds_ReturnValue_1) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Using_2D_Clouds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectFloat_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectColor_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Light Pollution
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Light_Pollution final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Use Sky Atmosphere
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Dimming Directional Lights
// 0x0006 (0x0006 - 0x0000)
struct Ultra_Dynamic_Sky_C_Dimming_Directional_Lights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000006, "Wrong size on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Using 2D Clouds
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Using_2D_Clouds final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Using_2D_Clouds) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Using_2D_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Using_2D_Clouds) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Using_2D_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Coverage Has Changed
// 0x0007 (0x0007 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed) == 0x000007, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed, CallFunc_BooleanOR_ReturnValue_2) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Has_Changed::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Phase Multiplier
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Absent Directional Lights Brightness
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_GetForwardVector_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_SelectFloat_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Darkening
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Darkening final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Darkening) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Darkening");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Darkening) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Darkening");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Find Overall Intensity
// 0x003C (0x003C - 0x0000)
struct Ultra_Dynamic_Sky_C_Find_Overall_Intensity final
{
public:
	float                                         Cloud_Darkening;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue_1;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calculate_Night_Brightness_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cloud_Darkening_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Find_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity) == 0x00003C, "Wrong size on Ultra_Dynamic_Sky_C_Find_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, Cloud_Darkening) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::Cloud_Darkening' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Night_Filter_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Night_Filter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Calculate_Night_Brightness_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Calculate_Night_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue_2) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Cloud_Darkening_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Cloud_Darkening_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue_3) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Calculate Night Brightness
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Calculate_Night_Brightness final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Calculate_Night_Brightness) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Calculate_Night_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Calculate_Night_Brightness) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Calculate_Night_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Calculate_Night_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Calculate_Night_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Calculate_Night_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Calculate_Night_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Calculate_Night_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Calculate_Night_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Calculate_Night_Brightness, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Calculate_Night_Brightness::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Night Filter
// 0x0024 (0x0024 - 0x0000)
struct Ultra_Dynamic_Sky_C_Night_Filter final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000024, "Wrong size on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Y) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Flat Cloudiness Alpha
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_SkyMode>                          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha, K2Node_MakeArray_Array) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness_Alpha::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current 2D Cloud Tint
// 0x0024 (0x0024 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000024, "Wrong size on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Time of Day Offset
// 0x005C (0x005C - 0x0000)
struct Ultra_Dynamic_Sky_C_Time_of_Day_Offset final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Forward_Vector_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x00005C, "Wrong size on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Sun_Forward_Vector_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Sun_Forward_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_X) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_Z) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Season
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Season final
{
public:
	int32                                         Month_In;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_In;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_5;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_6;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_7;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   K2Node_Select_Default_1;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   K2Node_Select_Default_2;                           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Season) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Season");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Season) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Season");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Month_In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Month_In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Day_In) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Day_In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_bool_Variable) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_int_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_1) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_2) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_3) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_int_Variable_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_4) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_5) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_6) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, Temp_byte_Variable_7) == 0x00001B, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_Percent_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_SelectInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_Divide_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_SelectInt_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, CallFunc_Percent_IntInt_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, K2Node_Select_Default_1) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Season, K2Node_Select_Default_2) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Season::K2Node_Select_Default_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Convert Time of Day to Time Code
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              Timecode;                                          // 0x0004(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              K2Node_MakeStruct_Timecode;                        // 0x0044(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, Timecode) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_3) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, K2Node_MakeStruct_Timecode) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::K2Node_MakeStruct_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.MS to Time of Day
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_MS_to_Time_of_Day final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Miliseconds;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Hours) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Hours' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Minutes) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Minutes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Seconds) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Seconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Miliseconds) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Miliseconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Total Time Elapsed
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Total_Time_Elapsed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanOR_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Clouds Time of Day Factor
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Total_Time_Elapsed_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Total_Time_Elapsed_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Total_Time_Elapsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunrise Event Time
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunset Event Time
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Sky MID Parent Material Instance
// 0x0158 (0x0158 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Map_Find_Value;                           // 0x0100(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0130(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x000158, "Wrong size on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, Temp_bool_Variable) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanOR_ReturnValue) == 0x000082, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue) == 0x000083, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000A9, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AA, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_2) == 0x0000AB, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_4) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_Value) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, K2Node_Select_Default) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Density
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Density final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Night_Filter_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Height Falloff
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Height_Falloff final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Start Distance
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Start_Distance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Saturation
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Saturation final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Saturation) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Saturation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Saturation) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Saturation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_FClamp_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lit Intensity
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lit_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overall Intensity
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overall_Intensity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Find_Overall_Intensity_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Find_Overall_Intensity_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Find_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky MID Cloud Density
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Wisps Opacity
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Wisps_Opacity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Flat_Cloudiness_Alpha_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Flat_Cloudiness_Alpha_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Flat_Cloudiness_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overcast Swirl
// 0x000C (0x000C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overcast_Swirl final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overcast_Swirl");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl) == 0x00000C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overcast_Swirl");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Factor Ambient Directional Balance
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance final
{
public:
	float                                         For_Material;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         For_Lights;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance, For_Material) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance::For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance, For_Lights) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance::For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Factor_Ambient_Directional_Balance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lens Flare Color
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lens_Flare_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fire Editor Dispatchers
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers final
{
public:
	float                                         Time_in_Range;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, Time_in_Range) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::Time_in_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Scale Sample Count
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Scale_Sample_Count final
{
public:
	float                                         In;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Out;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Out) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_float_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, K2Node_Select_Default) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Fog Base Colors
// 0x0210 (0x0210 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors final
{
public:
	struct FLinearColor                           Ambient_Fog_Color_0;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Directional_Base_Color;                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue_2;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue_3;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Find_Overall_Intensity_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Find_Overall_Intensity_ReturnValue_1;     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Subtract_LinearColorLinearColor_ReturnValue; // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Subtract_LinearColorLinearColor_ReturnValue_1; // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      K2Node_Select_Default;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Adjust_Color_for_Night_Brightness_ReturnValue; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_2;    // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_3;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors) == 0x000210, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Ambient_Fog_Color_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Ambient_Fog_Color_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Directional_Base_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Night_Filter_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Night_Filter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Night_Filter_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Night_Filter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Night_Filter_ReturnValue_3) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Night_Filter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Find_Overall_Intensity_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Find_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Find_Overall_Intensity_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Find_Overall_Intensity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_LinearColorLinearColor_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_LinearColorLinearColor_ReturnValue_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Abs_ReturnValue) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetForwardVector_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Temp_bool_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_X) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FClamp_ReturnValue) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FClamp_ReturnValue_1) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_2) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_4) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_5) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_6) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, K2Node_Select_Default) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Adjust_Color_for_Night_Brightness_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Adjust_Color_for_Night_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_2) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_3) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Inscattering Color
// 0x00E4 (0x00E4 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color final
{
public:
	struct FLinearColor                           Inscattering_Color;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x0000E4, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_SelectColor_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Directional Inscattering Color
// 0x004C (0x004C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color final
{
public:
	struct FLinearColor                           Directional_Inscattering_Color;                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x00004C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, Directional_Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_SelectColor_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Ambient Color
// 0x009C (0x009C - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color final
{
public:
	struct FLinearColor                           Sky_Ambient_Color;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x00009C, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, Sky_Ambient_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Night_Filter_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_X) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_Z) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_FClamp_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_FClamp_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Base Cloud Height
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height final
{
public:
	float                                         Base_Cloud_Height_0;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, Base_Cloud_Height_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::Base_Cloud_Height_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Height
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height final
{
public:
	float                                         Layer_Height;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, Layer_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Cloud Top Altitude
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude final
{
public:
	float                                         Cloud_Top_Altitude;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, Cloud_Top_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_BreakVector_Y) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Cloud_Top_Altitude::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Shadows Altitude
// 0x002C (0x002C - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude final
{
public:
	float                                         Cloud_Shadows_Altitude;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude) == 0x00002C, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, Cloud_Shadows_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_BreakVector_X) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_BreakVector_Z) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Scale
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale final
{
public:
	float                                         Layer_Scale;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, Layer_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Query Project Settings
// 0x0003 (0x0003 - 0x0000)
struct Ultra_Dynamic_Sky_C_Query_Project_Settings final
{
public:
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Query_Project_Settings) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Query_Project_Settings");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Query_Project_Settings) == 0x000003, "Wrong size on Ultra_Dynamic_Sky_C_Query_Project_Settings");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky Atmosphere Fog Influence
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence final
{
public:
	float                                         Influence;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Material; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Factor_Ambient_Directional_Balance_For_Lights; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, Influence) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::Influence' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_GetFloatValue_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Factor_Ambient_Directional_Balance_For_Material) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Factor_Ambient_Directional_Balance_For_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Factor_Ambient_Directional_Balance_For_Lights) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Factor_Ambient_Directional_Balance_For_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Influence::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Inscattering Multiplier
// 0x000C (0x000C - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier final
{
public:
	float                                         Out;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x00000C, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Light Vector Process
// 0x006C (0x006C - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Processed_Vector;                                  // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process) == 0x00006C, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, Processed_Vector) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::Processed_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_X) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Z) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_MapRangeClamped_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_X_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_LinearColor) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Load Required Assets
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Sky_C_Load_Required_Assets final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Material;      // 0x0000(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Clouds_Texture_Tex;        // 0x0038(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0060(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_7;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Stars_Texture_2D_Tex;                     // 0x00C0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x00E8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_8;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_9;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x000120, "Wrong size on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Lens_Flare_Parent_Material_Material) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Lens_Flare_Parent_Material_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_2D_Clouds_Base_Clouds_Texture_Tex) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_2D_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_7) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Stars_Texture_2D_Tex) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Stars_Texture_2D_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_8) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_9) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_9' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Stars Texture 2D
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Stars_Texture_2D final
{
public:
	TSoftObjectPtr<class UTexture2D>              tex;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0030(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Stars_Texture_2D) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Stars_Texture_2D");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Stars_Texture_2D) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Stars_Texture_2D");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Stars_Texture_2D, tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Stars_Texture_2D::tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Stars_Texture_2D, Temp_bool_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Stars_Texture_2D::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Stars_Texture_2D, K2Node_Select_Default) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Stars_Texture_2D::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Overcast Turbulence
// 0x005C (0x005C - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence final
{
public:
	float                                         Turbulence_Strength;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x00005C, "Wrong size on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, Turbulence_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::Turbulence_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SelectVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Current Volumetric Clouds MID
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Volumetric Mode
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode final
{
public:
	EUDS_VolRT_Mode                               Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_VolRT_Mode                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_byte_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_2) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_3) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_SelectString_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Overcast Turbulence
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence final
{
public:
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0000(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_AsTexture_2D) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_IsDedicatedServer_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Base Clouds Texture
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture final
{
public:
	TSoftObjectPtr<class UTexture2D>              tex;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_NoiseType                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x00A8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x00F8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture) == 0x000120, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, K2Node_Select_Default) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.2D Clouds Base Clouds Texture
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture final
{
public:
	TSoftObjectPtr<class UTexture2D>              tex;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_NoiseType                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x00A8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x00F8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture) == 0x000120, "Wrong size on Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture, K2Node_Select_Default) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Clouds_Texture::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Lens Flare Parent Material
// 0x0130 (0x0130 - 0x0000)
struct Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_LensFlareType                            Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x00E0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0108(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000130, "Wrong size on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Material) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_bool_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.GetTime
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_GetTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_GetTime) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_GetTime");
static_assert(sizeof(Ultra_Dynamic_Sky_C_GetTime) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_GetTime");
static_assert(offsetof(Ultra_Dynamic_Sky_C_GetTime, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_GetTime::ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.SetTime
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_SetTime final
{
public:
	float                                         InTime;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_SetTime) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_SetTime");
static_assert(sizeof(Ultra_Dynamic_Sky_C_SetTime) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_SetTime");
static_assert(offsetof(Ultra_Dynamic_Sky_C_SetTime, InTime) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_SetTime::InTime' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_SetTime, ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_SetTime::ReturnValue' has a wrong offset!");

}

