#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_EnsureNearDestination

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_EnsureNearDestination.BTT_EnsureNearDestination_C.ExecuteUbergraph_BTT_EnsureNearDestination
// 0x0060 (0x0060 - 0x0000)
struct BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination) == 0x000008, "Wrong alignment on BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination");
static_assert(sizeof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination) == 0x000060, "Wrong size on BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, EntryPoint) == 0x000000, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BreakVector_X) == 0x000024, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BreakVector_Y) == 0x000028, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000030, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_Vector_Distance_ReturnValue) == 0x00003C, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_Abs_ReturnValue) == 0x000054, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BTT_EnsureNearDestination_C_ExecuteUbergraph_BTT_EnsureNearDestination::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BTT_EnsureNearDestination.BTT_EnsureNearDestination_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_EnsureNearDestination_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_EnsureNearDestination_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_EnsureNearDestination_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_EnsureNearDestination_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_EnsureNearDestination_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_EnsureNearDestination_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_EnsureNearDestination_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_EnsureNearDestination_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_EnsureNearDestination_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

