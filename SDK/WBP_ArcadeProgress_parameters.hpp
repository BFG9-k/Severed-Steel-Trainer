#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArcadeProgress

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.ExecuteUbergraph_WBP_ArcadeProgress
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTYVCSaveController*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInitialLoadComplete_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelForXP_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress) == 0x000008, "Wrong alignment on WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress");
static_assert(sizeof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress) == 0x0000A8, "Wrong size on WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, EntryPoint) == 0x000000, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, Temp_bool_Variable) == 0x000005, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, Temp_byte_Variable) == 0x000006, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_GetInitialLoadComplete_ReturnValue) == 0x000010, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_GetInitialLoadComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00002C, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, K2Node_Event_MyGeometry) == 0x000030, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, K2Node_Event_InDeltaTime) == 0x000068, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_FInterpTo_ReturnValue) == 0x00006C, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_FTrunc_ReturnValue) == 0x000074, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000078, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, K2Node_Select_Default) == 0x000080, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_GetTYVCGameMode_NewParam) == 0x000088, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000090, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_GetLevelForXP_ReturnValue) == 0x000098, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_GetLevelForXP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00009C, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'WBP_ArcadeProgress_C_ExecuteUbergraph_WBP_ArcadeProgress::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ArcadeProgress_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ArcadeProgress_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ArcadeProgress_C_PreConstruct");
static_assert(sizeof(WBP_ArcadeProgress_C_PreConstruct) == 0x000001, "Wrong size on WBP_ArcadeProgress_C_PreConstruct");
static_assert(offsetof(WBP_ArcadeProgress_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ArcadeProgress_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_ArcadeProgress_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArcadeProgress_C_Tick) == 0x000004, "Wrong alignment on WBP_ArcadeProgress_C_Tick");
static_assert(sizeof(WBP_ArcadeProgress_C_Tick) == 0x00003C, "Wrong size on WBP_ArcadeProgress_C_Tick");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_ArcadeProgress_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_ArcadeProgress_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.SetToXP
// 0x0078 (0x0078 - 0x0000)
struct WBP_ArcadeProgress_C_SetToXP final
{
public:
	float                                         InXP;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelForXP_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetXPForLevel_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXPToProgress_Needed;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArcadeProgress_C_SetToXP) == 0x000008, "Wrong alignment on WBP_ArcadeProgress_C_SetToXP");
static_assert(sizeof(WBP_ArcadeProgress_C_SetToXP) == 0x000078, "Wrong size on WBP_ArcadeProgress_C_SetToXP");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, InXP) == 0x000000, "Member 'WBP_ArcadeProgress_C_SetToXP::InXP' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, Temp_bool_Variable) == 0x000004, "Member 'WBP_ArcadeProgress_C_SetToXP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_GetTYVCGameMode_NewParam) == 0x000010, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000018, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_GetLevelForXP_ReturnValue) == 0x000020, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_GetLevelForXP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_GetXPForLevel_ReturnValue) == 0x000044, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_GetXPForLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_FMod_Remainder) == 0x000050, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_FMod_ReturnValue) == 0x000054, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_GetXPToProgress_Needed) == 0x000058, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_GetXPToProgress_Needed' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_FTrunc_ReturnValue_1) == 0x00005C, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000060, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'WBP_ArcadeProgress_C_SetToXP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_SetToXP, K2Node_Select_Default) == 0x000070, "Member 'WBP_ArcadeProgress_C_SetToXP::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.AnimateToXP
// 0x001C (0x001C - 0x0000)
struct WBP_ArcadeProgress_C_AnimateToXP final
{
public:
	int32                                         StartXP;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndXP;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressToShow;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRemainder;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartRemainder;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndLevel;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartLevel;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArcadeProgress_C_AnimateToXP) == 0x000004, "Wrong alignment on WBP_ArcadeProgress_C_AnimateToXP");
static_assert(sizeof(WBP_ArcadeProgress_C_AnimateToXP) == 0x00001C, "Wrong size on WBP_ArcadeProgress_C_AnimateToXP");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, StartXP) == 0x000000, "Member 'WBP_ArcadeProgress_C_AnimateToXP::StartXP' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, EndXP) == 0x000004, "Member 'WBP_ArcadeProgress_C_AnimateToXP::EndXP' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, ProgressToShow) == 0x000008, "Member 'WBP_ArcadeProgress_C_AnimateToXP::ProgressToShow' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, EndRemainder) == 0x00000C, "Member 'WBP_ArcadeProgress_C_AnimateToXP::EndRemainder' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, StartRemainder) == 0x000010, "Member 'WBP_ArcadeProgress_C_AnimateToXP::StartRemainder' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, EndLevel) == 0x000014, "Member 'WBP_ArcadeProgress_C_AnimateToXP::EndLevel' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateToXP, StartLevel) == 0x000018, "Member 'WBP_ArcadeProgress_C_AnimateToXP::StartLevel' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.GetXPToProgress
// 0x0028 (0x0028 - 0x0000)
struct WBP_ArcadeProgress_C_GetXPToProgress final
{
public:
	int32                                         ProgressingFrom;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Needed;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXPForLevel_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXPForLevel_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArcadeProgress_C_GetXPToProgress) == 0x000008, "Wrong alignment on WBP_ArcadeProgress_C_GetXPToProgress");
static_assert(sizeof(WBP_ArcadeProgress_C_GetXPToProgress) == 0x000028, "Wrong size on WBP_ArcadeProgress_C_GetXPToProgress");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, ProgressingFrom) == 0x000000, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::ProgressingFrom' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, Needed) == 0x000004, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::Needed' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, CallFunc_GetTYVCGameMode_NewParam) == 0x000010, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, CallFunc_GetXPForLevel_ReturnValue) == 0x000018, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::CallFunc_GetXPForLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, CallFunc_GetXPForLevel_ReturnValue_1) == 0x00001C, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::CallFunc_GetXPForLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_GetXPToProgress, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WBP_ArcadeProgress_C_GetXPToProgress::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.Tick Progress
// 0x0038 (0x0038 - 0x0000)
struct WBP_ArcadeProgress_C_Tick_Progress final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArcadeProgress_C_Tick_Progress) == 0x000008, "Wrong alignment on WBP_ArcadeProgress_C_Tick_Progress");
static_assert(sizeof(WBP_ArcadeProgress_C_Tick_Progress) == 0x000038, "Wrong size on WBP_ArcadeProgress_C_Tick_Progress");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'WBP_ArcadeProgress_C_Tick_Progress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ArcadeProgress_C_Tick_Progress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, Temp_int_Variable) == 0x000008, "Member 'WBP_ArcadeProgress_C_Tick_Progress::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_ArcadeProgress_C_Tick_Progress::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'WBP_ArcadeProgress_C_Tick_Progress::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'WBP_ArcadeProgress_C_Tick_Progress::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_Tick_Progress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'WBP_ArcadeProgress_C_Tick_Progress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_ArcadeProgress.WBP_ArcadeProgress_C.AnimateV2
// 0x0020 (0x0020 - 0x0000)
struct WBP_ArcadeProgress_C_AnimateV2 final
{
public:
	int32                                         Start;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         End;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelForXP_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArcadeProgress_C_AnimateV2) == 0x000008, "Wrong alignment on WBP_ArcadeProgress_C_AnimateV2");
static_assert(sizeof(WBP_ArcadeProgress_C_AnimateV2) == 0x000020, "Wrong size on WBP_ArcadeProgress_C_AnimateV2");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateV2, Start) == 0x000000, "Member 'WBP_ArcadeProgress_C_AnimateV2::Start' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateV2, End) == 0x000004, "Member 'WBP_ArcadeProgress_C_AnimateV2::End' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateV2, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'WBP_ArcadeProgress_C_AnimateV2::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateV2, CallFunc_GetTYVCGameMode_NewParam) == 0x000010, "Member 'WBP_ArcadeProgress_C_AnimateV2::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ArcadeProgress_C_AnimateV2, CallFunc_GetLevelForXP_ReturnValue) == 0x000018, "Member 'WBP_ArcadeProgress_C_AnimateV2::CallFunc_GetLevelForXP_ReturnValue' has a wrong offset!");

}

