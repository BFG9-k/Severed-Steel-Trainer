#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: portal_clone_static_mesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function portal_clone_static_mesh.portal_clone_static_mesh_C.ExecuteUbergraph_portal_clone_static_mesh
// 0x0038 (0x0038 - 0x0000)
struct portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue; // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh) == 0x000004, "Wrong alignment on portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh");
static_assert(sizeof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh) == 0x000038, "Wrong size on portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh");
static_assert(offsetof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh, EntryPoint) == 0x000000, "Member 'portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh::EntryPoint' has a wrong offset!");
static_assert(offsetof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh, CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue) == 0x000008, "Member 'portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh::CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000014, "Member 'portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh, CallFunc_GetComponentVelocity_ReturnValue) == 0x000020, "Member 'portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00002C, "Member 'portal_clone_static_mesh_C_ExecuteUbergraph_portal_clone_static_mesh::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function portal_clone_static_mesh.portal_clone_static_mesh_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct portal_clone_static_mesh_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(portal_clone_static_mesh_C_ReceiveTick) == 0x000004, "Wrong alignment on portal_clone_static_mesh_C_ReceiveTick");
static_assert(sizeof(portal_clone_static_mesh_C_ReceiveTick) == 0x000004, "Wrong size on portal_clone_static_mesh_C_ReceiveTick");
static_assert(offsetof(portal_clone_static_mesh_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'portal_clone_static_mesh_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

