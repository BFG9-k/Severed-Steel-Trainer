#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NPCToggle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_NPCToggle.WBP_NPCToggle_C
// 0x00C8 (0x0328 - 0x0260)
class UWBP_NPCToggle_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_AdamSmallToggleButton_C*           FlameThrower;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           GRENADIER;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           Jetpack;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           Jumper;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           Minigun;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           NINJA;                                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           RIOTBUTTON;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           RPG;                                               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           Sniper;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           SPECIALIST;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           StandardButton;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_1;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_2;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_3;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_4;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_5;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_6;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_7;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_8;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_9;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBO_Row_C*                             WBO_Row_10;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(TArray<class UClass*>& NewList)> NotifyUpdated;                                     // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_NPCToggle(int32 EntryPoint);
	void BndEvt__WBP_NPCToggle_SPECIALIST_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_SNIPER_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_JETPACK_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_FLAMETHROWER_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_NINJA_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_MINIGUN_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_RPG_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_GRENADIER_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_RIOTBUTTON_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_Jumper_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__WBP_NPCToggle_WBP_AdamSmallToggleButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void SetDisplay(TArray<class UClass*>& NPCs);
	void GetNPCList(TArray<class UClass*>* OutList);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_NPCToggle_C">();
	}
	static class UWBP_NPCToggle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_NPCToggle_C>();
	}
};
static_assert(alignof(UWBP_NPCToggle_C) == 0x000008, "Wrong alignment on UWBP_NPCToggle_C");
static_assert(sizeof(UWBP_NPCToggle_C) == 0x000328, "Wrong size on UWBP_NPCToggle_C");
static_assert(offsetof(UWBP_NPCToggle_C, UberGraphFrame) == 0x000260, "Member 'UWBP_NPCToggle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, FlameThrower) == 0x000268, "Member 'UWBP_NPCToggle_C::FlameThrower' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, GRENADIER) == 0x000270, "Member 'UWBP_NPCToggle_C::GRENADIER' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, Jetpack) == 0x000278, "Member 'UWBP_NPCToggle_C::Jetpack' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, Jumper) == 0x000280, "Member 'UWBP_NPCToggle_C::Jumper' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, Minigun) == 0x000288, "Member 'UWBP_NPCToggle_C::Minigun' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, NINJA) == 0x000290, "Member 'UWBP_NPCToggle_C::NINJA' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, RIOTBUTTON) == 0x000298, "Member 'UWBP_NPCToggle_C::RIOTBUTTON' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, RPG) == 0x0002A0, "Member 'UWBP_NPCToggle_C::RPG' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, Sniper) == 0x0002A8, "Member 'UWBP_NPCToggle_C::Sniper' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, SPECIALIST) == 0x0002B0, "Member 'UWBP_NPCToggle_C::SPECIALIST' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, StandardButton) == 0x0002B8, "Member 'UWBP_NPCToggle_C::StandardButton' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row) == 0x0002C0, "Member 'UWBP_NPCToggle_C::WBO_Row' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_1) == 0x0002C8, "Member 'UWBP_NPCToggle_C::WBO_Row_1' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_2) == 0x0002D0, "Member 'UWBP_NPCToggle_C::WBO_Row_2' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_3) == 0x0002D8, "Member 'UWBP_NPCToggle_C::WBO_Row_3' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_4) == 0x0002E0, "Member 'UWBP_NPCToggle_C::WBO_Row_4' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_5) == 0x0002E8, "Member 'UWBP_NPCToggle_C::WBO_Row_5' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_6) == 0x0002F0, "Member 'UWBP_NPCToggle_C::WBO_Row_6' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_7) == 0x0002F8, "Member 'UWBP_NPCToggle_C::WBO_Row_7' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_8) == 0x000300, "Member 'UWBP_NPCToggle_C::WBO_Row_8' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_9) == 0x000308, "Member 'UWBP_NPCToggle_C::WBO_Row_9' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, WBO_Row_10) == 0x000310, "Member 'UWBP_NPCToggle_C::WBO_Row_10' has a wrong offset!");
static_assert(offsetof(UWBP_NPCToggle_C, NotifyUpdated) == 0x000318, "Member 'UWBP_NPCToggle_C::NotifyUpdated' has a wrong offset!");

}

