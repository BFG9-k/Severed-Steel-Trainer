#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThePrototype

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ThePrototype.BP_ThePrototype_C.ExecuteUbergraph_BP_ThePrototype
// 0x0018 (0x0018 - 0x0000)
struct BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_LookAtLoc;                            // 0x0004(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACampaignManager*                       CallFunc_GetCampaignManager_OutCM;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype) == 0x000008, "Wrong alignment on BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype");
static_assert(sizeof(BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype) == 0x000018, "Wrong size on BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype");
static_assert(offsetof(BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype, EntryPoint) == 0x000000, "Member 'BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype, K2Node_Event_LookAtLoc) == 0x000004, "Member 'BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype::K2Node_Event_LookAtLoc' has a wrong offset!");
static_assert(offsetof(BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype, CallFunc_GetCampaignManager_OutCM) == 0x000010, "Member 'BP_ThePrototype_C_ExecuteUbergraph_BP_ThePrototype::CallFunc_GetCampaignManager_OutCM' has a wrong offset!");

// Function BP_ThePrototype.BP_ThePrototype_C.OnLookAt
// 0x000C (0x000C - 0x0000)
struct BP_ThePrototype_C_OnLookAt final
{
public:
	struct FVector                                LookAtLoc;                                         // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThePrototype_C_OnLookAt) == 0x000004, "Wrong alignment on BP_ThePrototype_C_OnLookAt");
static_assert(sizeof(BP_ThePrototype_C_OnLookAt) == 0x00000C, "Wrong size on BP_ThePrototype_C_OnLookAt");
static_assert(offsetof(BP_ThePrototype_C_OnLookAt, LookAtLoc) == 0x000000, "Member 'BP_ThePrototype_C_OnLookAt::LookAtLoc' has a wrong offset!");

// Function BP_ThePrototype.BP_ThePrototype_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_ThePrototype_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThePrototype_C_IsInteractable) == 0x000001, "Wrong alignment on BP_ThePrototype_C_IsInteractable");
static_assert(sizeof(BP_ThePrototype_C_IsInteractable) == 0x000001, "Wrong size on BP_ThePrototype_C_IsInteractable");
static_assert(offsetof(BP_ThePrototype_C_IsInteractable, ReturnValue) == 0x000000, "Member 'BP_ThePrototype_C_IsInteractable::ReturnValue' has a wrong offset!");

}

