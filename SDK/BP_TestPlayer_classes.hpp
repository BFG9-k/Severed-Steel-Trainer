#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TestPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ToolData_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TestPlayer.BP_TestPlayer_C
// 0x0040 (0x0500 - 0x04C0)
class ABP_TestPlayer_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUMG_TestInventoryMenu_C*               ItemSelector;                                      // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseLookUpRate;                                    // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseTurnRate;                                      // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              JoystickLookInput;                                 // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChosenTool;                                        // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FToolData>                      Tools;                                             // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUMG_MultiMenuTemplate_C*               builder_menu;                                      // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TestPlayer(int32 EntryPoint);
	void InpAxisEvt_TurnRight_K2Node_InputAxisEvent_2(float AxisValue);
	void ReceiveBeginPlay();
	void ExitQuickItem();
	void EnterQuickItem();
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue);
	void EnterBuildMode();
	void ExitBuild();
	void SubmenuCommited(class FName Category, class FName SubItem);
	void InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_21(float AxisValue);
	void InpAxisEvt_TurnRate_K2Node_InputAxisEvent_16(float AxisValue);
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent_5(float AxisValue);
	void InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_LeftAlt_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_LeftAlt_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_LeftShift_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void GetCurrentTool(struct FToolData* Output);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TestPlayer_C">();
	}
	static class ABP_TestPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TestPlayer_C>();
	}
};
static_assert(alignof(ABP_TestPlayer_C) == 0x000010, "Wrong alignment on ABP_TestPlayer_C");
static_assert(sizeof(ABP_TestPlayer_C) == 0x000500, "Wrong size on ABP_TestPlayer_C");
static_assert(offsetof(ABP_TestPlayer_C, UberGraphFrame) == 0x0004C0, "Member 'ABP_TestPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, ItemSelector) == 0x0004C8, "Member 'ABP_TestPlayer_C::ItemSelector' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, BaseLookUpRate) == 0x0004D0, "Member 'ABP_TestPlayer_C::BaseLookUpRate' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, BaseTurnRate) == 0x0004D4, "Member 'ABP_TestPlayer_C::BaseTurnRate' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, JoystickLookInput) == 0x0004D8, "Member 'ABP_TestPlayer_C::JoystickLookInput' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, ChosenTool) == 0x0004E0, "Member 'ABP_TestPlayer_C::ChosenTool' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, Tools) == 0x0004E8, "Member 'ABP_TestPlayer_C::Tools' has a wrong offset!");
static_assert(offsetof(ABP_TestPlayer_C, builder_menu) == 0x0004F8, "Member 'ABP_TestPlayer_C::builder_menu' has a wrong offset!");

}

