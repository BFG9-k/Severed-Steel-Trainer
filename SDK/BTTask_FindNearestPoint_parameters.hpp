#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_FindNearestPoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_FindNearestPoint.BTTask_FindNearestPoint_C.ExecuteUbergraph_BTTask_FindNearestPoint
// 0x0048 (0x0048 - 0x0000)
struct BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint) == 0x000008, "Wrong alignment on BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint");
static_assert(sizeof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint) == 0x000048, "Wrong size on BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, EntryPoint) == 0x000000, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, K2Node_Event_OwnerController) == 0x000028, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, K2Node_Event_ControlledPawn) == 0x000030, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000038, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000044, "Member 'BTTask_FindNearestPoint_C_ExecuteUbergraph_BTTask_FindNearestPoint::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");

// Function BTTask_FindNearestPoint.BTTask_FindNearestPoint_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_FindNearestPoint_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_FindNearestPoint_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTTask_FindNearestPoint_C_ReceiveAbortAI");
static_assert(sizeof(BTTask_FindNearestPoint_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTTask_FindNearestPoint_C_ReceiveAbortAI");
static_assert(offsetof(BTTask_FindNearestPoint_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTTask_FindNearestPoint_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTTask_FindNearestPoint_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTTask_FindNearestPoint.BTTask_FindNearestPoint_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_FindNearestPoint_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_FindNearestPoint_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_FindNearestPoint_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_FindNearestPoint_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_FindNearestPoint_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_FindNearestPoint_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_FindNearestPoint_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_FindNearestPoint_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_FindNearestPoint_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

