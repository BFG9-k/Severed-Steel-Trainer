#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PortalTickComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PortalTickComponent.PortalTickComponent_C.ExecuteUbergraph_PortalTickComponent
// 0x0020 (0x0020 - 0x0000)
struct PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APortalBP_C*                            K2Node_DynamicCast_AsPortal_BP;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent) == 0x000008, "Wrong alignment on PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent");
static_assert(sizeof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent) == 0x000020, "Wrong size on PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent");
static_assert(offsetof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent, EntryPoint) == 0x000000, "Member 'PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent, K2Node_DynamicCast_AsPortal_BP) == 0x000010, "Member 'PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent::K2Node_DynamicCast_AsPortal_BP' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PortalTickComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on PortalTickComponent_C_ReceiveTick");
static_assert(sizeof(PortalTickComponent_C_ReceiveTick) == 0x000004, "Wrong size on PortalTickComponent_C_ReceiveTick");
static_assert(offsetof(PortalTickComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PortalTickComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeLocation
// 0x0120 (0x0120 - 0x0000)
struct PortalTickComponent_C_ChangeLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                new_location;                                      // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_ChangeLocation) == 0x000010, "Wrong alignment on PortalTickComponent_C_ChangeLocation");
static_assert(sizeof(PortalTickComponent_C_ChangeLocation) == 0x000120, "Wrong size on PortalTickComponent_C_ChangeLocation");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, Location) == 0x000000, "Member 'PortalTickComponent_C_ChangeLocation::Location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, new_location) == 0x00000C, "Member 'PortalTickComponent_C_ChangeLocation::new_location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_GetTransform_ReturnValue_1) == 0x000050, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_BreakTransform_Location) == 0x000080, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_BreakVector_X) == 0x0000A4, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000100, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeLocation, CallFunc_TransformLocation_ReturnValue) == 0x00010C, "Member 'PortalTickComponent_C_ChangeLocation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeDirection
// 0x00B0 (0x00B0 - 0x0000)
struct PortalTickComponent_C_ChangeDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewParam;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MirrorVectorByNormal_ReturnValue;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MirrorVectorByNormal_ReturnValue_1;       // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_ChangeDirection) == 0x000010, "Wrong alignment on PortalTickComponent_C_ChangeDirection");
static_assert(sizeof(PortalTickComponent_C_ChangeDirection) == 0x0000B0, "Wrong size on PortalTickComponent_C_ChangeDirection");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, Direction) == 0x000000, "Member 'PortalTickComponent_C_ChangeDirection::Direction' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, NewParam) == 0x00000C, "Member 'PortalTickComponent_C_ChangeDirection::NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'PortalTickComponent_C_ChangeDirection::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, CallFunc_GetTransform_ReturnValue_1) == 0x000050, "Member 'PortalTickComponent_C_ChangeDirection::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, CallFunc_InverseTransformDirection_ReturnValue) == 0x000080, "Member 'PortalTickComponent_C_ChangeDirection::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, CallFunc_MirrorVectorByNormal_ReturnValue) == 0x00008C, "Member 'PortalTickComponent_C_ChangeDirection::CallFunc_MirrorVectorByNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, CallFunc_MirrorVectorByNormal_ReturnValue_1) == 0x000098, "Member 'PortalTickComponent_C_ChangeDirection::CallFunc_MirrorVectorByNormal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeDirection, CallFunc_TransformDirection_ReturnValue) == 0x0000A4, "Member 'PortalTickComponent_C_ChangeDirection::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeRotation
// 0x006C (0x006C - 0x0000)
struct PortalTickComponent_C_ChangeRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               NewParam;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeDirection_NewParam;                 // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeDirection_NewParam_1;               // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeDirection_NewParam_2;               // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalTickComponent_C_ChangeRotation) == 0x000004, "Wrong alignment on PortalTickComponent_C_ChangeRotation");
static_assert(sizeof(PortalTickComponent_C_ChangeRotation) == 0x00006C, "Wrong size on PortalTickComponent_C_ChangeRotation");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, Rotation) == 0x000000, "Member 'PortalTickComponent_C_ChangeRotation::Rotation' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, NewParam) == 0x00000C, "Member 'PortalTickComponent_C_ChangeRotation::NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_GetAxes_X) == 0x000018, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_GetAxes_Y) == 0x000024, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_GetAxes_Z) == 0x000030, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_ChangeDirection_NewParam) == 0x00003C, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_ChangeDirection_NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_ChangeDirection_NewParam_1) == 0x000048, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_ChangeDirection_NewParam_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_ChangeDirection_NewParam_2) == 0x000054, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_ChangeDirection_NewParam_2' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeRotation, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000060, "Member 'PortalTickComponent_C_ChangeRotation::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeVelocity
// 0x0044 (0x0044 - 0x0000)
struct PortalTickComponent_C_ChangeVelocity final
{
public:
	struct FVector                                vel;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewParam;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeDirection_NewParam;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_ChangeVelocity) == 0x000004, "Wrong alignment on PortalTickComponent_C_ChangeVelocity");
static_assert(sizeof(PortalTickComponent_C_ChangeVelocity) == 0x000044, "Wrong size on PortalTickComponent_C_ChangeVelocity");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, vel) == 0x000000, "Member 'PortalTickComponent_C_ChangeVelocity::vel' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, NewParam) == 0x00000C, "Member 'PortalTickComponent_C_ChangeVelocity::NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, Speed) == 0x000018, "Member 'PortalTickComponent_C_ChangeVelocity::Speed' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, CallFunc_Normal_ReturnValue) == 0x00001C, "Member 'PortalTickComponent_C_ChangeVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'PortalTickComponent_C_ChangeVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, CallFunc_ChangeDirection_NewParam) == 0x00002C, "Member 'PortalTickComponent_C_ChangeVelocity::CallFunc_ChangeDirection_NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'PortalTickComponent_C_ChangeVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeScale
// 0x0038 (0x0038 - 0x0000)
struct PortalTickComponent_C_ChangeScale final
{
public:
	float                                         multiply_by;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_ChangeScale) == 0x000004, "Wrong alignment on PortalTickComponent_C_ChangeScale");
static_assert(sizeof(PortalTickComponent_C_ChangeScale) == 0x000038, "Wrong size on PortalTickComponent_C_ChangeScale");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, multiply_by) == 0x000000, "Member 'PortalTickComponent_C_ChangeScale::multiply_by' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_GetActorScale3D_ReturnValue) == 0x000004, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_GetActorScale3D_ReturnValue_1) == 0x000010, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_BreakVector_X) == 0x00001C, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_BreakVector_Y) == 0x000020, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_BreakVector_Z) == 0x000024, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_BreakVector_X_1) == 0x000028, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'PortalTickComponent_C_ChangeScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeTransform
// 0x00E0 (0x00E0 - 0x0000)
struct PortalTickComponent_C_ChangeTransform final
{
public:
	struct FTransform                             transform_in;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             transform_out;                                     // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_ChangeScale_multiply_by;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeLocation_new_location;              // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ChangeRotation_NewParam;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalTickComponent_C_ChangeTransform) == 0x000010, "Wrong alignment on PortalTickComponent_C_ChangeTransform");
static_assert(sizeof(PortalTickComponent_C_ChangeTransform) == 0x0000E0, "Wrong size on PortalTickComponent_C_ChangeTransform");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, transform_in) == 0x000000, "Member 'PortalTickComponent_C_ChangeTransform::transform_in' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, transform_out) == 0x000030, "Member 'PortalTickComponent_C_ChangeTransform::transform_out' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_ChangeScale_multiply_by) == 0x000060, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_ChangeScale_multiply_by' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_BreakTransform_Location) == 0x000064, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_ChangeLocation_new_location) == 0x000088, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_ChangeLocation_new_location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_ChangeRotation_NewParam) == 0x0000A0, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_ChangeRotation_NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'PortalTickComponent_C_ChangeTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.TeleportOverlappingActors
// 0x00F0 (0x00F0 - 0x0000)
struct PortalTickComponent_C_TeleportOverlappingActors final
{
public:
	struct FVector                                test_actor_pos;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0060(0x0010)(ReferenceParm)
	TScriptInterface<class IPortalCameraPawnInterface_C> K2Node_DynamicCast_AsPortal_Camera_Pawn_Interface; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_get_camera_position_camera_pos;           // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APortalBP_C*                            K2Node_DynamicCast_AsPortal_BP;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_TeleportOverlappingActors) == 0x000008, "Wrong alignment on PortalTickComponent_C_TeleportOverlappingActors");
static_assert(sizeof(PortalTickComponent_C_TeleportOverlappingActors) == 0x0000F0, "Wrong size on PortalTickComponent_C_TeleportOverlappingActors");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, test_actor_pos) == 0x000000, "Member 'PortalTickComponent_C_TeleportOverlappingActors::test_actor_pos' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000018, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, Temp_int_Array_Index_Variable) == 0x000020, "Member 'PortalTickComponent_C_TeleportOverlappingActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_GetActorForwardVector_ReturnValue) == 0x000034, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Dot_VectorVector_ReturnValue) == 0x00004C, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Array_Get_Item) == 0x000058, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000060, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, K2Node_DynamicCast_AsPortal_Camera_Pawn_Interface) == 0x000070, "Member 'PortalTickComponent_C_TeleportOverlappingActors::K2Node_DynamicCast_AsPortal_Camera_Pawn_Interface' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'PortalTickComponent_C_TeleportOverlappingActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_get_camera_position_camera_pos) == 0x000084, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_get_camera_position_camera_pos' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_GetVelocity_ReturnValue) == 0x00009C, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Normal_ReturnValue) == 0x0000A8, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000B4, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, K2Node_DynamicCast_AsPortal_BP) == 0x0000C0, "Member 'PortalTickComponent_C_TeleportOverlappingActors::K2Node_DynamicCast_AsPortal_BP' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'PortalTickComponent_C_TeleportOverlappingActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C9, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, K2Node_DynamicCast_AsPlayer_Character_BP_Manny) == 0x0000D0, "Member 'PortalTickComponent_C_TeleportOverlappingActors::K2Node_DynamicCast_AsPlayer_Character_BP_Manny' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'PortalTickComponent_C_TeleportOverlappingActors::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000DA, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'PortalTickComponent_C_TeleportOverlappingActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_TeleportOverlappingActors, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'PortalTickComponent_C_TeleportOverlappingActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PortalTickComponent.PortalTickComponent_C.ChangeActorThroughPortal
// 0x0400 (0x0400 - 0x0000)
struct PortalTickComponent_C_ChangeActorThroughPortal final
{
public:
	class AActor*                                 ActorToPass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPortalItemInterface_C> K2Node_DynamicCast_AsPortal_Item_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetFirstPersonCamera_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeVelocity_NewParam;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeLocation_new_location;              // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UPortal_BP_clone_component_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPortalItemInterface_C> K2Node_DynamicCast_AsPortal_Item_Interface_1;      // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_check_last_tp_newtp;                      // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWheeledVehicleMovementComponent*       K2Node_DynamicCast_AsWheeled_Vehicle_Movement_Component; // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectileMovementComponent*           K2Node_DynamicCast_AsProjectile_Movement_Component; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ChangeVelocity_NewParam_1;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeVelocity_NewParam_2;                // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue; // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeVelocity_NewParam_3;                // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ChangeRotation_NewParam;                  // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSizeSquared_ReturnValue_2;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0240(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ChangeVelocity_NewParam_4;                // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ChangeVelocity_NewParam_5;                // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_3;               // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0xF];                                      // 0x0301(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ChangeTransform_transform_out;            // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0364(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalTickComponent_C_ChangeActorThroughPortal) == 0x000010, "Wrong alignment on PortalTickComponent_C_ChangeActorThroughPortal");
static_assert(sizeof(PortalTickComponent_C_ChangeActorThroughPortal) == 0x000400, "Wrong size on PortalTickComponent_C_ChangeActorThroughPortal");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, ActorToPass) == 0x000000, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::ActorToPass' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsPortal_Item_Interface) == 0x000008, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsPortal_Item_Interface' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsCharacter) == 0x000030, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetMovementComponent_ReturnValue) == 0x000040, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetController_ReturnValue) == 0x000048, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetControlRotation_ReturnValue) == 0x000050, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsPlayer_Character_BP_Manny) == 0x000060, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsPlayer_Character_BP_Manny' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetFirstPersonCamera_ReturnValue) == 0x000070, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetFirstPersonCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeVelocity_NewParam) == 0x000078, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeVelocity_NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000084, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeLocation_new_location) == 0x000090, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeLocation_new_location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_DoesImplementInterface_ReturnValue) == 0x00009C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetComponentByClass_ReturnValue) == 0x000160, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000168, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsPortal_Item_Interface_1) == 0x000170, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsPortal_Item_Interface_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess_3) == 0x000180, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_check_last_tp_newtp) == 0x000181, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_check_last_tp_newtp' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetActorForwardVector_ReturnValue) == 0x000184, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000190, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, Temp_int_Array_Index_Variable) == 0x00019C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsWheeled_Vehicle_Movement_Component) == 0x0001A8, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsWheeled_Vehicle_Movement_Component' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsProjectile_Movement_Component) == 0x0001B8, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsProjectile_Movement_Component' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess_5) == 0x0001C0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeVelocity_NewParam_1) == 0x0001C4, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeVelocity_NewParam_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeVelocity_NewParam_2) == 0x0001D0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeVelocity_NewParam_2' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_VSizeSquared_ReturnValue) == 0x0001DC, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_VSizeSquared_ReturnValue_1) == 0x0001E0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001E4, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001E5, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_AsPrimitive_Component) == 0x0001E8, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, K2Node_DynamicCast_bSuccess_6) == 0x0001F0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x0001F4, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue) == 0x000200, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00020C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000218, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeVelocity_NewParam_3) == 0x000224, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeVelocity_NewParam_3' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeRotation_NewParam) == 0x000230, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeRotation_NewParam' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_VSizeSquared_ReturnValue_2) == 0x00023C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_VSizeSquared_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000240, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0002C8, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeVelocity_NewParam_4) == 0x0002CC, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeVelocity_NewParam_4' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeVelocity_NewParam_5) == 0x0002D8, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeVelocity_NewParam_5' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Add_VectorVector_ReturnValue) == 0x0002E4, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002F0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_VSizeSquared_ReturnValue_3) == 0x0002FC, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_VSizeSquared_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000300, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_ChangeTransform_transform_out) == 0x000310, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_ChangeTransform_transform_out' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_BreakTransform_Location) == 0x000340, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_BreakTransform_Rotation) == 0x00034C, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_BreakTransform_Scale) == 0x000358, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000364, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0003EC, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, Temp_int_Loop_Counter_Variable) == 0x0003F0, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Less_IntInt_ReturnValue) == 0x0003F4, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalTickComponent_C_ChangeActorThroughPortal, CallFunc_Add_IntInt_ReturnValue) == 0x0003F8, "Member 'PortalTickComponent_C_ChangeActorThroughPortal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

