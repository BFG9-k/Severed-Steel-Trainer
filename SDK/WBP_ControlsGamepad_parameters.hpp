#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ControlsGamepad

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.ExecuteUbergraph_WBP_ControlsGamepad
// 0x0160 (0x0160 - 0x0000)
struct WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_2;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_3;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformRegion_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_4;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_ComponentBoundEvent_NewValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBO_Row_C*                             K2Node_DynamicCast_AsWBO_Row;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStyledActionMapping_C*                 K2Node_DynamicCast_AsStyled_Action_Mapping;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_CustomEvent_CapturedChord;                  // 0x0070(0x0020)(HasGetValueTypeHash)
	TDelegate<void(class UButton* NewParam)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class UButton*                                K2Node_CustomEvent_NewParam;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_Value_2;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_Value_1;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_10;            // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_9;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_8;             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_7;             // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_6;             // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_5;             // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_4;             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_3;             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_2;             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam_1;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_NewParam;               // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_NewValue;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue_5;                 // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0140(0x0018)()
	bool                                          CallFunc_IsPlatform_ReturnValue_6;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_7;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_8;                 // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad");
static_assert(sizeof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad) == 0x000160, "Wrong size on WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, EntryPoint) == 0x000000, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue) == 0x000004, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_byte_Variable) == 0x000005, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_bool_Variable) == 0x000006, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_1) == 0x000014, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_2) == 0x000015, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_3) == 0x000016, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_byte_Variable_3) == 0x000017, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatformRegion_ReturnValue) == 0x000018, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatformRegion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_bool_Variable_1) == 0x000019, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_4) == 0x00001A, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_Event_IsDesignTime) == 0x00001B, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewValue_1) == 0x00001C, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_DynamicCast_AsWBO_Row) == 0x000048, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_DynamicCast_AsWBO_Row' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_GetChildAt_ReturnValue) == 0x000058, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_DynamicCast_AsStyled_Action_Mapping) == 0x000060, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_DynamicCast_AsStyled_Action_Mapping' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_CustomEvent_CapturedChord) == 0x000070, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_CustomEvent_CapturedChord' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_CustomEvent_NewParam) == 0x0000A0, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_GetTYVCGameMode_NewParam) == 0x0000A8, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_Value_2) == 0x0000B0, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_Value_1) == 0x0000C0, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_10) == 0x0000D0, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_10' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_9) == 0x0000D8, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_9' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_8) == 0x0000E0, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_8' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_7) == 0x0000E8, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_7' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_6) == 0x0000F0, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_6' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_5) == 0x0000F8, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_5' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_4) == 0x000100, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_4' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_3) == 0x000108, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_3' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_2) == 0x000110, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam_1) == 0x000118, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewParam) == 0x000120, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000128, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_NewValue) == 0x000130, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_5) == 0x000134, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_ComponentBoundEvent_Value) == 0x000138, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_GetValue_ReturnValue) == 0x00013C, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_Conv_FloatToText_ReturnValue) == 0x000140, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_6) == 0x000158, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_7) == 0x000159, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_BooleanOR_ReturnValue) == 0x00015A, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_IsPlatform_ReturnValue_8) == 0x00015B, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_IsPlatform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, CallFunc_BooleanOR_ReturnValue_1) == 0x00015C, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_Select_Default) == 0x00015D, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad, K2Node_Select_Default_1) == 0x00015E, "Member 'WBP_ControlsGamepad_C_ExecuteUbergraph_WBP_ControlsGamepad::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_GyroSlider_K2Node_ComponentBoundEvent_21_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_DZSize_K2Node_ComponentBoundEvent_20_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_5_K2Node_ComponentBoundEvent_18_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_6_K2Node_ComponentBoundEvent_17_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_4_K2Node_ComponentBoundEvent_16_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_2_K2Node_ComponentBoundEvent_15_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_260_K2Node_ComponentBoundEvent_14_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_215_K2Node_ComponentBoundEvent_13_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_67_K2Node_ComponentBoundEvent_12_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_1_K2Node_ComponentBoundEvent_11_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_K2Node_ComponentBoundEvent_10_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_588_K2Node_ComponentBoundEvent_9_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_StyledActionMapping_3_K2Node_ComponentBoundEvent_8_GibMeFocusAgain__DelegateSignature::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature, Value) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_LookSelect_K2Node_ComponentBoundEvent_7_RadioSelectedSignature__DelegateSignature::Value' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature, Value) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__WBP_ControlsGamepad_MoveSelect_K2Node_ComponentBoundEvent_6_RadioSelectedSignature__DelegateSignature::Value' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.GibMeFocusAgain_Event_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0 final
{
public:
	class UButton*                                NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0");
static_assert(sizeof(WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0");
static_assert(offsetof(WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0, NewParam) == 0x000000, "Member 'WBP_ControlsGamepad_C_GibMeFocusAgain_Event_0::NewParam' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.CustomEvent_0
// 0x0020 (0x0020 - 0x0000)
struct WBP_ControlsGamepad_C_CustomEvent_0 final
{
public:
	struct FInputChord                            CapturedChord;                                     // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_CustomEvent_0) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_CustomEvent_0");
static_assert(sizeof(WBP_ControlsGamepad_C_CustomEvent_0) == 0x000020, "Wrong size on WBP_ControlsGamepad_C_CustomEvent_0");
static_assert(offsetof(WBP_ControlsGamepad_C_CustomEvent_0, CapturedChord) == 0x000000, "Member 'WBP_ControlsGamepad_C_CustomEvent_0::CapturedChord' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_ControlsGamepad_C_BndEvt__LookSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ControlsGamepad_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ControlsGamepad_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ControlsGamepad_C_PreConstruct");
static_assert(sizeof(WBP_ControlsGamepad_C_PreConstruct) == 0x000001, "Wrong size on WBP_ControlsGamepad_C_PreConstruct");
static_assert(offsetof(WBP_ControlsGamepad_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ControlsGamepad_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.GetDefaultFocus
// 0x0008 (0x0008 - 0x0000)
struct WBP_ControlsGamepad_C_GetDefaultFocus final
{
public:
	class UWidget*                                ToFocus;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_GetDefaultFocus) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_GetDefaultFocus");
static_assert(sizeof(WBP_ControlsGamepad_C_GetDefaultFocus) == 0x000008, "Wrong size on WBP_ControlsGamepad_C_GetDefaultFocus");
static_assert(offsetof(WBP_ControlsGamepad_C_GetDefaultFocus, ToFocus) == 0x000000, "Member 'WBP_ControlsGamepad_C_GetDefaultFocus::ToFocus' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.NotifyShown
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_ControlsGamepad_C_NotifyShown final
{
public:
	EAnalogControl                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAnalogControl                                Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     K2Node_DynamicCast_AsTYVCGame_Mode_BP;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0068(0x0018)()
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_NotifyShown) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_NotifyShown");
static_assert(sizeof(WBP_ControlsGamepad_C_NotifyShown) == 0x0000A0, "Wrong size on WBP_ControlsGamepad_C_NotifyShown");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, Temp_byte_Variable) == 0x000000, "Member 'WBP_ControlsGamepad_C_NotifyShown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, Temp_string_Variable) == 0x000008, "Member 'WBP_ControlsGamepad_C_NotifyShown::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, Temp_string_Variable_1) == 0x000018, "Member 'WBP_ControlsGamepad_C_NotifyShown::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, Temp_byte_Variable_1) == 0x000028, "Member 'WBP_ControlsGamepad_C_NotifyShown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, Temp_string_Variable_2) == 0x000030, "Member 'WBP_ControlsGamepad_C_NotifyShown::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, Temp_string_Variable_3) == 0x000040, "Member 'WBP_ControlsGamepad_C_NotifyShown::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, CallFunc_GetGameMode_ReturnValue) == 0x000050, "Member 'WBP_ControlsGamepad_C_NotifyShown::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, K2Node_DynamicCast_AsTYVCGame_Mode_BP) == 0x000058, "Member 'WBP_ControlsGamepad_C_NotifyShown::K2Node_DynamicCast_AsTYVCGame_Mode_BP' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_ControlsGamepad_C_NotifyShown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, CallFunc_Conv_FloatToText_ReturnValue) == 0x000068, "Member 'WBP_ControlsGamepad_C_NotifyShown::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, K2Node_Select_Default) == 0x000080, "Member 'WBP_ControlsGamepad_C_NotifyShown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_NotifyShown, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_ControlsGamepad_C_NotifyShown::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.GatherAndSaveSettings
// 0x0060 (0x0060 - 0x0000)
struct WBP_ControlsGamepad_C_GatherAndSaveSettings final
{
public:
	EAnalogControl                                MoveCache;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalogControl                                LookCache;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnalogControl                                Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalogControl                                Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnalogControl                                Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalogControl                                Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSelected_Val;                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSelected_Val_1;                        // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnalogControl                                K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalogControl                                K2Node_Select_Default_1;                           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FControlSettingsGamepad                K2Node_MakeStruct_ControlSettingsGamepad;          // 0x0044(0x001C)(NoDestructor)
};
static_assert(alignof(WBP_ControlsGamepad_C_GatherAndSaveSettings) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_GatherAndSaveSettings");
static_assert(sizeof(WBP_ControlsGamepad_C_GatherAndSaveSettings) == 0x000060, "Wrong size on WBP_ControlsGamepad_C_GatherAndSaveSettings");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, MoveCache) == 0x000000, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::MoveCache' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, LookCache) == 0x000001, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::LookCache' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, Temp_bool_Variable) == 0x000002, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, Temp_byte_Variable) == 0x000003, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_GetValue_ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_GetValue_ReturnValue_1) == 0x00000C, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_GetSelected_Val) == 0x000010, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_GetSelected_Val' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_GetSelected_Val_1) == 0x000020, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_GetSelected_Val_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000030, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000031, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, K2Node_Select_Default) == 0x000032, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, K2Node_Select_Default_1) == 0x000033, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_GetTYVCGameMode_NewParam) == 0x000038, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, CallFunc_GetValue_ReturnValue_2) == 0x000040, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_GatherAndSaveSettings, K2Node_MakeStruct_ControlSettingsGamepad) == 0x000044, "Member 'WBP_ControlsGamepad_C_GatherAndSaveSettings::K2Node_MakeStruct_ControlSettingsGamepad' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.Left Look Sen
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_Left_Look_Sen final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_Left_Look_Sen) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_Left_Look_Sen");
static_assert(sizeof(WBP_ControlsGamepad_C_Left_Look_Sen) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_Left_Look_Sen");
static_assert(offsetof(WBP_ControlsGamepad_C_Left_Look_Sen, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_Left_Look_Sen::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_Left_Look_Sen, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_Left_Look_Sen::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.Right Look Sen
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_Right_Look_Sen final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_Right_Look_Sen) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_Right_Look_Sen");
static_assert(sizeof(WBP_ControlsGamepad_C_Right_Look_Sen) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_Right_Look_Sen");
static_assert(offsetof(WBP_ControlsGamepad_C_Right_Look_Sen, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_Right_Look_Sen::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_Right_Look_Sen, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_Right_Look_Sen::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.Go to Look Sen
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_Go_to_Look_Sen final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_Go_to_Look_Sen) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_Go_to_Look_Sen");
static_assert(sizeof(WBP_ControlsGamepad_C_Go_to_Look_Sen) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_Go_to_Look_Sen");
static_assert(offsetof(WBP_ControlsGamepad_C_Go_to_Look_Sen, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_Go_to_Look_Sen::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_Go_to_Look_Sen, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_Go_to_Look_Sen::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.To Left Stick
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_To_Left_Stick final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_To_Left_Stick) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_To_Left_Stick");
static_assert(sizeof(WBP_ControlsGamepad_C_To_Left_Stick) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_To_Left_Stick");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Left_Stick, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_To_Left_Stick::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Left_Stick, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_To_Left_Stick::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.To Right Stick
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_To_Right_Stick final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_To_Right_Stick) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_To_Right_Stick");
static_assert(sizeof(WBP_ControlsGamepad_C_To_Right_Stick) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_To_Right_Stick");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Right_Stick, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_To_Right_Stick::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Right_Stick, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_To_Right_Stick::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.To Move Select
// 0x0048 (0x0048 - 0x0000)
struct WBP_ControlsGamepad_C_To_Move_Select final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalogControl                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStyledRadioButton_img_C*               K2Node_DynamicCast_AsStyled_Radio_Button_Img;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ControlsGamepad_C_To_Move_Select) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_To_Move_Select");
static_assert(sizeof(WBP_ControlsGamepad_C_To_Move_Select) == 0x000048, "Wrong size on WBP_ControlsGamepad_C_To_Move_Select");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_To_Move_Select::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_To_Move_Select::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, Temp_byte_Variable) == 0x000010, "Member 'WBP_ControlsGamepad_C_To_Move_Select::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, Temp_int_Variable) == 0x000014, "Member 'WBP_ControlsGamepad_C_To_Move_Select::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, Temp_int_Variable_1) == 0x000018, "Member 'WBP_ControlsGamepad_C_To_Move_Select::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, CallFunc_GetTYVCGameMode_NewParam) == 0x000020, "Member 'WBP_ControlsGamepad_C_To_Move_Select::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, K2Node_Select_Default) == 0x000028, "Member 'WBP_ControlsGamepad_C_To_Move_Select::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'WBP_ControlsGamepad_C_To_Move_Select::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, K2Node_DynamicCast_AsStyled_Radio_Button_Img) == 0x000038, "Member 'WBP_ControlsGamepad_C_To_Move_Select::K2Node_DynamicCast_AsStyled_Radio_Button_Img' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Move_Select, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_ControlsGamepad_C_To_Move_Select::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.To Look Select
// 0x0048 (0x0048 - 0x0000)
struct WBP_ControlsGamepad_C_To_Look_Select final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalogControl                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStyledRadioButton_img_C*               K2Node_DynamicCast_AsStyled_Radio_Button_Img;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ControlsGamepad_C_To_Look_Select) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_To_Look_Select");
static_assert(sizeof(WBP_ControlsGamepad_C_To_Look_Select) == 0x000048, "Wrong size on WBP_ControlsGamepad_C_To_Look_Select");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_To_Look_Select::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_To_Look_Select::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, Temp_byte_Variable) == 0x000010, "Member 'WBP_ControlsGamepad_C_To_Look_Select::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, Temp_int_Variable) == 0x000014, "Member 'WBP_ControlsGamepad_C_To_Look_Select::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, Temp_int_Variable_1) == 0x000018, "Member 'WBP_ControlsGamepad_C_To_Look_Select::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, CallFunc_GetTYVCGameMode_NewParam) == 0x000020, "Member 'WBP_ControlsGamepad_C_To_Look_Select::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, K2Node_Select_Default) == 0x000028, "Member 'WBP_ControlsGamepad_C_To_Look_Select::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'WBP_ControlsGamepad_C_To_Look_Select::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, K2Node_DynamicCast_AsStyled_Radio_Button_Img) == 0x000038, "Member 'WBP_ControlsGamepad_C_To_Look_Select::K2Node_DynamicCast_AsStyled_Radio_Button_Img' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Look_Select, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_ControlsGamepad_C_To_Look_Select::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.To Gyro Sens
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_To_Gyro_Sens final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_To_Gyro_Sens) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_To_Gyro_Sens");
static_assert(sizeof(WBP_ControlsGamepad_C_To_Gyro_Sens) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_To_Gyro_Sens");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Gyro_Sens, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_To_Gyro_Sens::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_To_Gyro_Sens, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_To_Gyro_Sens::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.ToDZSize
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_ToDZSize final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_ToDZSize) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_ToDZSize");
static_assert(sizeof(WBP_ControlsGamepad_C_ToDZSize) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_ToDZSize");
static_assert(offsetof(WBP_ControlsGamepad_C_ToDZSize, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_ToDZSize::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_ToDZSize, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_ToDZSize::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.Left DZ
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_Left_DZ final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_Left_DZ) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_Left_DZ");
static_assert(sizeof(WBP_ControlsGamepad_C_Left_DZ) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_Left_DZ");
static_assert(offsetof(WBP_ControlsGamepad_C_Left_DZ, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_Left_DZ::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_Left_DZ, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_Left_DZ::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.Right DZ
// 0x0010 (0x0010 - 0x0000)
struct WBP_ControlsGamepad_C_Right_DZ final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlsGamepad_C_Right_DZ) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_Right_DZ");
static_assert(sizeof(WBP_ControlsGamepad_C_Right_DZ) == 0x000010, "Wrong size on WBP_ControlsGamepad_C_Right_DZ");
static_assert(offsetof(WBP_ControlsGamepad_C_Right_DZ, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_Right_DZ::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_Right_DZ, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_Right_DZ::ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.LeftGyroSens
// 0x0028 (0x0028 - 0x0000)
struct WBP_ControlsGamepad_C_LeftGyroSens final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ControlsGamepad_C_LeftGyroSens) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_LeftGyroSens");
static_assert(sizeof(WBP_ControlsGamepad_C_LeftGyroSens) == 0x000028, "Wrong size on WBP_ControlsGamepad_C_LeftGyroSens");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_LeftGyroSens, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'WBP_ControlsGamepad_C_LeftGyroSens::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_ControlsGamepad.WBP_ControlsGamepad_C.RightGyroSen
// 0x0028 (0x0028 - 0x0000)
struct WBP_ControlsGamepad_C_RightGyroSen final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ControlsGamepad_C_RightGyroSen) == 0x000008, "Wrong alignment on WBP_ControlsGamepad_C_RightGyroSen");
static_assert(sizeof(WBP_ControlsGamepad_C_RightGyroSen) == 0x000028, "Wrong size on WBP_ControlsGamepad_C_RightGyroSen");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, Navigation_0) == 0x000000, "Member 'WBP_ControlsGamepad_C_RightGyroSen::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, ReturnValue) == 0x000008, "Member 'WBP_ControlsGamepad_C_RightGyroSen::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'WBP_ControlsGamepad_C_RightGyroSen::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_ControlsGamepad_C_RightGyroSen::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_ControlsGamepad_C_RightGyroSen::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'WBP_ControlsGamepad_C_RightGyroSen::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_ControlsGamepad_C_RightGyroSen::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ControlsGamepad_C_RightGyroSen, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'WBP_ControlsGamepad_C_RightGyroSen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

