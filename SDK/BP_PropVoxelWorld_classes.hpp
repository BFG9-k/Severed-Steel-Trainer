#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropVoxelWorld

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Voxel_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PropVoxelWorld.BP_PropVoxelWorld_C
// 0x00A0 (0x0AB0 - 0x0A10)
class ABP_PropVoxelWorld_C : public APropVoxelWorld
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_TargetIndicatorComponent_C*         BP_TargetIndicatorComponent;                       // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTL_NewTrack_2_DC558A9444A80DDABE8ECBABF84CC829; // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTL_NewTrack_1_DC558A9444A80DDABE8ECBABF84CC829; // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTL_NewTrack_0_DC558A9444A80DDABE8ECBABF84CC829; // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MoveTL__Direction_DC558A9444A80DDABE8ECBABF84CC829; // 0x0A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2D[0x3];                                      // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MoveTL;                                            // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeTimeline_NewTrack_0_E32425D1408F7ACC972E37B84061242A; // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ShakeTimeline__Direction_E32425D1408F7ACC972E37B84061242A; // 0x0A3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3D[0x3];                                      // 0x0A3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ShakeTimeline;                                     // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_DFA4A591413808494244D282028D0BCA; // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_DFA4A591413808494244D282028D0BCA; // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4D[0x3];                                      // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HomingStart;                                       // 0x0A58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStopRequesed;                                     // 0x0A64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A65[0x3];                                      // 0x0A65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ExplosionFX;                                       // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShockwaveRadius;                                   // 0x0A74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDetonated;                                      // 0x0A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A79[0x3];                                      // 0x0A79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartMoveLoc;                                      // 0x0A7C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GoalMoveLoc;                                       // 0x0A88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               GoalRot;                                           // 0x0A94(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               StartRot;                                          // 0x0AA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SpeedFactor;                                       // 0x0AAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PropVoxelWorld(int32 EntryPoint);
	void NotifyPlayingReverse();
	void SetExplosionInfo(float EditRadius, float ShockwaveRadius_0);
	void Explode();
	void DoShake();
	void DoMove(const struct FVector& RelativeMove, float TimeToMove);
	void LevelReady();
	void CancelMoves();
	void OnWorldLoadedWithPtr_Event_0(class AVoxelWorld* VoxelWorldLoaded);
	void CacheShatteredChunks();
	void ReceiveDestroyed();
	void HomeOnTarget(class AActor* Target);
	void MoveTL__UpdateFunc();
	void MoveTL__FinishedFunc();
	void ShakeTimeline__UpdateFunc();
	void ShakeTimeline__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void GetWorldLocation(struct FVector* OutLoc);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PropVoxelWorld_C">();
	}
	static class ABP_PropVoxelWorld_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PropVoxelWorld_C>();
	}
};
static_assert(alignof(ABP_PropVoxelWorld_C) == 0x000008, "Wrong alignment on ABP_PropVoxelWorld_C");
static_assert(sizeof(ABP_PropVoxelWorld_C) == 0x000AB0, "Wrong size on ABP_PropVoxelWorld_C");
static_assert(offsetof(ABP_PropVoxelWorld_C, UberGraphFrame) == 0x000A10, "Member 'ABP_PropVoxelWorld_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, BP_TargetIndicatorComponent) == 0x000A18, "Member 'ABP_PropVoxelWorld_C::BP_TargetIndicatorComponent' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, MoveTL_NewTrack_2_DC558A9444A80DDABE8ECBABF84CC829) == 0x000A20, "Member 'ABP_PropVoxelWorld_C::MoveTL_NewTrack_2_DC558A9444A80DDABE8ECBABF84CC829' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, MoveTL_NewTrack_1_DC558A9444A80DDABE8ECBABF84CC829) == 0x000A24, "Member 'ABP_PropVoxelWorld_C::MoveTL_NewTrack_1_DC558A9444A80DDABE8ECBABF84CC829' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, MoveTL_NewTrack_0_DC558A9444A80DDABE8ECBABF84CC829) == 0x000A28, "Member 'ABP_PropVoxelWorld_C::MoveTL_NewTrack_0_DC558A9444A80DDABE8ECBABF84CC829' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, MoveTL__Direction_DC558A9444A80DDABE8ECBABF84CC829) == 0x000A2C, "Member 'ABP_PropVoxelWorld_C::MoveTL__Direction_DC558A9444A80DDABE8ECBABF84CC829' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, MoveTL) == 0x000A30, "Member 'ABP_PropVoxelWorld_C::MoveTL' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, ShakeTimeline_NewTrack_0_E32425D1408F7ACC972E37B84061242A) == 0x000A38, "Member 'ABP_PropVoxelWorld_C::ShakeTimeline_NewTrack_0_E32425D1408F7ACC972E37B84061242A' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, ShakeTimeline__Direction_E32425D1408F7ACC972E37B84061242A) == 0x000A3C, "Member 'ABP_PropVoxelWorld_C::ShakeTimeline__Direction_E32425D1408F7ACC972E37B84061242A' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, ShakeTimeline) == 0x000A40, "Member 'ABP_PropVoxelWorld_C::ShakeTimeline' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, Timeline_0_NewTrack_0_DFA4A591413808494244D282028D0BCA) == 0x000A48, "Member 'ABP_PropVoxelWorld_C::Timeline_0_NewTrack_0_DFA4A591413808494244D282028D0BCA' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, Timeline_0__Direction_DFA4A591413808494244D282028D0BCA) == 0x000A4C, "Member 'ABP_PropVoxelWorld_C::Timeline_0__Direction_DFA4A591413808494244D282028D0BCA' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, Timeline_0) == 0x000A50, "Member 'ABP_PropVoxelWorld_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, HomingStart) == 0x000A58, "Member 'ABP_PropVoxelWorld_C::HomingStart' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, bStopRequesed) == 0x000A64, "Member 'ABP_PropVoxelWorld_C::bStopRequesed' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, ExplosionFX) == 0x000A68, "Member 'ABP_PropVoxelWorld_C::ExplosionFX' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, ExplosionRadius) == 0x000A70, "Member 'ABP_PropVoxelWorld_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, ShockwaveRadius) == 0x000A74, "Member 'ABP_PropVoxelWorld_C::ShockwaveRadius' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, HasDetonated) == 0x000A78, "Member 'ABP_PropVoxelWorld_C::HasDetonated' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, StartMoveLoc) == 0x000A7C, "Member 'ABP_PropVoxelWorld_C::StartMoveLoc' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, GoalMoveLoc) == 0x000A88, "Member 'ABP_PropVoxelWorld_C::GoalMoveLoc' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, GoalRot) == 0x000A94, "Member 'ABP_PropVoxelWorld_C::GoalRot' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, StartRot) == 0x000AA0, "Member 'ABP_PropVoxelWorld_C::StartRot' has a wrong offset!");
static_assert(offsetof(ABP_PropVoxelWorld_C, SpeedFactor) == 0x000AAC, "Member 'ABP_PropVoxelWorld_C::SpeedFactor' has a wrong offset!");

}

