#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillerFanHuge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_KillerFanHuge.BP_KillerFanHuge_C.ExecuteUbergraph_BP_KillerFanHuge
// 0x0010 (0x0010 - 0x0000)
struct BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Impulse;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge) == 0x000004, "Wrong alignment on BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge");
static_assert(sizeof(BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge) == 0x000010, "Wrong size on BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge");
static_assert(offsetof(BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge, EntryPoint) == 0x000000, "Member 'BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge, K2Node_Event_Impulse) == 0x000004, "Member 'BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge::K2Node_Event_Impulse' has a wrong offset!");

// Function BP_KillerFanHuge.BP_KillerFanHuge_C.ImpulseIfPossible
// 0x000C (0x000C - 0x0000)
struct BP_KillerFanHuge_C_ImpulseIfPossible final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KillerFanHuge_C_ImpulseIfPossible) == 0x000004, "Wrong alignment on BP_KillerFanHuge_C_ImpulseIfPossible");
static_assert(sizeof(BP_KillerFanHuge_C_ImpulseIfPossible) == 0x00000C, "Wrong size on BP_KillerFanHuge_C_ImpulseIfPossible");
static_assert(offsetof(BP_KillerFanHuge_C_ImpulseIfPossible, Impulse) == 0x000000, "Member 'BP_KillerFanHuge_C_ImpulseIfPossible::Impulse' has a wrong offset!");

}

