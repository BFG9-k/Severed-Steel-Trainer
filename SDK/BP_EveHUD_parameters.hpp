#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EveHUD

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_EveHUD.BP_EveHUD_C.ExecuteUbergraph_BP_EveHUD
// 0x0568 (0x0568 - 0x0000)
struct BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_KickPrompt_C*                      CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0040(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0050(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors_2;                       // 0x0064(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_3;                       // 0x0074(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECannonMode                                   Temp_byte_Variable_14;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0188(0x0018)()
	EGameType                                     Temp_byte_Variable_15;                             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameType                                     Temp_byte_Variable_16;                             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01AC(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERank                                         Temp_byte_Variable_23;                             // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF[0x1];                                      // 0x01BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_11;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0208(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0220(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0238(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x0250(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x0268(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0280(0x0018)()
	class UWBP_ExploitDetected_C*                 CallFunc_Create_ReturnValue_1;                     // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDifficulty                                   Temp_byte_Variable_24;                             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsViz_1;                             // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bViz_6;                               // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_4;                           // 0x02BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViz_5;                               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_3;                           // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bViz_4;                               // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_2;                           // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViz_3;                               // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_3;                           // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Left;                                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Total_1;                              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Remaining_1;                          // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Total;                                // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Viz;                                  // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViz_2;                               // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bViz_1;                               // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bArcadeOver;                          // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF[0x1];                                      // 0x02FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChallengeDisplay>              K2Node_Event_ToDisplay;                            // 0x0300(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bIsViz;                               // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsController;                  // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeaponBase*                            K2Node_Event_ToFocus;                              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_InText;                               // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoNotify;                            // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Remaining;                            // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InPercent;                            // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Score;                                // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_ToSet;                                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0360(0x0018)()
	class UWBP_AdamCrosshair_C*                   K2Node_DynamicCast_AsWBP_Adam_Crosshair;           // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_2;               // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_3;               // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Multiplier_1;                         // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsUp;                                // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldAnimate;                       // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCompressed;                          // 0x039F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x03AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_Select_Default_9;                           // 0x03B4(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_Select_Default_10;                          // 0x03C4(0x0010)(NoDestructor)
	float                                         K2Node_Select_Default_11;                          // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECannonMode                                   K2Node_Event_NewMode;                              // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_12;                          // 0x03F0(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_4;               // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_HuntHUD_C*                         K2Node_Select_Default_13;                          // 0x0418(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_5;               // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDifficulty                                   CallFunc_GetDifficulty_ReturnValue;                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_14;                          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_HuntHUD_C*                         K2Node_Select_Default_15;                          // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViz;                                 // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_16;                          // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_6;               // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0458(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_17;                          // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCachedMultiplier_ReturnValue;          // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0478(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x04B0(0x0018)()
	EFeat                                         K2Node_Event_ForFeat;                              // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_7;               // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_8;               // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_18;                          // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_9;               // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERank                                         CallFunc_CalculateCurrentRank_ReturnValue;         // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameType                                     K2Node_Event_ForMode;                              // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2[0x6];                                      // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_19;                          // 0x04F8(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512[0x2];                                      // 0x0512(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Multiplier;                           // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_20;                          // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0550(0x0018)()
};
static_assert(alignof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD) == 0x000008, "Wrong alignment on BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD");
static_assert(sizeof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD) == 0x000568, "Wrong size on BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, EntryPoint) == 0x000000, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable) == 0x000004, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable) == 0x000005, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_1) == 0x000006, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_1) == 0x000007, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_2) == 0x000008, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_3) == 0x000009, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_2) == 0x00000A, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_4) == 0x00000B, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_5) == 0x00000C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_3) == 0x00000D, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_6) == 0x00000E, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_7) == 0x00000F, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_4) == 0x000010, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable) == 0x000014, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_1) == 0x000018, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_5) == 0x000028, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_8) == 0x000029, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_9) == 0x00002A, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_6) == 0x00002B, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_10) == 0x00002C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_11) == 0x00002D, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_7) == 0x00002E, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_12) == 0x00002F, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_13) == 0x000030, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_8) == 0x000031, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_2) == 0x000034, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_3) == 0x000038, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_9) == 0x00003C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_MakeStruct_Anchors) == 0x000040, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_MakeStruct_Anchors_1) == 0x000050, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_10) == 0x000060, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_MakeStruct_Anchors_2) == 0x000064, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_MakeStruct_Anchors_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_MakeStruct_Anchors_3) == 0x000074, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_MakeStruct_Anchors_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_11) == 0x000084, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_4) == 0x000088, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_5) == 0x00008C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_14) == 0x000090, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable) == 0x000098, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_1) == 0x0000B0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_2) == 0x0000C8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_3) == 0x0000E0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_4) == 0x0000F8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_5) == 0x000110, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_6) == 0x000128, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_7) == 0x000140, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_8) == 0x000158, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_9) == 0x000170, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_10) == 0x000188, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_15) == 0x0001A0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_16) == 0x0001A1, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_12) == 0x0001A2, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_17) == 0x0001A3, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_18) == 0x0001A4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_13) == 0x0001A5, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_19) == 0x0001A6, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_20) == 0x0001A7, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_14) == 0x0001A8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_CreateDelegate_OutputDelegate) == 0x0001AC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_21) == 0x0001BC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_22) == 0x0001BD, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_23) == 0x0001BE, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_11) == 0x0001C0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_12) == 0x0001D8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_13) == 0x0001F0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_14) == 0x000208, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_15) == 0x000220, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_16) == 0x000238, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_17) == 0x000250, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_18) == 0x000268, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_text_Variable_19) == 0x000280, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Create_ReturnValue_1) == 0x000298, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_24) == 0x0002A0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_6) == 0x0002A4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_7) == 0x0002A8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_8) == 0x0002AC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_9) == 0x0002B0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_10) == 0x0002B4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_float_Variable_11) == 0x0002B8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bIsViz_1) == 0x0002BC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bIsViz_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz_6) == 0x0002BD, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bAnimate_4) == 0x0002BE, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bAnimate_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default) == 0x0002BF, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_PlayAnimation_ReturnValue) == 0x0002C0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz_5) == 0x0002C8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bAnimate_3) == 0x0002C9, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bAnimate_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz_4) == 0x0002CA, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bAnimate_2) == 0x0002CB, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bAnimate_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_1) == 0x0002CC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_2) == 0x0002CD, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz_3) == 0x0002CE, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bAnimate_1) == 0x0002CF, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_3) == 0x0002D0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_4) == 0x0002D4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Left) == 0x0002D8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Left' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Total_1) == 0x0002DC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Total_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Remaining_1) == 0x0002E0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Remaining_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Total) == 0x0002E4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Total' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Viz) == 0x0002E8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Viz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_AddChild_ReturnValue) == 0x0002F0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz_2) == 0x0002F8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bAnimate) == 0x0002F9, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz_1) == 0x0002FA, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_5) == 0x0002FB, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bArcadeOver) == 0x0002FC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bArcadeOver' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_6) == 0x0002FD, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_7) == 0x0002FE, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_ToDisplay) == 0x000300, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_ToDisplay' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bIsViz) == 0x000310, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bIsViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_CustomEvent_bIsController) == 0x000311, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_CustomEvent_bIsController' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_ToFocus) == 0x000318, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_ToFocus' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_InText) == 0x000320, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bDoNotify) == 0x000330, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bDoNotify' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Remaining) == 0x000334, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Remaining' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam) == 0x000338, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000340, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_InPercent) == 0x000348, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_InPercent' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Progress) == 0x00034C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Less_FloatFloat_ReturnValue) == 0x000350, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Score) == 0x000354, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_ToSet) == 0x000358, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_ToSet' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_IntToText_ReturnValue) == 0x000360, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_DynamicCast_AsWBP_Adam_Crosshair) == 0x000378, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_DynamicCast_AsWBP_Adam_Crosshair' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_DynamicCast_bSuccess) == 0x000380, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_2) == 0x000388, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_3) == 0x000390, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_3' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Multiplier_1) == 0x000398, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Multiplier_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bIsUp) == 0x00039C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bIsUp' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bShouldAnimate) == 0x00039D, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bShouldAnimate' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_IsPlatform_ReturnValue) == 0x00039E, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bCompressed) == 0x00039F, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bCompressed' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0003A0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_8) == 0x0003A8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_MakeVector2D_ReturnValue) == 0x0003AC, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_9) == 0x0003B4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_10) == 0x0003C4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_11) == 0x0003D4, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_MakeVector2D_ReturnValue_1) == 0x0003D8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0003E0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_25) == 0x0003E8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_NewMode) == 0x0003E9, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_NewMode' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_12) == 0x0003F0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_PlayAnimation_ReturnValue_1) == 0x000408, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_4) == 0x000410, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_4' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_13) == 0x000418, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_5) == 0x000420, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_5' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetDifficulty_ReturnValue) == 0x000428, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_14) == 0x00042C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000430, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000434, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_BooleanOR_ReturnValue) == 0x000438, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_FTrunc_ReturnValue) == 0x00043C, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_15) == 0x000440, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_bViz) == 0x000448, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_bViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_16) == 0x000449, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_6) == 0x000450, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_6' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000458, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_17) == 0x000470, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetCachedMultiplier_ReturnValue) == 0x000474, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetCachedMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_FloatToText_ReturnValue) == 0x000478, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_TextToString_ReturnValue) == 0x000490, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Concat_StrStr_ReturnValue) == 0x0004A0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_StringToText_ReturnValue) == 0x0004B0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_ForFeat) == 0x0004C8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_ForFeat' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_bool_Variable_15) == 0x0004C9, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_7) == 0x0004D0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_7' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_8) == 0x0004D8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_8' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_SwitchEnum_CmpSuccess) == 0x0004E0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_18) == 0x0004E1, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_GetTYVCGameMode_NewParam_9) == 0x0004E8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_GetTYVCGameMode_NewParam_9' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_CalculateCurrentRank_ReturnValue) == 0x0004F0, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_CalculateCurrentRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_ForMode) == 0x0004F1, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_ForMode' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_19) == 0x0004F8, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_SwitchEnum_CmpSuccess_1) == 0x000510, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, Temp_byte_Variable_26) == 0x000511, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Event_Multiplier) == 0x000514, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Event_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, K2Node_Select_Default_20) == 0x000518, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_IntToString_ReturnValue) == 0x000520, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_MakeLiteralString_ReturnValue) == 0x000530, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000540, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000550, "Member 'BP_EveHUD_C_ExecuteUbergraph_BP_EveHUD::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetMultiplierOnlyCorner
// 0x0004 (0x0004 - 0x0000)
struct BP_EveHUD_C_SetMultiplierOnlyCorner final
{
public:
	int32                                         multiplier;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetMultiplierOnlyCorner) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetMultiplierOnlyCorner");
static_assert(sizeof(BP_EveHUD_C_SetMultiplierOnlyCorner) == 0x000004, "Wrong size on BP_EveHUD_C_SetMultiplierOnlyCorner");
static_assert(offsetof(BP_EveHUD_C_SetMultiplierOnlyCorner, multiplier) == 0x000000, "Member 'BP_EveHUD_C_SetMultiplierOnlyCorner::multiplier' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetupForMode
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetupForMode final
{
public:
	EGameType                                     ForMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetupForMode) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetupForMode");
static_assert(sizeof(BP_EveHUD_C_SetupForMode) == 0x000001, "Wrong size on BP_EveHUD_C_SetupForMode");
static_assert(offsetof(BP_EveHUD_C_SetupForMode, ForMode) == 0x000000, "Member 'BP_EveHUD_C_SetupForMode::ForMode' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.DoFresh
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_DoFresh final
{
public:
	EFeat                                         ForFeat;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_DoFresh) == 0x000001, "Wrong alignment on BP_EveHUD_C_DoFresh");
static_assert(sizeof(BP_EveHUD_C_DoFresh) == 0x000001, "Wrong size on BP_EveHUD_C_DoFresh");
static_assert(offsetof(BP_EveHUD_C_DoFresh, ForFeat) == 0x000000, "Member 'BP_EveHUD_C_DoFresh::ForFeat' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCardsViz
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetCardsViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetCardsViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetCardsViz");
static_assert(sizeof(BP_EveHUD_C_SetCardsViz) == 0x000001, "Wrong size on BP_EveHUD_C_SetCardsViz");
static_assert(offsetof(BP_EveHUD_C_SetCardsViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetCardsViz::bViz' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.NotifyCannonMode
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_NotifyCannonMode final
{
public:
	ECannonMode                                   NewMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_NotifyCannonMode) == 0x000001, "Wrong alignment on BP_EveHUD_C_NotifyCannonMode");
static_assert(sizeof(BP_EveHUD_C_NotifyCannonMode) == 0x000001, "Wrong size on BP_EveHUD_C_NotifyCannonMode");
static_assert(offsetof(BP_EveHUD_C_NotifyCannonMode, NewMode) == 0x000000, "Member 'BP_EveHUD_C_NotifyCannonMode::NewMode' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCompressedHUD
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetCompressedHUD final
{
public:
	bool                                          bCompressed;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetCompressedHUD) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetCompressedHUD");
static_assert(sizeof(BP_EveHUD_C_SetCompressedHUD) == 0x000001, "Wrong size on BP_EveHUD_C_SetCompressedHUD");
static_assert(offsetof(BP_EveHUD_C_SetCompressedHUD, bCompressed) == 0x000000, "Member 'BP_EveHUD_C_SetCompressedHUD::bCompressed' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetMultiplier
// 0x0008 (0x0008 - 0x0000)
struct BP_EveHUD_C_SetMultiplier final
{
public:
	int32                                         multiplier;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUp;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldAnimate;                                    // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetMultiplier) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetMultiplier");
static_assert(sizeof(BP_EveHUD_C_SetMultiplier) == 0x000008, "Wrong size on BP_EveHUD_C_SetMultiplier");
static_assert(offsetof(BP_EveHUD_C_SetMultiplier, multiplier) == 0x000000, "Member 'BP_EveHUD_C_SetMultiplier::multiplier' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetMultiplier, bIsUp) == 0x000004, "Member 'BP_EveHUD_C_SetMultiplier::bIsUp' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetMultiplier, bShouldAnimate) == 0x000005, "Member 'BP_EveHUD_C_SetMultiplier::bShouldAnimate' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCrosshairTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_EveHUD_C_SetCrosshairTexture final
{
public:
	class UTexture2D*                             ToSet;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetCrosshairTexture) == 0x000008, "Wrong alignment on BP_EveHUD_C_SetCrosshairTexture");
static_assert(sizeof(BP_EveHUD_C_SetCrosshairTexture) == 0x000008, "Wrong size on BP_EveHUD_C_SetCrosshairTexture");
static_assert(offsetof(BP_EveHUD_C_SetCrosshairTexture, ToSet) == 0x000000, "Member 'BP_EveHUD_C_SetCrosshairTexture::ToSet' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetScore
// 0x0004 (0x0004 - 0x0000)
struct BP_EveHUD_C_SetScore final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetScore) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetScore");
static_assert(sizeof(BP_EveHUD_C_SetScore) == 0x000004, "Wrong size on BP_EveHUD_C_SetScore");
static_assert(offsetof(BP_EveHUD_C_SetScore, Score) == 0x000000, "Member 'BP_EveHUD_C_SetScore::Score' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetObjectiveProgress
// 0x0004 (0x0004 - 0x0000)
struct BP_EveHUD_C_SetObjectiveProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetObjectiveProgress) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetObjectiveProgress");
static_assert(sizeof(BP_EveHUD_C_SetObjectiveProgress) == 0x000004, "Wrong size on BP_EveHUD_C_SetObjectiveProgress");
static_assert(offsetof(BP_EveHUD_C_SetObjectiveProgress, Progress) == 0x000000, "Member 'BP_EveHUD_C_SetObjectiveProgress::Progress' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCannonPercentage
// 0x0004 (0x0004 - 0x0000)
struct BP_EveHUD_C_SetCannonPercentage final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetCannonPercentage) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetCannonPercentage");
static_assert(sizeof(BP_EveHUD_C_SetCannonPercentage) == 0x000004, "Wrong size on BP_EveHUD_C_SetCannonPercentage");
static_assert(offsetof(BP_EveHUD_C_SetCannonPercentage, InPercent) == 0x000000, "Member 'BP_EveHUD_C_SetCannonPercentage::InPercent' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.ShowRemainingNotification
// 0x0004 (0x0004 - 0x0000)
struct BP_EveHUD_C_ShowRemainingNotification final
{
public:
	int32                                         Remaining;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_ShowRemainingNotification) == 0x000004, "Wrong alignment on BP_EveHUD_C_ShowRemainingNotification");
static_assert(sizeof(BP_EveHUD_C_ShowRemainingNotification) == 0x000004, "Wrong size on BP_EveHUD_C_ShowRemainingNotification");
static_assert(offsetof(BP_EveHUD_C_ShowRemainingNotification, Remaining) == 0x000000, "Member 'BP_EveHUD_C_ShowRemainingNotification::Remaining' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetObjectiveText
// 0x0018 (0x0018 - 0x0000)
struct BP_EveHUD_C_SetObjectiveText final
{
public:
	class FString                                 InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bDoNotify;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetObjectiveText) == 0x000008, "Wrong alignment on BP_EveHUD_C_SetObjectiveText");
static_assert(sizeof(BP_EveHUD_C_SetObjectiveText) == 0x000018, "Wrong size on BP_EveHUD_C_SetObjectiveText");
static_assert(offsetof(BP_EveHUD_C_SetObjectiveText, InText) == 0x000000, "Member 'BP_EveHUD_C_SetObjectiveText::InText' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetObjectiveText, bDoNotify) == 0x000010, "Member 'BP_EveHUD_C_SetObjectiveText::bDoNotify' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.FocusOnWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_EveHUD_C_FocusOnWeapon final
{
public:
	class AWeaponBase*                            ToFocus;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_FocusOnWeapon) == 0x000008, "Wrong alignment on BP_EveHUD_C_FocusOnWeapon");
static_assert(sizeof(BP_EveHUD_C_FocusOnWeapon) == 0x000008, "Wrong size on BP_EveHUD_C_FocusOnWeapon");
static_assert(offsetof(BP_EveHUD_C_FocusOnWeapon, ToFocus) == 0x000000, "Member 'BP_EveHUD_C_FocusOnWeapon::ToFocus' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.OnSteelStuntSwap_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_OnSteelStuntSwap_Event_0 final
{
public:
	bool                                          bIsController;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_OnSteelStuntSwap_Event_0) == 0x000001, "Wrong alignment on BP_EveHUD_C_OnSteelStuntSwap_Event_0");
static_assert(sizeof(BP_EveHUD_C_OnSteelStuntSwap_Event_0) == 0x000001, "Wrong size on BP_EveHUD_C_OnSteelStuntSwap_Event_0");
static_assert(offsetof(BP_EveHUD_C_OnSteelStuntSwap_Event_0, bIsController) == 0x000000, "Member 'BP_EveHUD_C_OnSteelStuntSwap_Event_0::bIsController' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetSpeedrunnersViz
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetSpeedrunnersViz final
{
public:
	bool                                          bIsViz;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetSpeedrunnersViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetSpeedrunnersViz");
static_assert(sizeof(BP_EveHUD_C_SetSpeedrunnersViz) == 0x000001, "Wrong size on BP_EveHUD_C_SetSpeedrunnersViz");
static_assert(offsetof(BP_EveHUD_C_SetSpeedrunnersViz, bIsViz) == 0x000000, "Member 'BP_EveHUD_C_SetSpeedrunnersViz::bIsViz' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.UpdateChallengeCount
// 0x0010 (0x0010 - 0x0000)
struct BP_EveHUD_C_UpdateChallengeCount final
{
public:
	TArray<struct FChallengeDisplay>              ToDisplay;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_EveHUD_C_UpdateChallengeCount) == 0x000008, "Wrong alignment on BP_EveHUD_C_UpdateChallengeCount");
static_assert(sizeof(BP_EveHUD_C_UpdateChallengeCount) == 0x000010, "Wrong size on BP_EveHUD_C_UpdateChallengeCount");
static_assert(offsetof(BP_EveHUD_C_UpdateChallengeCount, ToDisplay) == 0x000000, "Member 'BP_EveHUD_C_UpdateChallengeCount::ToDisplay' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.ShowArcadeOver
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_ShowArcadeOver final
{
public:
	bool                                          bArcadeOver;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_ShowArcadeOver) == 0x000001, "Wrong alignment on BP_EveHUD_C_ShowArcadeOver");
static_assert(sizeof(BP_EveHUD_C_ShowArcadeOver) == 0x000001, "Wrong size on BP_EveHUD_C_ShowArcadeOver");
static_assert(offsetof(BP_EveHUD_C_ShowArcadeOver, bArcadeOver) == 0x000000, "Member 'BP_EveHUD_C_ShowArcadeOver::bArcadeOver' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCrosshairViz
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetCrosshairViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetCrosshairViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetCrosshairViz");
static_assert(sizeof(BP_EveHUD_C_SetCrosshairViz) == 0x000001, "Wrong size on BP_EveHUD_C_SetCrosshairViz");
static_assert(offsetof(BP_EveHUD_C_SetCrosshairViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetCrosshairViz::bViz' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetAmmoViz
// 0x0002 (0x0002 - 0x0000)
struct BP_EveHUD_C_SetAmmoViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetAmmoViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetAmmoViz");
static_assert(sizeof(BP_EveHUD_C_SetAmmoViz) == 0x000002, "Wrong size on BP_EveHUD_C_SetAmmoViz");
static_assert(offsetof(BP_EveHUD_C_SetAmmoViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetAmmoViz::bViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetAmmoViz, bAnimate) == 0x000001, "Member 'BP_EveHUD_C_SetAmmoViz::bAnimate' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetKickPromptViz
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetKickPromptViz final
{
public:
	bool                                          Viz;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetKickPromptViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetKickPromptViz");
static_assert(sizeof(BP_EveHUD_C_SetKickPromptViz) == 0x000001, "Wrong size on BP_EveHUD_C_SetKickPromptViz");
static_assert(offsetof(BP_EveHUD_C_SetKickPromptViz, Viz) == 0x000000, "Member 'BP_EveHUD_C_SetKickPromptViz::Viz' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetEnemiesRemaining
// 0x0008 (0x0008 - 0x0000)
struct BP_EveHUD_C_SetEnemiesRemaining final
{
public:
	int32                                         Remaining;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetEnemiesRemaining) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetEnemiesRemaining");
static_assert(sizeof(BP_EveHUD_C_SetEnemiesRemaining) == 0x000008, "Wrong size on BP_EveHUD_C_SetEnemiesRemaining");
static_assert(offsetof(BP_EveHUD_C_SetEnemiesRemaining, Remaining) == 0x000000, "Member 'BP_EveHUD_C_SetEnemiesRemaining::Remaining' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetEnemiesRemaining, Total) == 0x000004, "Member 'BP_EveHUD_C_SetEnemiesRemaining::Total' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCannonShots
// 0x0008 (0x0008 - 0x0000)
struct BP_EveHUD_C_SetCannonShots final
{
public:
	int32                                         Left;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EveHUD_C_SetCannonShots) == 0x000004, "Wrong alignment on BP_EveHUD_C_SetCannonShots");
static_assert(sizeof(BP_EveHUD_C_SetCannonShots) == 0x000008, "Wrong size on BP_EveHUD_C_SetCannonShots");
static_assert(offsetof(BP_EveHUD_C_SetCannonShots, Left) == 0x000000, "Member 'BP_EveHUD_C_SetCannonShots::Left' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetCannonShots, Total) == 0x000004, "Member 'BP_EveHUD_C_SetCannonShots::Total' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetSloMoViz
// 0x0002 (0x0002 - 0x0000)
struct BP_EveHUD_C_SetSloMoViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetSloMoViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetSloMoViz");
static_assert(sizeof(BP_EveHUD_C_SetSloMoViz) == 0x000002, "Wrong size on BP_EveHUD_C_SetSloMoViz");
static_assert(offsetof(BP_EveHUD_C_SetSloMoViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetSloMoViz::bViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetSloMoViz, bAnimate) == 0x000001, "Member 'BP_EveHUD_C_SetSloMoViz::bAnimate' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetObjectiveViz
// 0x0002 (0x0002 - 0x0000)
struct BP_EveHUD_C_SetObjectiveViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetObjectiveViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetObjectiveViz");
static_assert(sizeof(BP_EveHUD_C_SetObjectiveViz) == 0x000002, "Wrong size on BP_EveHUD_C_SetObjectiveViz");
static_assert(offsetof(BP_EveHUD_C_SetObjectiveViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetObjectiveViz::bViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetObjectiveViz, bAnimate) == 0x000001, "Member 'BP_EveHUD_C_SetObjectiveViz::bAnimate' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetLuckViz
// 0x0002 (0x0002 - 0x0000)
struct BP_EveHUD_C_SetLuckViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetLuckViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetLuckViz");
static_assert(sizeof(BP_EveHUD_C_SetLuckViz) == 0x000002, "Wrong size on BP_EveHUD_C_SetLuckViz");
static_assert(offsetof(BP_EveHUD_C_SetLuckViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetLuckViz::bViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetLuckViz, bAnimate) == 0x000001, "Member 'BP_EveHUD_C_SetLuckViz::bAnimate' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCompassViz
// 0x0002 (0x0002 - 0x0000)
struct BP_EveHUD_C_SetCompassViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetCompassViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetCompassViz");
static_assert(sizeof(BP_EveHUD_C_SetCompassViz) == 0x000002, "Wrong size on BP_EveHUD_C_SetCompassViz");
static_assert(offsetof(BP_EveHUD_C_SetCompassViz, bViz) == 0x000000, "Member 'BP_EveHUD_C_SetCompassViz::bViz' has a wrong offset!");
static_assert(offsetof(BP_EveHUD_C_SetCompassViz, bAnimate) == 0x000001, "Member 'BP_EveHUD_C_SetCompassViz::bAnimate' has a wrong offset!");

// Function BP_EveHUD.BP_EveHUD_C.SetCannonChargeViz
// 0x0001 (0x0001 - 0x0000)
struct BP_EveHUD_C_SetCannonChargeViz final
{
public:
	bool                                          bIsViz;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EveHUD_C_SetCannonChargeViz) == 0x000001, "Wrong alignment on BP_EveHUD_C_SetCannonChargeViz");
static_assert(sizeof(BP_EveHUD_C_SetCannonChargeViz) == 0x000001, "Wrong size on BP_EveHUD_C_SetCannonChargeViz");
static_assert(offsetof(BP_EveHUD_C_SetCannonChargeViz, bIsViz) == 0x000000, "Member 'BP_EveHUD_C_SetCannonChargeViz::bIsViz' has a wrong offset!");

}

