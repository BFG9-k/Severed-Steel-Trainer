#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Remaining

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Remaining.WBP_Remaining_C.ExecuteUbergraph_WBP_Remaining
// 0x0020 (0x0020 - 0x0000)
struct WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining) == 0x000008, "Wrong alignment on WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining");
static_assert(sizeof(WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining) == 0x000020, "Wrong size on WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining");
static_assert(offsetof(WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining, EntryPoint) == 0x000000, "Member 'WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_Remaining_C_ExecuteUbergraph_WBP_Remaining::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_Remaining.WBP_Remaining_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Remaining_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Remaining_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Remaining_C_PreConstruct");
static_assert(sizeof(WBP_Remaining_C_PreConstruct) == 0x000001, "Wrong size on WBP_Remaining_C_PreConstruct");
static_assert(offsetof(WBP_Remaining_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Remaining_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Remaining.WBP_Remaining_C.DoAnimation
// 0x0050 (0x0050 - 0x0000)
struct WBP_Remaining_C_DoAnimation final
{
public:
	int32                                         Remaining;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Remaining_C_DoAnimation) == 0x000008, "Wrong alignment on WBP_Remaining_C_DoAnimation");
static_assert(sizeof(WBP_Remaining_C_DoAnimation) == 0x000050, "Wrong size on WBP_Remaining_C_DoAnimation");
static_assert(offsetof(WBP_Remaining_C_DoAnimation, Remaining) == 0x000000, "Member 'WBP_Remaining_C_DoAnimation::Remaining' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_DoAnimation, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'WBP_Remaining_C_DoAnimation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_DoAnimation, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WBP_Remaining_C_DoAnimation::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_DoAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_Remaining_C_DoAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_DoAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'WBP_Remaining_C_DoAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Remaining_C_DoAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'WBP_Remaining_C_DoAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Remaining.WBP_Remaining_C.Update Phase
// 0x0004 (0x0004 - 0x0000)
struct WBP_Remaining_C_Update_Phase final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Remaining_C_Update_Phase) == 0x000004, "Wrong alignment on WBP_Remaining_C_Update_Phase");
static_assert(sizeof(WBP_Remaining_C_Update_Phase) == 0x000004, "Wrong size on WBP_Remaining_C_Update_Phase");
static_assert(offsetof(WBP_Remaining_C_Update_Phase, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'WBP_Remaining_C_Update_Phase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}

