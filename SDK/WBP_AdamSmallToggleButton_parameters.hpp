#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdamSmallToggleButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C.ExecuteUbergraph_WBP_AdamSmallToggleButton
// 0x0040 (0x0040 - 0x0000)
struct WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsController)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0018(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0020(0x0008)(NoDestructor)
	bool                                          K2Node_CustomEvent_bIsController;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton) == 0x000008, "Wrong alignment on WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton");
static_assert(sizeof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton) == 0x000040, "Wrong size on WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, EntryPoint) == 0x000000, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, K2Node_Event_InFocusEvent_1) == 0x000018, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, K2Node_Event_InFocusEvent) == 0x000020, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, K2Node_CustomEvent_bIsController) == 0x000028, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::K2Node_CustomEvent_bIsController' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, CallFunc_GetTYVCGameMode_NewParam) == 0x000030, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_AdamSmallToggleButton_C_ExecuteUbergraph_WBP_AdamSmallToggleButton::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AdamSmallToggleButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AdamSmallToggleButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AdamSmallToggleButton_C_PreConstruct");
static_assert(sizeof(WBP_AdamSmallToggleButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_AdamSmallToggleButton_C_PreConstruct");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AdamSmallToggleButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C.ControllerSwapped
// 0x0001 (0x0001 - 0x0000)
struct WBP_AdamSmallToggleButton_C_ControllerSwapped final
{
public:
	bool                                          bIsController;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AdamSmallToggleButton_C_ControllerSwapped) == 0x000001, "Wrong alignment on WBP_AdamSmallToggleButton_C_ControllerSwapped");
static_assert(sizeof(WBP_AdamSmallToggleButton_C_ControllerSwapped) == 0x000001, "Wrong size on WBP_AdamSmallToggleButton_C_ControllerSwapped");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_ControllerSwapped, bIsController) == 0x000000, "Member 'WBP_AdamSmallToggleButton_C_ControllerSwapped::bIsController' has a wrong offset!");

// Function WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_AdamSmallToggleButton_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdamSmallToggleButton_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_AdamSmallToggleButton_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_AdamSmallToggleButton_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_AdamSmallToggleButton_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_AdamSmallToggleButton_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_AdamSmallToggleButton_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C.SetStatus
// 0x0280 (0x0280 - 0x0000)
struct WBP_AdamSmallToggleButton_C_SetStatus final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           K2Node_Select_Default;                             // 0x0008(0x0278)(ConstParm)
};
static_assert(alignof(WBP_AdamSmallToggleButton_C_SetStatus) == 0x000008, "Wrong alignment on WBP_AdamSmallToggleButton_C_SetStatus");
static_assert(sizeof(WBP_AdamSmallToggleButton_C_SetStatus) == 0x000280, "Wrong size on WBP_AdamSmallToggleButton_C_SetStatus");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_SetStatus, bActive) == 0x000000, "Member 'WBP_AdamSmallToggleButton_C_SetStatus::bActive' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_SetStatus, Temp_bool_Variable) == 0x000001, "Member 'WBP_AdamSmallToggleButton_C_SetStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AdamSmallToggleButton_C_SetStatus, K2Node_Select_Default) == 0x000008, "Member 'WBP_AdamSmallToggleButton_C_SetStatus::K2Node_Select_Default' has a wrong offset!");

}

