#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LuckDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LuckDisplay.BP_LuckDisplay_C.ExecuteUbergraph_BP_LuckDisplay
// 0x0100 (0x0100 - 0x0000)
struct BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Amount;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRestore;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxAmount;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_2;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay) == 0x000008, "Wrong alignment on BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay");
static_assert(sizeof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay) == 0x000100, "Wrong size on BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, EntryPoint) == 0x000000, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_int_Variable) == 0x000004, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_object_Variable) == 0x000008, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_int_Variable_1) == 0x000010, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_object_Variable_1) == 0x000018, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_int_Variable_2) == 0x000020, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable) == 0x000024, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_1) == 0x000025, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_2) == 0x000026, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_3) == 0x000027, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_int_Variable_3) == 0x000028, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_4) == 0x00002C, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_5) == 0x00002D, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_6) == 0x00002E, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_7) == 0x00002F, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_int_Variable_4) == 0x000030, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_8) == 0x000034, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_9) == 0x000035, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_10) == 0x000036, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, Temp_byte_Variable_11) == 0x000037, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Event_Amount) == 0x000038, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Event_bRestore) == 0x00003C, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Event_bRestore' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Clamp_ReturnValue) == 0x000040, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Select_Default) == 0x000048, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Event_MaxAmount) == 0x000058, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Event_MaxAmount' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Select_Default_1) == 0x000060, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_PlayAnimation_ReturnValue_1) == 0x000070, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Clamp_ReturnValue_1) == 0x000078, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Select_Default_2) == 0x00007C, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Select_Default_3) == 0x00007D, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, K2Node_Select_Default_4) == 0x00007E, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000080, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000088, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000090, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000098, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A8, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000B0, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000B8, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_GetPosition_ReturnValue) == 0x0000C8, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x0000D0, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x0000D8, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_GetPosition_ReturnValue_1) == 0x0000E0, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_GetPosition_ReturnValue_2) == 0x0000E8, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_GetPosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000F0, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x0000F8, "Member 'BP_LuckDisplay_C_ExecuteUbergraph_BP_LuckDisplay::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");

// Function BP_LuckDisplay.BP_LuckDisplay_C.Reset
// 0x0004 (0x0004 - 0x0000)
struct BP_LuckDisplay_C_Reset final
{
public:
	int32                                         MaxAmount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LuckDisplay_C_Reset) == 0x000004, "Wrong alignment on BP_LuckDisplay_C_Reset");
static_assert(sizeof(BP_LuckDisplay_C_Reset) == 0x000004, "Wrong size on BP_LuckDisplay_C_Reset");
static_assert(offsetof(BP_LuckDisplay_C_Reset, MaxAmount) == 0x000000, "Member 'BP_LuckDisplay_C_Reset::MaxAmount' has a wrong offset!");

// Function BP_LuckDisplay.BP_LuckDisplay_C.SetLuck
// 0x0008 (0x0008 - 0x0000)
struct BP_LuckDisplay_C_SetLuck final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LuckDisplay_C_SetLuck) == 0x000004, "Wrong alignment on BP_LuckDisplay_C_SetLuck");
static_assert(sizeof(BP_LuckDisplay_C_SetLuck) == 0x000008, "Wrong size on BP_LuckDisplay_C_SetLuck");
static_assert(offsetof(BP_LuckDisplay_C_SetLuck, Amount) == 0x000000, "Member 'BP_LuckDisplay_C_SetLuck::Amount' has a wrong offset!");
static_assert(offsetof(BP_LuckDisplay_C_SetLuck, bRestore) == 0x000004, "Member 'BP_LuckDisplay_C_SetLuck::bRestore' has a wrong offset!");

}

