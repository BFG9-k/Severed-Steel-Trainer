#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Icon_Base

#include "Basic.hpp"

#include "E_GlassMaskTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_Sizes_structs.hpp"
#include "Engine_structs.hpp"
#include "E_IconBaseTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Icon_Base.WB_Icon_Base_C
// 0x01C0 (0x0420 - 0x0260)
class UWB_Icon_Base_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 img_Icon;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Icon_Base;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Icon_Mask1;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Icon_Mask2;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Icon_Outline1;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Icon_Outline2;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_IconText;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UObject*                                Icon;                                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bBaseColor;                                        // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BaseColor;                                         // 0x02AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bBaseMask;                                         // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BaseMaskColor;                                     // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bOutline1;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Outline1_Color;                                    // 0x02D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bContour;                                          // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Contour_Color;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bGlassMask;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           GlassMask_Color;                                   // 0x02FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_GlassMaskTypes                              GlassMask_Types;                                   // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           IconColor;                                         // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         IconScale;                                         // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Overall_Angle;                                     // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_IconBaseTypes                               IconBaseTypes;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_Sizes                                       IconBaseSize;                                      // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Custom_BaseIcon;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Custom_Mask1;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Custom_Mask2;                                      // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Custom_Outline1;                                   // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Custom_Outline2;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Icon_Translation_X;                                // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Icon_Translation_Y;                                // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseIconText;                                      // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   IconText;                                          // 0x0368(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FWidgetTransform                       IconText_Transform;                                // 0x0380(0x001C)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            IconText_Color;                                    // 0x03A0(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateFontInfo                         IconTextFont;                                      // 0x03C8(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Icon_Base(int32 EntryPoint);
	void Update();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Icon_Base_C">();
	}
	static class UWB_Icon_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Icon_Base_C>();
	}
};
static_assert(alignof(UWB_Icon_Base_C) == 0x000008, "Wrong alignment on UWB_Icon_Base_C");
static_assert(sizeof(UWB_Icon_Base_C) == 0x000420, "Wrong size on UWB_Icon_Base_C");
static_assert(offsetof(UWB_Icon_Base_C, UberGraphFrame) == 0x000260, "Member 'UWB_Icon_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, img_Icon) == 0x000268, "Member 'UWB_Icon_Base_C::img_Icon' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, img_Icon_Base) == 0x000270, "Member 'UWB_Icon_Base_C::img_Icon_Base' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, img_Icon_Mask1) == 0x000278, "Member 'UWB_Icon_Base_C::img_Icon_Mask1' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, img_Icon_Mask2) == 0x000280, "Member 'UWB_Icon_Base_C::img_Icon_Mask2' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, img_Icon_Outline1) == 0x000288, "Member 'UWB_Icon_Base_C::img_Icon_Outline1' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, img_Icon_Outline2) == 0x000290, "Member 'UWB_Icon_Base_C::img_Icon_Outline2' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Text_IconText) == 0x000298, "Member 'UWB_Icon_Base_C::Text_IconText' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Icon) == 0x0002A0, "Member 'UWB_Icon_Base_C::Icon' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, bBaseColor) == 0x0002A8, "Member 'UWB_Icon_Base_C::bBaseColor' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, BaseColor) == 0x0002AC, "Member 'UWB_Icon_Base_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, bBaseMask) == 0x0002BC, "Member 'UWB_Icon_Base_C::bBaseMask' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, BaseMaskColor) == 0x0002C0, "Member 'UWB_Icon_Base_C::BaseMaskColor' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, bOutline1) == 0x0002D0, "Member 'UWB_Icon_Base_C::bOutline1' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Outline1_Color) == 0x0002D4, "Member 'UWB_Icon_Base_C::Outline1_Color' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, bContour) == 0x0002E4, "Member 'UWB_Icon_Base_C::bContour' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Contour_Color) == 0x0002E8, "Member 'UWB_Icon_Base_C::Contour_Color' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, bGlassMask) == 0x0002F8, "Member 'UWB_Icon_Base_C::bGlassMask' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, GlassMask_Color) == 0x0002FC, "Member 'UWB_Icon_Base_C::GlassMask_Color' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, GlassMask_Types) == 0x00030C, "Member 'UWB_Icon_Base_C::GlassMask_Types' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconColor) == 0x000310, "Member 'UWB_Icon_Base_C::IconColor' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconScale) == 0x000320, "Member 'UWB_Icon_Base_C::IconScale' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Overall_Angle) == 0x000324, "Member 'UWB_Icon_Base_C::Overall_Angle' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconBaseTypes) == 0x000328, "Member 'UWB_Icon_Base_C::IconBaseTypes' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconBaseSize) == 0x000329, "Member 'UWB_Icon_Base_C::IconBaseSize' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Custom_BaseIcon) == 0x000330, "Member 'UWB_Icon_Base_C::Custom_BaseIcon' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Custom_Mask1) == 0x000338, "Member 'UWB_Icon_Base_C::Custom_Mask1' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Custom_Mask2) == 0x000340, "Member 'UWB_Icon_Base_C::Custom_Mask2' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Custom_Outline1) == 0x000348, "Member 'UWB_Icon_Base_C::Custom_Outline1' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Custom_Outline2) == 0x000350, "Member 'UWB_Icon_Base_C::Custom_Outline2' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Icon_Translation_X) == 0x000358, "Member 'UWB_Icon_Base_C::Icon_Translation_X' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, Icon_Translation_Y) == 0x00035C, "Member 'UWB_Icon_Base_C::Icon_Translation_Y' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, bUseIconText) == 0x000360, "Member 'UWB_Icon_Base_C::bUseIconText' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconText) == 0x000368, "Member 'UWB_Icon_Base_C::IconText' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconText_Transform) == 0x000380, "Member 'UWB_Icon_Base_C::IconText_Transform' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconText_Color) == 0x0003A0, "Member 'UWB_Icon_Base_C::IconText_Color' has a wrong offset!");
static_assert(offsetof(UWB_Icon_Base_C, IconTextFont) == 0x0003C8, "Member 'UWB_Icon_Base_C::IconTextFont' has a wrong offset!");

}

