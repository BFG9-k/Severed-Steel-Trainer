#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bullseye

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Bullseye.BP_Bullseye_C.ExecuteUbergraph_BP_Bullseye
// 0x0010 (0x0010 - 0x0000)
struct BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Impulse;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye) == 0x000004, "Wrong alignment on BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye");
static_assert(sizeof(BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye) == 0x000010, "Wrong size on BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye");
static_assert(offsetof(BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye, EntryPoint) == 0x000000, "Member 'BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye, K2Node_Event_Impulse) == 0x000004, "Member 'BP_Bullseye_C_ExecuteUbergraph_BP_Bullseye::K2Node_Event_Impulse' has a wrong offset!");

// Function BP_Bullseye.BP_Bullseye_C.ImpulseIfPossible
// 0x000C (0x000C - 0x0000)
struct BP_Bullseye_C_ImpulseIfPossible final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Bullseye_C_ImpulseIfPossible) == 0x000004, "Wrong alignment on BP_Bullseye_C_ImpulseIfPossible");
static_assert(sizeof(BP_Bullseye_C_ImpulseIfPossible) == 0x00000C, "Wrong size on BP_Bullseye_C_ImpulseIfPossible");
static_assert(offsetof(BP_Bullseye_C_ImpulseIfPossible, Impulse) == 0x000000, "Member 'BP_Bullseye_C_ImpulseIfPossible::Impulse' has a wrong offset!");

// Function BP_Bullseye.BP_Bullseye_C.OnHit
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Bullseye_C_OnHit final
{
public:
	EImpactType                                   ImpactType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Dmg;                                               // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Bullseye_C_OnHit) == 0x000008, "Wrong alignment on BP_Bullseye_C_OnHit");
static_assert(sizeof(BP_Bullseye_C_OnHit) == 0x0000A0, "Wrong size on BP_Bullseye_C_OnHit");
static_assert(offsetof(BP_Bullseye_C_OnHit, ImpactType) == 0x000000, "Member 'BP_Bullseye_C_OnHit::ImpactType' has a wrong offset!");
static_assert(offsetof(BP_Bullseye_C_OnHit, HitResult) == 0x000004, "Member 'BP_Bullseye_C_OnHit::HitResult' has a wrong offset!");
static_assert(offsetof(BP_Bullseye_C_OnHit, Dmg) == 0x00008C, "Member 'BP_Bullseye_C_OnHit::Dmg' has a wrong offset!");
static_assert(offsetof(BP_Bullseye_C_OnHit, ReturnValue) == 0x000090, "Member 'BP_Bullseye_C_OnHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Bullseye_C_OnHit, CallFunc_GetTYVCGameMode_NewParam) == 0x000098, "Member 'BP_Bullseye_C_OnHit::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");

}

