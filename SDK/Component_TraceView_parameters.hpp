#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Component_TraceView

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Component_TraceView.Component_TraceView_C.SphereView
// 0x0318 (0x0318 - 0x0000)
struct Component_TraceView_C_SphereView final
{
public:
	TArray<class UClass*>                         ActorsList;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ScanRadius;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScanPoint;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ActorsTypes;                                       // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      TraceTypes;                                        // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         TraceRadius;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickInterval;                                      // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDebug;                                           // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x004C(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Sin_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter*>               K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0148(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue_1;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0178(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x020C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0296(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297[0x1];                                      // 0x0297(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Component_TraceView_C_SphereView) == 0x000008, "Wrong alignment on Component_TraceView_C_SphereView");
static_assert(sizeof(Component_TraceView_C_SphereView) == 0x000318, "Wrong size on Component_TraceView_C_SphereView");
static_assert(offsetof(Component_TraceView_C_SphereView, ActorsList) == 0x000000, "Member 'Component_TraceView_C_SphereView::ActorsList' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, ScanRadius) == 0x000010, "Member 'Component_TraceView_C_SphereView::ScanRadius' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, ScanPoint) == 0x000014, "Member 'Component_TraceView_C_SphereView::ScanPoint' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, ActorsTypes) == 0x000020, "Member 'Component_TraceView_C_SphereView::ActorsTypes' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, TraceTypes) == 0x000030, "Member 'Component_TraceView_C_SphereView::TraceTypes' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, TraceRadius) == 0x000040, "Member 'Component_TraceView_C_SphereView::TraceRadius' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, TickInterval) == 0x000044, "Member 'Component_TraceView_C_SphereView::TickInterval' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, IsDebug) == 0x000048, "Member 'Component_TraceView_C_SphereView::IsDebug' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, OutHit) == 0x00004C, "Member 'Component_TraceView_C_SphereView::OutHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000D4, "Member 'Component_TraceView_C_SphereView::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'Component_TraceView_C_SphereView::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0000DC, "Member 'Component_TraceView_C_SphereView::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_Sin_ReturnValue) == 0x0000E0, "Member 'Component_TraceView_C_SphereView::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_Abs_ReturnValue) == 0x0000E4, "Member 'Component_TraceView_C_SphereView::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x0000E8, "Member 'Component_TraceView_C_SphereView::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E9, "Member 'Component_TraceView_C_SphereView::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'Component_TraceView_C_SphereView::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, Temp_byte_Variable) == 0x0000F8, "Member 'Component_TraceView_C_SphereView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, Temp_byte_Variable_1) == 0x0000F9, "Member 'Component_TraceView_C_SphereView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, Temp_bool_Variable) == 0x0000FA, "Member 'Component_TraceView_C_SphereView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_GetTYVCGameMode_NewParam) == 0x000100, "Member 'Component_TraceView_C_SphereView::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, K2Node_Select_Default) == 0x000108, "Member 'Component_TraceView_C_SphereView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, K2Node_MakeArray_Array) == 0x000110, "Member 'Component_TraceView_C_SphereView::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_GetDistanceTo_ReturnValue) == 0x000120, "Member 'Component_TraceView_C_SphereView::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_Array_Get_Item) == 0x000128, "Member 'Component_TraceView_C_SphereView::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_Less_FloatFloat_ReturnValue) == 0x000130, "Member 'Component_TraceView_C_SphereView::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_IsValid_ReturnValue) == 0x000131, "Member 'Component_TraceView_C_SphereView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000134, "Member 'Component_TraceView_C_SphereView::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_IsValid_ReturnValue_1) == 0x000140, "Member 'Component_TraceView_C_SphereView::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, Temp_object_Variable) == 0x000148, "Member 'Component_TraceView_C_SphereView::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BooleanAND_ReturnValue) == 0x000158, "Member 'Component_TraceView_C_SphereView::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_GetOwner_ReturnValue_1) == 0x000160, "Member 'Component_TraceView_C_SphereView::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_GetDistanceTo_ReturnValue_1) == 0x000168, "Member 'Component_TraceView_C_SphereView::CallFunc_GetDistanceTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00016C, "Member 'Component_TraceView_C_SphereView::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_MakeHitResult_ReturnValue) == 0x000178, "Member 'Component_TraceView_C_SphereView::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_SelectVector_ReturnValue) == 0x000200, "Member 'Component_TraceView_C_SphereView::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x00020C, "Member 'Component_TraceView_C_SphereView::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000294, "Member 'Component_TraceView_C_SphereView::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_bBlockingHit) == 0x000295, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_bInitialOverlap) == 0x000296, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_Time) == 0x000298, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_Distance) == 0x00029C, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_Location) == 0x0002A0, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_ImpactPoint) == 0x0002AC, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_Normal) == 0x0002B8, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_ImpactNormal) == 0x0002C4, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_PhysMat) == 0x0002D0, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_HitActor) == 0x0002D8, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_HitComponent) == 0x0002E0, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_HitBoneName) == 0x0002E8, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_TraceStart) == 0x0002FC, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_BreakHitResult_TraceEnd) == 0x000308, "Member 'Component_TraceView_C_SphereView::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_SphereView, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000314, "Member 'Component_TraceView_C_SphereView::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Component_TraceView.Component_TraceView_C.TraceView
// 0x0350 (0x0350 - 0x0000)
struct Component_TraceView_C_TraceView final
{
public:
	TArray<class UClass*>                         ActorsList;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ScanRadius;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ScanPoint;                                         // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      ActorsTypes;                                       // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      TraceTypes;                                        // 0x0060(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Trace__R_H_V_;                                     // 0x0070(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickInterval;                                      // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDebug;                                           // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x0084(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0168(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x01B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0244(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CF[0x1];                                      // 0x02CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Component_TraceView_C_TraceView) == 0x000010, "Wrong alignment on Component_TraceView_C_TraceView");
static_assert(sizeof(Component_TraceView_C_TraceView) == 0x000350, "Wrong size on Component_TraceView_C_TraceView");
static_assert(offsetof(Component_TraceView_C_TraceView, ActorsList) == 0x000000, "Member 'Component_TraceView_C_TraceView::ActorsList' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, ScanRadius) == 0x000010, "Member 'Component_TraceView_C_TraceView::ScanRadius' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, ScanPoint) == 0x000020, "Member 'Component_TraceView_C_TraceView::ScanPoint' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, ActorsTypes) == 0x000050, "Member 'Component_TraceView_C_TraceView::ActorsTypes' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, TraceTypes) == 0x000060, "Member 'Component_TraceView_C_TraceView::TraceTypes' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Trace__R_H_V_) == 0x000070, "Member 'Component_TraceView_C_TraceView::Trace__R_H_V_' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, TickInterval) == 0x00007C, "Member 'Component_TraceView_C_TraceView::TickInterval' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, IsDebug) == 0x000080, "Member 'Component_TraceView_C_TraceView::IsDebug' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, OutHit) == 0x000084, "Member 'Component_TraceView_C_TraceView::OutHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakVector_X) == 0x00010C, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakVector_Y) == 0x000110, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakVector_Z) == 0x000114, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakTransform_Location) == 0x000118, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakTransform_Rotation) == 0x000124, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakTransform_Scale) == 0x000130, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00013C, "Member 'Component_TraceView_C_TraceView::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakRotator_Roll) == 0x000140, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakRotator_Pitch) == 0x000144, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakRotator_Yaw) == 0x000148, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Add_FloatFloat_ReturnValue) == 0x00014C, "Member 'Component_TraceView_C_TraceView::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000150, "Member 'Component_TraceView_C_TraceView::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000154, "Member 'Component_TraceView_C_TraceView::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000158, "Member 'Component_TraceView_C_TraceView::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Array_Length_ReturnValue) == 0x00015C, "Member 'Component_TraceView_C_TraceView::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_int_Array_Index_Variable) == 0x000160, "Member 'Component_TraceView_C_TraceView::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_object_Variable) == 0x000168, "Member 'Component_TraceView_C_TraceView::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Array_Get_Item) == 0x000178, "Member 'Component_TraceView_C_TraceView::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000180, "Member 'Component_TraceView_C_TraceView::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'Component_TraceView_C_TraceView::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000188, "Member 'Component_TraceView_C_TraceView::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Sin_ReturnValue) == 0x00018C, "Member 'Component_TraceView_C_TraceView::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'Component_TraceView_C_TraceView::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Abs_ReturnValue) == 0x000194, "Member 'Component_TraceView_C_TraceView::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000198, "Member 'Component_TraceView_C_TraceView::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'Component_TraceView_C_TraceView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_object_Variable_1) == 0x0001A0, "Member 'Component_TraceView_C_TraceView::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_byte_Variable) == 0x0001B0, "Member 'Component_TraceView_C_TraceView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_SphereOverlapActors_OutActors) == 0x0001B8, "Member 'Component_TraceView_C_TraceView::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_SphereOverlapActors_ReturnValue) == 0x0001C8, "Member 'Component_TraceView_C_TraceView::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'Component_TraceView_C_TraceView::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001D8, "Member 'Component_TraceView_C_TraceView::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_IsValid_ReturnValue) == 0x0001D9, "Member 'Component_TraceView_C_TraceView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001DC, "Member 'Component_TraceView_C_TraceView::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_byte_Variable_1) == 0x0001E8, "Member 'Component_TraceView_C_TraceView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001EC, "Member 'Component_TraceView_C_TraceView::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakRotator_Roll_1) == 0x0001F8, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakRotator_Pitch_1) == 0x0001FC, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakRotator_Yaw_1) == 0x000200, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_ClampAngle_ReturnValue) == 0x000204, "Member 'Component_TraceView_C_TraceView::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_ClampAngle_ReturnValue_1) == 0x000208, "Member 'Component_TraceView_C_TraceView::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, Temp_bool_Variable) == 0x00020C, "Member 'Component_TraceView_C_TraceView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_MakeRotator_ReturnValue) == 0x000210, "Member 'Component_TraceView_C_TraceView::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_GetForwardVector_ReturnValue) == 0x00021C, "Member 'Component_TraceView_C_TraceView::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, K2Node_Select_Default) == 0x000228, "Member 'Component_TraceView_C_TraceView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00022C, "Member 'Component_TraceView_C_TraceView::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_Add_VectorVector_ReturnValue) == 0x000238, "Member 'Component_TraceView_C_TraceView::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000244, "Member 'Component_TraceView_C_TraceView::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0002CC, "Member 'Component_TraceView_C_TraceView::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_bBlockingHit) == 0x0002CD, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002CE, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_Time) == 0x0002D0, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_Distance) == 0x0002D4, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_Location) == 0x0002D8, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E4, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_Normal) == 0x0002F0, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_ImpactNormal) == 0x0002FC, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_PhysMat) == 0x000308, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_HitActor) == 0x000310, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_HitComponent) == 0x000318, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_HitBoneName) == 0x000320, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_HitItem) == 0x000328, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_ElementIndex) == 0x00032C, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_FaceIndex) == 0x000330, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_TraceStart) == 0x000334, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_BreakHitResult_TraceEnd) == 0x000340, "Member 'Component_TraceView_C_TraceView::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_TraceView, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00034C, "Member 'Component_TraceView_C_TraceView::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Component_TraceView.Component_TraceView_C.CheckView
// 0x0198 (0x0198 - 0x0000)
struct Component_TraceView_C_CheckView final
{
public:
	float                                         ScanDist;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScanX;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScanY;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceRadius;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CHECKPOINT;                                        // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Component_TraceView_C_CheckView) == 0x000008, "Wrong alignment on Component_TraceView_C_CheckView");
static_assert(sizeof(Component_TraceView_C_CheckView) == 0x000198, "Wrong size on Component_TraceView_C_CheckView");
static_assert(offsetof(Component_TraceView_C_CheckView, ScanDist) == 0x000000, "Member 'Component_TraceView_C_CheckView::ScanDist' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, ScanX) == 0x000004, "Member 'Component_TraceView_C_CheckView::ScanX' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, ScanY) == 0x000008, "Member 'Component_TraceView_C_CheckView::ScanY' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, TraceRadius) == 0x00000C, "Member 'Component_TraceView_C_CheckView::TraceRadius' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CHECKPOINT) == 0x000010, "Member 'Component_TraceView_C_CheckView::CHECKPOINT' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, ReturnValue) == 0x00001C, "Member 'Component_TraceView_C_CheckView::ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, Temp_object_Variable) == 0x000020, "Member 'Component_TraceView_C_CheckView::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000030, "Member 'Component_TraceView_C_CheckView::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_DegCos_ReturnValue) == 0x000034, "Member 'Component_TraceView_C_CheckView::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_DegCos_ReturnValue_1) == 0x000038, "Member 'Component_TraceView_C_CheckView::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, K2Node_MakeArray_Array) == 0x000040, "Member 'Component_TraceView_C_CheckView::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'Component_TraceView_C_CheckView::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000058, "Member 'Component_TraceView_C_CheckView::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'Component_TraceView_C_CheckView::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00006C, "Member 'Component_TraceView_C_CheckView::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'Component_TraceView_C_CheckView::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_GetActorForwardVector_ReturnValue) == 0x000084, "Member 'Component_TraceView_C_CheckView::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_Vector_Distance_ReturnValue) == 0x000090, "Member 'Component_TraceView_C_CheckView::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BreakVector_X) == 0x000094, "Member 'Component_TraceView_C_CheckView::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BreakVector_Y) == 0x000098, "Member 'Component_TraceView_C_CheckView::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BreakVector_Z) == 0x00009C, "Member 'Component_TraceView_C_CheckView::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'Component_TraceView_C_CheckView::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'Component_TraceView_C_CheckView::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_Normal_ReturnValue) == 0x0000B0, "Member 'Component_TraceView_C_CheckView::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000BC, "Member 'Component_TraceView_C_CheckView::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000144, "Member 'Component_TraceView_C_CheckView::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_FindLookAtRotation_ReturnValue) == 0x000148, "Member 'Component_TraceView_C_CheckView::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_Not_PreBool_ReturnValue) == 0x000154, "Member 'Component_TraceView_C_CheckView::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_GetForwardVector_ReturnValue) == 0x000158, "Member 'Component_TraceView_C_CheckView::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BreakVector_X_1) == 0x000164, "Member 'Component_TraceView_C_CheckView::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BreakVector_Y_1) == 0x000168, "Member 'Component_TraceView_C_CheckView::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BreakVector_Z_1) == 0x00016C, "Member 'Component_TraceView_C_CheckView::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_Dot_VectorVector_ReturnValue) == 0x000170, "Member 'Component_TraceView_C_CheckView::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_MakeVector_ReturnValue_1) == 0x000174, "Member 'Component_TraceView_C_CheckView::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000180, "Member 'Component_TraceView_C_CheckView::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_Normal_ReturnValue_1) == 0x000184, "Member 'Component_TraceView_C_CheckView::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000190, "Member 'Component_TraceView_C_CheckView::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000194, "Member 'Component_TraceView_C_CheckView::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Component_TraceView_C_CheckView, CallFunc_BooleanAND_ReturnValue) == 0x000195, "Member 'Component_TraceView_C_CheckView::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

