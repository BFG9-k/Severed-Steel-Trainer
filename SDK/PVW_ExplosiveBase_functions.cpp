#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PVW_ExplosiveBase

#include "Basic.hpp"

#include "PVW_ExplosiveBase_classes.hpp"
#include "PVW_ExplosiveBase_parameters.hpp"


namespace SDK
{

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.ExecuteUbergraph_PVW_ExplosiveBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APVW_ExplosiveBase_C::ExecuteUbergraph_PVW_ExplosiveBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "ExecuteUbergraph_PVW_ExplosiveBase");

	Params::PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void APVW_ExplosiveBase_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.RemoveCompass
// (Event, Public, BlueprintEvent)

void APVW_ExplosiveBase_C::RemoveCompass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "RemoveCompass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void APVW_ExplosiveBase_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void APVW_ExplosiveBase_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.DoActions
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActionType                             ToDo                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSimulated                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APVW_ExplosiveBase_C::DoActions(EActionType ToDo, bool bSimulated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "DoActions");

	Params::PVW_ExplosiveBase_C_DoActions Parms{};

	Parms.ToDo = ToDo;
	Parms.bSimulated = bSimulated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.OnHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EImpactType                             ImpactType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Dmg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APVW_ExplosiveBase_C::OnHit(EImpactType ImpactType, const struct FHitResult& HitResult, float Dmg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "OnHit");

	Params::PVW_ExplosiveBase_C_OnHit Parms{};

	Parms.ImpactType = ImpactType;
	Parms.HitResult = std::move(HitResult);
	Parms.Dmg = Dmg;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.GetGoals
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EGoalType>                       ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<EGoalType> APVW_ExplosiveBase_C::GetGoals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "GetGoals");

	Params::PVW_ExplosiveBase_C_GetGoals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.Xplode
// (Public, BlueprintCallable, BlueprintEvent)

void APVW_ExplosiveBase_C::Xplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "Xplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.GetActions
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EActionType>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<EActionType> APVW_ExplosiveBase_C::GetActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PVW_ExplosiveBase_C", "GetActions");

	Params::PVW_ExplosiveBase_C_GetActions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

