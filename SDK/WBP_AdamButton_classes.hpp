#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdamButton

#include "Basic.hpp"

#include "E_ButtonSize_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AdamButton.WBP_AdamButton_C
// 0x28F8 (0x2B58 - 0x0260)
class UWBP_AdamButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_45;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ControllerBtn;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img;                                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              LevelTextScaleBox;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelTxt;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_1;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             text_block_137;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Wrapper;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnPressed;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnFocused;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FButtonStyle                           FocusedStyle;                                      // 0x02D8(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           InactiveStyle;                                     // 0x0550(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           UnfocusedStyle;                                    // 0x07C8(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bInactive;                                         // 0x0A40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A41[0x7];                                      // 0x0A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x0A48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bIsController)> OnControllerSwapBind;                              // 0x0A58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FButtonStyle                           UnfocusedControllerStyle;                          // 0x0A68(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x0CE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsNonInteractiveLabel;                            // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           LabelStyle;                                        // 0x0CF8(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              AddedToFocusPath;                                  // 0x0F70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	E_ButtonSize                                  Size;                                              // 0x0F80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_F81[0x7];                                      // 0x0F81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           UnfocusedStyleS;                                   // 0x0F88(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           UnfocusedStyleM;                                   // 0x1200(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           UnfocusedStyleL;                                   // 0x1478(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateFontInfo                         LabelFont;                                         // 0x16F0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FButtonStyle                           UnfocusedStyleSController;                         // 0x1748(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           UnfocusedStyleMController;                         // 0x19C0(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           UnfocusedStyleLController;                         // 0x1C38(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           FocusedStyleS;                                     // 0x1EB0(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           FocusedStyleM;                                     // 0x2128(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           FocusedStyleL;                                     // 0x23A0(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsToggled;                                        // 0x2618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2619[0x7];                                     // 0x2619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x2620(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FButtonStyle                           LockedStyleL;                                      // 0x2638(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           UnfocusedStyleLT;                                  // 0x28B0(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             BtnTexture;                                        // 0x2B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWBP_AdamButton_C* me)> OnPressedWithSelf;                                 // 0x2B30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UObject*                                GenericPayload;                                    // 0x2B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWBP_AdamButton_C* KME)> OnHoveredWithSelf;                                 // 0x2B48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_AdamButton(int32 EntryPoint);
	void OnControllerSwap(bool bIsController);
	void SimUnhovered();
	void SimHovered();
	void SmulateClick();
	void PreConstruct(bool IsDesignTime);
	void SetLockViz();
	void Construct();
	void BndEvt__Button_45_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_45_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void SetToggled(bool bIsToggled_0);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void BndEvt__Button_45_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void SetAsActive(bool bActive);
	void SetImageViz(bool Viz);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AdamButton_C">();
	}
	static class UWBP_AdamButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AdamButton_C>();
	}
};
static_assert(alignof(UWBP_AdamButton_C) == 0x000008, "Wrong alignment on UWBP_AdamButton_C");
static_assert(sizeof(UWBP_AdamButton_C) == 0x002B58, "Wrong size on UWBP_AdamButton_C");
static_assert(offsetof(UWBP_AdamButton_C, UberGraphFrame) == 0x000260, "Member 'UWBP_AdamButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Border_0) == 0x000268, "Member 'UWBP_AdamButton_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Button_45) == 0x000270, "Member 'UWBP_AdamButton_C::Button_45' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, ControllerBtn) == 0x000278, "Member 'UWBP_AdamButton_C::ControllerBtn' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Img) == 0x000280, "Member 'UWBP_AdamButton_C::Img' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, LevelTextScaleBox) == 0x000288, "Member 'UWBP_AdamButton_C::LevelTextScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, LevelTxt) == 0x000290, "Member 'UWBP_AdamButton_C::LevelTxt' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Overlay_1) == 0x000298, "Member 'UWBP_AdamButton_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, SizeBox_0) == 0x0002A0, "Member 'UWBP_AdamButton_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, text_block_137) == 0x0002A8, "Member 'UWBP_AdamButton_C::text_block_137' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Wrapper) == 0x0002B0, "Member 'UWBP_AdamButton_C::Wrapper' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnPressed) == 0x0002B8, "Member 'UWBP_AdamButton_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnFocused) == 0x0002C8, "Member 'UWBP_AdamButton_C::OnFocused' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, FocusedStyle) == 0x0002D8, "Member 'UWBP_AdamButton_C::FocusedStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, InactiveStyle) == 0x000550, "Member 'UWBP_AdamButton_C::InactiveStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyle) == 0x0007C8, "Member 'UWBP_AdamButton_C::UnfocusedStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, bInactive) == 0x000A40, "Member 'UWBP_AdamButton_C::bInactive' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnHovered) == 0x000A48, "Member 'UWBP_AdamButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnControllerSwapBind) == 0x000A58, "Member 'UWBP_AdamButton_C::OnControllerSwapBind' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedControllerStyle) == 0x000A68, "Member 'UWBP_AdamButton_C::UnfocusedControllerStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnUnhovered) == 0x000CE0, "Member 'UWBP_AdamButton_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, bIsNonInteractiveLabel) == 0x000CF0, "Member 'UWBP_AdamButton_C::bIsNonInteractiveLabel' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, LabelStyle) == 0x000CF8, "Member 'UWBP_AdamButton_C::LabelStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, AddedToFocusPath) == 0x000F70, "Member 'UWBP_AdamButton_C::AddedToFocusPath' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Size) == 0x000F80, "Member 'UWBP_AdamButton_C::Size' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleS) == 0x000F88, "Member 'UWBP_AdamButton_C::UnfocusedStyleS' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleM) == 0x001200, "Member 'UWBP_AdamButton_C::UnfocusedStyleM' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleL) == 0x001478, "Member 'UWBP_AdamButton_C::UnfocusedStyleL' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, LabelFont) == 0x0016F0, "Member 'UWBP_AdamButton_C::LabelFont' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleSController) == 0x001748, "Member 'UWBP_AdamButton_C::UnfocusedStyleSController' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleMController) == 0x0019C0, "Member 'UWBP_AdamButton_C::UnfocusedStyleMController' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleLController) == 0x001C38, "Member 'UWBP_AdamButton_C::UnfocusedStyleLController' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, FocusedStyleS) == 0x001EB0, "Member 'UWBP_AdamButton_C::FocusedStyleS' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, FocusedStyleM) == 0x002128, "Member 'UWBP_AdamButton_C::FocusedStyleM' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, FocusedStyleL) == 0x0023A0, "Member 'UWBP_AdamButton_C::FocusedStyleL' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, bIsToggled) == 0x002618, "Member 'UWBP_AdamButton_C::bIsToggled' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, Text) == 0x002620, "Member 'UWBP_AdamButton_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, LockedStyleL) == 0x002638, "Member 'UWBP_AdamButton_C::LockedStyleL' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, UnfocusedStyleLT) == 0x0028B0, "Member 'UWBP_AdamButton_C::UnfocusedStyleLT' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, BtnTexture) == 0x002B28, "Member 'UWBP_AdamButton_C::BtnTexture' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnPressedWithSelf) == 0x002B30, "Member 'UWBP_AdamButton_C::OnPressedWithSelf' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, GenericPayload) == 0x002B40, "Member 'UWBP_AdamButton_C::GenericPayload' has a wrong offset!");
static_assert(offsetof(UWBP_AdamButton_C, OnHoveredWithSelf) == 0x002B48, "Member 'UWBP_AdamButton_C::OnHoveredWithSelf' has a wrong offset!");

}

