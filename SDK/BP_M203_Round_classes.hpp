#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_M203_Round

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_M203_Round.BP_M203_Round_C
// 0x0020 (0x0300 - 0x02E0)
class ABP_M203_Round_C final : public AM203_Round
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      EasyPunch;                                         // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MissileSound;                                      // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Missile_Body;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_M203_Round(int32 EntryPoint);
	void Launch(const struct FTransform& StartTransform, bool bInFiredByPlayer, class AActor* Launcher);
	void MakeDormantBP();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	bool OnHit(EImpactType ImpactType, const struct FHitResult& HitResult, float Dmg);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_M203_Round_C">();
	}
	static class ABP_M203_Round_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_M203_Round_C>();
	}
};
static_assert(alignof(ABP_M203_Round_C) == 0x000008, "Wrong alignment on ABP_M203_Round_C");
static_assert(sizeof(ABP_M203_Round_C) == 0x000300, "Wrong size on ABP_M203_Round_C");
static_assert(offsetof(ABP_M203_Round_C, UberGraphFrame) == 0x0002E0, "Member 'ABP_M203_Round_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_M203_Round_C, EasyPunch) == 0x0002E8, "Member 'ABP_M203_Round_C::EasyPunch' has a wrong offset!");
static_assert(offsetof(ABP_M203_Round_C, MissileSound) == 0x0002F0, "Member 'ABP_M203_Round_C::MissileSound' has a wrong offset!");
static_assert(offsetof(ABP_M203_Round_C, S_Missile_Body) == 0x0002F8, "Member 'ABP_M203_Round_C::S_Missile_Body' has a wrong offset!");

}

