#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmCannon

#include "Basic.hpp"

#include "BP_ArmCannon_classes.hpp"
#include "BP_ArmCannon_parameters.hpp"


namespace SDK
{

// Function BP_ArmCannon.BP_ArmCannon_C.ExecuteUbergraph_BP_ArmCannon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ArmCannon_C::ExecuteUbergraph_BP_ArmCannon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "ExecuteUbergraph_BP_ArmCannon");

	Params::BP_ArmCannon_C_ExecuteUbergraph_BP_ArmCannon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.LoadSkin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InJacket                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ArmCannon_C::LoadSkin(class FName InJacket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "LoadSkin");

	Params::BP_ArmCannon_C_LoadSkin Parms{};

	Parms.InJacket = InJacket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.StartWPAim
// (Event, Protected, BlueprintEvent)

void ABP_ArmCannon_C::StartWPAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "StartWPAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.StopWPAim
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABP_ArmCannon_C::StopWPAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "StopWPAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.DoPunchCharge
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FVector                          WorldDir                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ArmCannon_C::DoPunchCharge(const struct FVector& WorldDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "DoPunchCharge");

	Params::BP_ArmCannon_C_DoPunchCharge Parms{};

	Parms.WorldDir = std::move(WorldDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.NotifyCinematicCharge
// (Event, Public, BlueprintEvent)

void ABP_ArmCannon_C::NotifyCinematicCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "NotifyCinematicCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.OnWidePulseHit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           OnActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitVelocity                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Chargetime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MagmaUV                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ArmCannon_C::OnWidePulseHit(const struct FTransform& Transform, class AActor* OnActor, const struct FVector& HitVelocity, const struct FHitResult& HitResult, float Chargetime, float MagmaUV, class UActorComponent* HitComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "OnWidePulseHit");

	Params::BP_ArmCannon_C_OnWidePulseHit Parms{};

	Parms.Transform = std::move(Transform);
	Parms.OnActor = OnActor;
	Parms.HitVelocity = std::move(HitVelocity);
	Parms.HitResult = std::move(HitResult);
	Parms.Chargetime = Chargetime;
	Parms.MagmaUV = MagmaUV;
	Parms.HitComp = HitComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.StopPullObject
// (Event, Protected, BlueprintEvent)

void ABP_ArmCannon_C::StopPullObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "StopPullObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_ArmCannon_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.ShowOvercharge
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInstant                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ArmCannon_C::ShowOvercharge(bool bShow, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "ShowOvercharge");

	Params::BP_ArmCannon_C_ShowOvercharge Parms{};

	Parms.bShow = bShow;
	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.StartPullObject
// (Event, Protected, BlueprintEvent)

void ABP_ArmCannon_C::StartPullObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "StartPullObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.DoCinematicOvercharge
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTransform>               ChargePoints                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bForWorkshopSwap                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ArmCannon_C::DoCinematicOvercharge(const TArray<struct FTransform>& ChargePoints, bool bForWorkshopSwap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "DoCinematicOvercharge");

	Params::BP_ArmCannon_C_DoCinematicOvercharge Parms{};

	Parms.ChargePoints = std::move(ChargePoints);
	Parms.bForWorkshopSwap = bForWorkshopSwap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_ArmCannon_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.OnLoaded_A46145184EEB131DEA6FB88A466AA288
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ArmCannon_C::OnLoaded_A46145184EEB131DEA6FB88A466AA288(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "OnLoaded_A46145184EEB131DEA6FB88A466AA288");

	Params::BP_ArmCannon_C_OnLoaded_A46145184EEB131DEA6FB88A466AA288 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ArmCannon.BP_ArmCannon_C.PunchTL__UpdateFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::PunchTL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "PunchTL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.PunchTL__FinishedFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::PunchTL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "PunchTL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.PUllTImeline__UpdateFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::PUllTImeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "PUllTImeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.PUllTImeline__FinishedFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::PUllTImeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "PUllTImeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.THing__UpdateFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::THing__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "THing__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.THing__FinishedFunc
// (BlueprintEvent)

void ABP_ArmCannon_C::THing__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "THing__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ArmCannon.BP_ArmCannon_C.QueryRadialForMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECannonMode                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ECannonMode ABP_ArmCannon_C::QueryRadialForMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "QueryRadialForMode");

	Params::BP_ArmCannon_C_QueryRadialForMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ArmCannon.BP_ArmCannon_C.FireWidePulseProjectile
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       StartingTransform                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   Chargetime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MagmaUV                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMega                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ALuosProjectile*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ALuosProjectile* ABP_ArmCannon_C::FireWidePulseProjectile(const struct FTransform& StartingTransform, float Chargetime, float MagmaUV, bool bMega)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ArmCannon_C", "FireWidePulseProjectile");

	Params::BP_ArmCannon_C_FireWidePulseProjectile Parms{};

	Parms.StartingTransform = std::move(StartingTransform);
	Parms.Chargetime = Chargetime;
	Parms.MagmaUV = MagmaUV;
	Parms.bMega = bMega;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

