#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBO_PalleteButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBO_PalleteButton.WBO_PalleteButton_C
// 0x00A8 (0x0308 - 0x0260)
class UWBO_PalleteButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_76;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_75;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectedImg;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture*                               MyTexture;                                         // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MyIndex;                                           // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Tint;                                              // 0x0294(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Index)>   OnSelected;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UVoxelBasicMaterialCollection*          MatCollection;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bValidTexture;                                     // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FSlateBrush& MyBrush, int32 MyIndex, class FText OutName)> OnHovered;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              UnHovered;                                         // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bPlaceholder;                                      // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DispName;                                          // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBO_PalleteButton(int32 EntryPoint);
	void ForceHover();
	void BndEvt__Button_76_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_76_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void BndEvt__Button_76_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void SetSelected(bool IsSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBO_PalleteButton_C">();
	}
	static class UWBO_PalleteButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBO_PalleteButton_C>();
	}
};
static_assert(alignof(UWBO_PalleteButton_C) == 0x000008, "Wrong alignment on UWBO_PalleteButton_C");
static_assert(sizeof(UWBO_PalleteButton_C) == 0x000308, "Wrong size on UWBO_PalleteButton_C");
static_assert(offsetof(UWBO_PalleteButton_C, UberGraphFrame) == 0x000260, "Member 'UWBO_PalleteButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, Button_76) == 0x000268, "Member 'UWBO_PalleteButton_C::Button_76' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, Image) == 0x000270, "Member 'UWBO_PalleteButton_C::Image' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, Image_75) == 0x000278, "Member 'UWBO_PalleteButton_C::Image_75' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, SelectedImg) == 0x000280, "Member 'UWBO_PalleteButton_C::SelectedImg' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, MyTexture) == 0x000288, "Member 'UWBO_PalleteButton_C::MyTexture' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, MyIndex) == 0x000290, "Member 'UWBO_PalleteButton_C::MyIndex' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, Tint) == 0x000294, "Member 'UWBO_PalleteButton_C::Tint' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, OnSelected) == 0x0002A8, "Member 'UWBO_PalleteButton_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, MatCollection) == 0x0002B8, "Member 'UWBO_PalleteButton_C::MatCollection' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, bValidTexture) == 0x0002C0, "Member 'UWBO_PalleteButton_C::bValidTexture' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, OnHovered) == 0x0002C8, "Member 'UWBO_PalleteButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, UnHovered) == 0x0002D8, "Member 'UWBO_PalleteButton_C::UnHovered' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, bPlaceholder) == 0x0002E8, "Member 'UWBO_PalleteButton_C::bPlaceholder' has a wrong offset!");
static_assert(offsetof(UWBO_PalleteButton_C, DispName) == 0x0002F0, "Member 'UWBO_PalleteButton_C::DispName' has a wrong offset!");

}

