#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GraphicsSettings

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.ExecuteUbergraph_WBP_GraphicsSettings
// 0x0198 (0x0198 - 0x0000)
struct WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EHudColor Color)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CONFIRM_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)(ConstParm)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AdamHUDColor_C*                    K2Node_DynamicCast_AsWBP_Adam_HUDColor;            // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudColor                                     K2Node_CustomEvent_Color;                          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)(ConstParm)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_1;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_2;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_ComponentBoundEvent_NewValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue_3;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCachedSteamdeckValue_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVisualSettings                        K2Node_Select_Default_1;                           // 0x0138(0x0058)()
	bool                                          CallFunc_IsPlatform_ReturnValue_4;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings");
static_assert(sizeof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings) == 0x000198, "Wrong size on WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, EntryPoint) == 0x000000, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_bool_Variable) == 0x000018, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_byte_Variable) == 0x000019, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_text_Variable) == 0x000050, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_int_Array_Index_Variable) == 0x000068, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_Event_IsDesignTime) == 0x000088, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_text_Variable_1) == 0x000090, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_ComponentBoundEvent_Value_1) == 0x0000A8, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_GetAllChildren_ReturnValue) == 0x0000B0, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_DynamicCast_AsWBP_Adam_HUDColor) == 0x0000D0, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_DynamicCast_AsWBP_Adam_HUDColor' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D9, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000DC, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_CustomEvent_Color) == 0x0000E0, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, Temp_text_Variable_2) == 0x0000E8, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_IsPlatform_ReturnValue) == 0x000100, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_IsPlatform_ReturnValue_1) == 0x000101, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_IsPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_IsPlatform_ReturnValue_2) == 0x000102, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_IsPlatform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_BooleanOR_ReturnValue) == 0x000103, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_MakeArray_Array) == 0x000108, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_ComponentBoundEvent_NewValue) == 0x000118, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_ComponentBoundEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_ComponentBoundEvent_Value) == 0x00011C, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_IsPlatform_ReturnValue_3) == 0x000120, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_IsPlatform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_Select_Default) == 0x000121, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_GetTYVCGameMode_NewParam) == 0x000128, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_GetCachedSteamdeckValue_ReturnValue) == 0x000130, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_GetCachedSteamdeckValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, K2Node_Select_Default_1) == 0x000138, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_IsPlatform_ReturnValue_4) == 0x000190, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_IsPlatform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings, CallFunc_BooleanOR_ReturnValue_1) == 0x000191, "Member 'WBP_GraphicsSettings_C_ExecuteUbergraph_WBP_GraphicsSettings::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_1_K2Node_ComponentBoundEvent_30_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_GammaSlider_K2Node_ComponentBoundEvent_26_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.CustomEvent_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_GraphicsSettings_C_CustomEvent_0 final
{
public:
	EHudColor                                     Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_CustomEvent_0) == 0x000001, "Wrong alignment on WBP_GraphicsSettings_C_CustomEvent_0");
static_assert(sizeof(WBP_GraphicsSettings_C_CustomEvent_0) == 0x000001, "Wrong size on WBP_GraphicsSettings_C_CustomEvent_0");
static_assert(offsetof(WBP_GraphicsSettings_C_CustomEvent_0, Color) == 0x000000, "Member 'WBP_GraphicsSettings_C_CustomEvent_0::Color' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_GraphicsSettings_C_BndEvt__WBP_GraphicsSettings_FOVSlider_K2Node_ComponentBoundEvent_13_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GraphicsSettings_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GraphicsSettings_C_PreConstruct");
static_assert(sizeof(WBP_GraphicsSettings_C_PreConstruct) == 0x000001, "Wrong size on WBP_GraphicsSettings_C_PreConstruct");
static_assert(offsetof(WBP_GraphicsSettings_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GraphicsSettings_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.UpdateDisplay
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_GraphicsSettings_C_UpdateDisplay final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlowMoVisualType                             Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDestructionDetail                            Temp_byte_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                Temp_byte_Variable_3;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AdamHUDColor_C*                    K2Node_DynamicCast_AsWBP_Adam_HUDColor;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFPSIndexFromVal_Index;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_UpdateDisplay) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_UpdateDisplay");
static_assert(sizeof(WBP_GraphicsSettings_C_UpdateDisplay) == 0x0000B0, "Wrong size on WBP_GraphicsSettings_C_UpdateDisplay");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable) == 0x000000, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_1) == 0x000004, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_2) == 0x000008, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_3) == 0x00000C, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_byte_Variable) == 0x000010, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_4) == 0x000014, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_5) == 0x000018, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_6) == 0x00001C, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_7) == 0x000020, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_8) == 0x000024, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_9) == 0x000028, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_10) == 0x00002C, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_byte_Variable_1) == 0x000030, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable) == 0x000031, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_1) == 0x000032, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_2) == 0x000033, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_byte_Variable_2) == 0x000034, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_3) == 0x000035, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_4) == 0x000036, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_5) == 0x000037, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_6) == 0x000038, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_bool_Variable_7) == 0x000039, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Variable_11) == 0x000040, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_GetGameUserSettings_ReturnValue) == 0x000048, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_byte_Variable_3) == 0x000050, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, K2Node_DynamicCast_AsWBP_Adam_HUDColor) == 0x000078, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::K2Node_DynamicCast_AsWBP_Adam_HUDColor' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_GetTYVCGameMode_NewParam) == 0x000090, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, CallFunc_GetFPSIndexFromVal_Index) == 0x00009C, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::CallFunc_GetFPSIndexFromVal_Index' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, K2Node_Select_Default_1) == 0x0000A4, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, K2Node_Select_Default_2) == 0x0000A8, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateDisplay, K2Node_Select_Default_3) == 0x0000A9, "Member 'WBP_GraphicsSettings_C_UpdateDisplay::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.OnShown
// 0x0038 (0x0038 - 0x0000)
struct WBP_GraphicsSettings_C_OnShown final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHDRAllowed_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_bShouldShowNVStuff_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetD3DApiLevel_ReturnValue;               // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_OnShown) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_OnShown");
static_assert(sizeof(WBP_GraphicsSettings_C_OnShown) == 0x000038, "Wrong size on WBP_GraphicsSettings_C_OnShown");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_bool_Variable) == 0x000000, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable) == 0x000001, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_bool_Variable_2) == 0x000006, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_4) == 0x000007, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_5) == 0x000008, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_bool_Variable_3) == 0x000009, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_6) == 0x00000A, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, Temp_byte_Variable_7) == 0x00000B, "Member 'WBP_GraphicsSettings_C_OnShown::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_GetTYVCGameMode_NewParam) == 0x000010, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_GetHDRAllowed_ReturnValue) == 0x000018, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_GetHDRAllowed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, K2Node_Select_Default) == 0x000019, "Member 'WBP_GraphicsSettings_C_OnShown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000020, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_bShouldShowNVStuff_ReturnValue) == 0x000028, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_bShouldShowNVStuff_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, K2Node_Select_Default_1) == 0x00002A, "Member 'WBP_GraphicsSettings_C_OnShown::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, K2Node_Select_Default_2) == 0x00002B, "Member 'WBP_GraphicsSettings_C_OnShown::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_GetD3DApiLevel_ReturnValue) == 0x00002C, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_GetD3DApiLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000034, "Member 'WBP_GraphicsSettings_C_OnShown::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OnShown, K2Node_Select_Default_3) == 0x000035, "Member 'WBP_GraphicsSettings_C_OnShown::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.GatherAndSave
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_GraphicsSettings_C_GatherAndSave final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlowMoVisualType                             Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlowMoVisualType                             Temp_byte_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                Temp_byte_Variable_8;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                Temp_byte_Variable_9;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                Temp_byte_Variable_10;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                Temp_byte_Variable_11;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                Temp_byte_Variable_12;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDestructionDetail                            Temp_byte_Variable_13;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDestructionDetail                            Temp_byte_Variable_14;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCDLSSMode                                 K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlowMoVisualType                             K2Node_Select_Default_1;                           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue_1;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue_2;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETYVCAMDFXMode                                K2Node_Select_Default_3;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDestructionDetail                            K2Node_Select_Default_4;                           // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVisualSettings                        K2Node_MakeStruct_VisualSettings;                  // 0x0068(0x0058)()
};
static_assert(alignof(WBP_GraphicsSettings_C_GatherAndSave) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_GatherAndSave");
static_assert(sizeof(WBP_GraphicsSettings_C_GatherAndSave) == 0x0000C0, "Wrong size on WBP_GraphicsSettings_C_GatherAndSave");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_int_Variable) == 0x000000, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable) == 0x000004, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_4) == 0x000008, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_5) == 0x000009, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_bool_Variable) == 0x00000A, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_6) == 0x00000B, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_7) == 0x00000C, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_int_Variable_1) == 0x000010, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_float_Variable) == 0x000014, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_float_Variable_1) == 0x000018, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_float_Variable_2) == 0x00001C, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_float_Variable_3) == 0x000020, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_float_Variable_4) == 0x000024, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_int_Variable_2) == 0x000028, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_8) == 0x00002C, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_9) == 0x00002D, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_10) == 0x00002E, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_11) == 0x00002F, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_12) == 0x000030, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_bool_Variable_1) == 0x000031, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_13) == 0x000032, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, Temp_byte_Variable_14) == 0x000033, "Member 'WBP_GraphicsSettings_C_GatherAndSave::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue) == 0x000034, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue_1) == 0x00003C, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetSelectedIndex_ReturnValue) == 0x000040, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, K2Node_Select_Default) == 0x000044, "Member 'WBP_GraphicsSettings_C_GatherAndSave::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, K2Node_Select_Default_1) == 0x000045, "Member 'WBP_GraphicsSettings_C_GatherAndSave::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue_2) == 0x000048, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetSelectedIndex_ReturnValue_1) == 0x00004C, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetSelectedIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, K2Node_Select_Default_2) == 0x000050, "Member 'WBP_GraphicsSettings_C_GatherAndSave::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetTYVCGameMode_NewParam) == 0x000058, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, CallFunc_GetSelectedIndex_ReturnValue_2) == 0x000060, "Member 'WBP_GraphicsSettings_C_GatherAndSave::CallFunc_GetSelectedIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, K2Node_Select_Default_3) == 0x000064, "Member 'WBP_GraphicsSettings_C_GatherAndSave::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, K2Node_Select_Default_4) == 0x000065, "Member 'WBP_GraphicsSettings_C_GatherAndSave::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GatherAndSave, K2Node_MakeStruct_VisualSettings) == 0x000068, "Member 'WBP_GraphicsSettings_C_GatherAndSave::K2Node_MakeStruct_VisualSettings' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.GetDefaultFocus
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_GetDefaultFocus final
{
public:
	class UWidget*                                NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_GetDefaultFocus) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_GetDefaultFocus");
static_assert(sizeof(WBP_GraphicsSettings_C_GetDefaultFocus) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_GetDefaultFocus");
static_assert(offsetof(WBP_GraphicsSettings_C_GetDefaultFocus, NewParam) == 0x000000, "Member 'WBP_GraphicsSettings_C_GetDefaultFocus::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetDefaultFocus, CallFunc_IsPlatform_ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_GetDefaultFocus::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.Enter Window Mode Or DlssorAMD
// 0x0078 (0x0078 - 0x0000)
struct WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStyledRadioButton_C*                   K2Node_DynamicCast_AsStyled_Radio_Button;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URadioButton*>                   CallFunc_GetRadioButtonWidgets_ReturnValue;        // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URadioButton*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URadioButton*                           CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStyledRadioButton_C*                   K2Node_DynamicCast_AsStyled_Radio_Button_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD");
static_assert(sizeof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD) == 0x000078, "Wrong size on WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_GetVisibility_ReturnValue) == 0x000020, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_GetVisibility_ReturnValue_1) == 0x000021, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000023, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, K2Node_DynamicCast_AsStyled_Radio_Button) == 0x000028, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::K2Node_DynamicCast_AsStyled_Radio_Button' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_GetRadioButtonWidgets_ReturnValue) == 0x000038, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_GetRadioButtonWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_GetSelected_ReturnValue) == 0x000059, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, K2Node_DynamicCast_AsStyled_Radio_Button_1) == 0x000068, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::K2Node_DynamicCast_AsStyled_Radio_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_DlssorAMD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.To Reso
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_To_Reso final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_To_Reso) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_To_Reso");
static_assert(sizeof(WBP_GraphicsSettings_C_To_Reso) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_To_Reso");
static_assert(offsetof(WBP_GraphicsSettings_C_To_Reso, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_To_Reso::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_Reso, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_To_Reso::ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.To Vsync
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_To_Vsync final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_To_Vsync) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_To_Vsync");
static_assert(sizeof(WBP_GraphicsSettings_C_To_Vsync) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_To_Vsync");
static_assert(offsetof(WBP_GraphicsSettings_C_To_Vsync, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_To_Vsync::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_Vsync, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_To_Vsync::ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.UpdateFOVDisplay
// 0x0048 (0x0048 - 0x0000)
struct WBP_GraphicsSettings_C_UpdateFOVDisplay final
{
public:
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0030(0x0018)()
};
static_assert(alignof(WBP_GraphicsSettings_C_UpdateFOVDisplay) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_UpdateFOVDisplay");
static_assert(sizeof(WBP_GraphicsSettings_C_UpdateFOVDisplay) == 0x000048, "Wrong size on WBP_GraphicsSettings_C_UpdateFOVDisplay");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateFOVDisplay, CallFunc_GetValue_ReturnValue) == 0x000000, "Member 'WBP_GraphicsSettings_C_UpdateFOVDisplay::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateFOVDisplay, CallFunc_FTrunc_ReturnValue) == 0x000004, "Member 'WBP_GraphicsSettings_C_UpdateFOVDisplay::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateFOVDisplay, CallFunc_GetValue_ReturnValue_1) == 0x000008, "Member 'WBP_GraphicsSettings_C_UpdateFOVDisplay::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateFOVDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_GraphicsSettings_C_UpdateFOVDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateFOVDisplay, CallFunc_FTrunc_ReturnValue_1) == 0x000028, "Member 'WBP_GraphicsSettings_C_UpdateFOVDisplay::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_UpdateFOVDisplay, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000030, "Member 'WBP_GraphicsSettings_C_UpdateFOVDisplay::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.GetFPSIndexFromVal
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_GetFPSIndexFromVal final
{
public:
	float                                         FPS;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_GetFPSIndexFromVal) == 0x000004, "Wrong alignment on WBP_GraphicsSettings_C_GetFPSIndexFromVal");
static_assert(sizeof(WBP_GraphicsSettings_C_GetFPSIndexFromVal) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_GetFPSIndexFromVal");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, FPS) == 0x000000, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::FPS' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, Index_0) == 0x000004, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000009, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x00000A, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x00000B, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_GetFPSIndexFromVal, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x00000C, "Member 'WBP_GraphicsSettings_C_GetFPSIndexFromVal::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.OutlineColorSelected
// 0x0048 (0x0048 - 0x0000)
struct WBP_GraphicsSettings_C_OutlineColorSelected final
{
public:
	EHudColor                                     NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AdamHUDColor_C*                    K2Node_DynamicCast_AsWBP_Adam_HUDColor;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_OutlineColorSelected) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_OutlineColorSelected");
static_assert(sizeof(WBP_GraphicsSettings_C_OutlineColorSelected) == 0x000048, "Wrong size on WBP_GraphicsSettings_C_OutlineColorSelected");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, NewParam) == 0x000000, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, K2Node_DynamicCast_AsWBP_Adam_HUDColor) == 0x000038, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::K2Node_DynamicCast_AsWBP_Adam_HUDColor' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_OutlineColorSelected, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'WBP_GraphicsSettings_C_OutlineColorSelected::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.To DLSSOr FOV
// 0x0038 (0x0038 - 0x0000)
struct WBP_GraphicsSettings_C_To_DLSSOr_FOV final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_To_DLSSOr_FOV) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_To_DLSSOr_FOV");
static_assert(sizeof(WBP_GraphicsSettings_C_To_DLSSOr_FOV) == 0x000038, "Wrong size on WBP_GraphicsSettings_C_To_DLSSOr_FOV");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, Temp_bool_Variable) == 0x000010, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, Temp_bool_Variable_1) == 0x000011, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, CallFunc_GetVisibility_ReturnValue) == 0x000012, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, CallFunc_GetVisibility_ReturnValue_1) == 0x000014, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000015, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, K2Node_Select_Default) == 0x000018, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_To_DLSSOr_FOV, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'WBP_GraphicsSettings_C_To_DLSSOr_FOV::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.Nav Through Reflections
// 0x0038 (0x0038 - 0x0000)
struct WBP_GraphicsSettings_C_Nav_Through_Reflections final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_bShouldShowNVStuff_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_Nav_Through_Reflections) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_Nav_Through_Reflections");
static_assert(sizeof(WBP_GraphicsSettings_C_Nav_Through_Reflections) == 0x000038, "Wrong size on WBP_GraphicsSettings_C_Nav_Through_Reflections");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, Temp_bool_Variable) == 0x000010, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, Temp_bool_Variable_1) == 0x000012, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, CallFunc_GetTYVCGameMode_NewParam) == 0x000018, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, CallFunc_bShouldShowNVStuff_ReturnValue) == 0x000020, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::CallFunc_bShouldShowNVStuff_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, K2Node_Select_Default) == 0x000028, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Nav_Through_Reflections, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_GraphicsSettings_C_Nav_Through_Reflections::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.HandleKeyDown
// 0x0020 (0x0020 - 0x0000)
struct WBP_GraphicsSettings_C_HandleKeyDown final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Handled;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleKeyDown_Handled;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_HandleKeyDown) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_HandleKeyDown");
static_assert(sizeof(WBP_GraphicsSettings_C_HandleKeyDown) == 0x000020, "Wrong size on WBP_GraphicsSettings_C_HandleKeyDown");
static_assert(offsetof(WBP_GraphicsSettings_C_HandleKeyDown, Key) == 0x000000, "Member 'WBP_GraphicsSettings_C_HandleKeyDown::Key' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HandleKeyDown, Handled) == 0x000018, "Member 'WBP_GraphicsSettings_C_HandleKeyDown::Handled' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HandleKeyDown, CallFunc_HasFocusedDescendants_ReturnValue) == 0x000019, "Member 'WBP_GraphicsSettings_C_HandleKeyDown::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HandleKeyDown, CallFunc_HasAnyUserFocus_ReturnValue) == 0x00001A, "Member 'WBP_GraphicsSettings_C_HandleKeyDown::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HandleKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'WBP_GraphicsSettings_C_HandleKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HandleKeyDown, CallFunc_HandleKeyDown_Handled) == 0x00001C, "Member 'WBP_GraphicsSettings_C_HandleKeyDown::CallFunc_HandleKeyDown_Handled' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.Left Gamma
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_Left_Gamma final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_Left_Gamma) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_Left_Gamma");
static_assert(sizeof(WBP_GraphicsSettings_C_Left_Gamma) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_Left_Gamma");
static_assert(offsetof(WBP_GraphicsSettings_C_Left_Gamma, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_Left_Gamma::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Left_Gamma, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_Left_Gamma::ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.Right Gamma
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_Right_Gamma final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GraphicsSettings_C_Right_Gamma) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_Right_Gamma");
static_assert(sizeof(WBP_GraphicsSettings_C_Right_Gamma) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_Right_Gamma");
static_assert(offsetof(WBP_GraphicsSettings_C_Right_Gamma, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_Right_Gamma::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Right_Gamma, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_Right_Gamma::ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.fovoramd
// 0x0018 (0x0018 - 0x0000)
struct WBP_GraphicsSettings_C_fovoramd final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_fovoramd) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_fovoramd");
static_assert(sizeof(WBP_GraphicsSettings_C_fovoramd) == 0x000018, "Wrong size on WBP_GraphicsSettings_C_fovoramd");
static_assert(offsetof(WBP_GraphicsSettings_C_fovoramd, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_fovoramd::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_fovoramd, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_fovoramd::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_fovoramd, CallFunc_IsVisible_ReturnValue) == 0x000010, "Member 'WBP_GraphicsSettings_C_fovoramd::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.Enter Window Mode Or Dls
// 0x0078 (0x0078 - 0x0000)
struct WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URadioButton*>                   CallFunc_GetRadioButtonWidgets_ReturnValue;        // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStyledRadioButton_C*                   K2Node_DynamicCast_AsStyled_Radio_Button;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URadioButton*                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URadioButton*                           CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStyledRadioButton_C*                   K2Node_DynamicCast_AsStyled_Radio_Button_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls");
static_assert(sizeof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls) == 0x000078, "Wrong size on WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, Navigation_0) == 0x000000, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, ReturnValue) == 0x000008, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_GetVisibility_ReturnValue) == 0x000020, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_GetRadioButtonWidgets_ReturnValue) == 0x000028, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_GetRadioButtonWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, K2Node_DynamicCast_AsStyled_Radio_Button) == 0x000038, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::K2Node_DynamicCast_AsStyled_Radio_Button' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_GetSelected_ReturnValue) == 0x000050, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, K2Node_DynamicCast_AsStyled_Radio_Button_1) == 0x000060, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::K2Node_DynamicCast_AsStyled_Radio_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WBP_GraphicsSettings_C_Enter_Window_Mode_Or_Dls::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.HasOwnerFocusForUser
// 0x0020 (0x0020 - 0x0000)
struct WBP_GraphicsSettings_C_HasOwnerFocusForUser final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocusedDescendants_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_HasOwnerFocusForUser) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_HasOwnerFocusForUser");
static_assert(sizeof(WBP_GraphicsSettings_C_HasOwnerFocusForUser) == 0x000020, "Wrong size on WBP_GraphicsSettings_C_HasOwnerFocusForUser");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, Widget) == 0x000000, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::Widget' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, UserIndex) == 0x000008, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::UserIndex' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, Value) == 0x00000C, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::Value' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, CallFunc_HasUserFocusedDescendants_ReturnValue) == 0x000018, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::CallFunc_HasUserFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, CallFunc_HasUserFocus_ReturnValue) == 0x000019, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocusForUser, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001B, "Member 'WBP_GraphicsSettings_C_HasOwnerFocusForUser::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_GraphicsSettings.WBP_GraphicsSettings_C.HasOwnerFocus
// 0x0010 (0x0010 - 0x0000)
struct WBP_GraphicsSettings_C_HasOwnerFocus final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GraphicsSettings_C_HasOwnerFocus) == 0x000008, "Wrong alignment on WBP_GraphicsSettings_C_HasOwnerFocus");
static_assert(sizeof(WBP_GraphicsSettings_C_HasOwnerFocus) == 0x000010, "Wrong size on WBP_GraphicsSettings_C_HasOwnerFocus");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocus, Widget) == 0x000000, "Member 'WBP_GraphicsSettings_C_HasOwnerFocus::Widget' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocus, Value) == 0x000008, "Member 'WBP_GraphicsSettings_C_HasOwnerFocus::Value' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocus, CallFunc_HasFocusedDescendants_ReturnValue) == 0x000009, "Member 'WBP_GraphicsSettings_C_HasOwnerFocus::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocus, CallFunc_HasAnyUserFocus_ReturnValue) == 0x00000A, "Member 'WBP_GraphicsSettings_C_HasOwnerFocus::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocus, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'WBP_GraphicsSettings_C_HasOwnerFocus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GraphicsSettings_C_HasOwnerFocus, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000C, "Member 'WBP_GraphicsSettings_C_HasOwnerFocus::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

