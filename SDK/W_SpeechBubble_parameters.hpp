#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SpeechBubble

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_SpeechBubble.W_SpeechBubble_C.ExecuteUbergraph_W_SpeechBubble
// 0x0078 (0x0078 - 0x0000)
struct W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble) == 0x000008, "Wrong alignment on W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble");
static_assert(sizeof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble) == 0x000078, "Wrong size on W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, EntryPoint) == 0x000000, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, K2Node_Event_MyGeometry) == 0x000030, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, K2Node_Event_InDeltaTime) == 0x000068, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, K2Node_Event_IsDesignTime) == 0x00006C, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x00006D, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, CallFunc_IsValid_ReturnValue) == 0x00006E, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'W_SpeechBubble_C_ExecuteUbergraph_W_SpeechBubble::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_SpeechBubble.W_SpeechBubble_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SpeechBubble_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SpeechBubble_C_PreConstruct) == 0x000001, "Wrong alignment on W_SpeechBubble_C_PreConstruct");
static_assert(sizeof(W_SpeechBubble_C_PreConstruct) == 0x000001, "Wrong size on W_SpeechBubble_C_PreConstruct");
static_assert(offsetof(W_SpeechBubble_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SpeechBubble_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SpeechBubble.W_SpeechBubble_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_SpeechBubble_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpeechBubble_C_Tick) == 0x000004, "Wrong alignment on W_SpeechBubble_C_Tick");
static_assert(sizeof(W_SpeechBubble_C_Tick) == 0x00003C, "Wrong size on W_SpeechBubble_C_Tick");
static_assert(offsetof(W_SpeechBubble_C_Tick, MyGeometry) == 0x000000, "Member 'W_SpeechBubble_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_Tick, InDeltaTime) == 0x000038, "Member 'W_SpeechBubble_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_SpeechBubble.W_SpeechBubble_C.SetSize
// 0x00B0 (0x00B0 - 0x0000)
struct W_SpeechBubble_C_SetSize final
{
public:
	struct FVector2D                              NewSize;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TRANSLATION_PERCENT;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0058(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(W_SpeechBubble_C_SetSize) == 0x000008, "Wrong alignment on W_SpeechBubble_C_SetSize");
static_assert(sizeof(W_SpeechBubble_C_SetSize) == 0x0000B0, "Wrong size on W_SpeechBubble_C_SetSize");
static_assert(offsetof(W_SpeechBubble_C_SetSize, NewSize) == 0x000000, "Member 'W_SpeechBubble_C_SetSize::NewSize' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, TRANSLATION_PERCENT) == 0x000008, "Member 'W_SpeechBubble_C_SetSize::TRANSLATION_PERCENT' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'W_SpeechBubble_C_SetSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_SpeechBubble_C_SetSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_GetDesiredSize_ReturnValue) == 0x000014, "Member 'W_SpeechBubble_C_SetSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_BreakVector2D_X_1) == 0x00001C, "Member 'W_SpeechBubble_C_SetSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_BreakVector2D_Y_1) == 0x000020, "Member 'W_SpeechBubble_C_SetSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'W_SpeechBubble_C_SetSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'W_SpeechBubble_C_SetSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'W_SpeechBubble_C_SetSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000038, "Member 'W_SpeechBubble_C_SetSize::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_GetDistanceTo_ReturnValue) == 0x000040, "Member 'W_SpeechBubble_C_SetSize::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000044, "Member 'W_SpeechBubble_C_SetSize::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'W_SpeechBubble_C_SetSize::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_Multiply_IntInt_ReturnValue) == 0x00004C, "Member 'W_SpeechBubble_C_SetSize::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'W_SpeechBubble_C_SetSize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, CallFunc_Max_ReturnValue) == 0x000054, "Member 'W_SpeechBubble_C_SetSize::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpeechBubble_C_SetSize, K2Node_MakeStruct_SlateFontInfo) == 0x000058, "Member 'W_SpeechBubble_C_SetSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function W_SpeechBubble.W_SpeechBubble_C.GetSize
// 0x0008 (0x0008 - 0x0000)
struct W_SpeechBubble_C_GetSize final
{
public:
	struct FVector2D                              SizeOverride_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpeechBubble_C_GetSize) == 0x000004, "Wrong alignment on W_SpeechBubble_C_GetSize");
static_assert(sizeof(W_SpeechBubble_C_GetSize) == 0x000008, "Wrong size on W_SpeechBubble_C_GetSize");
static_assert(offsetof(W_SpeechBubble_C_GetSize, SizeOverride_0) == 0x000000, "Member 'W_SpeechBubble_C_GetSize::SizeOverride_0' has a wrong offset!");

}

