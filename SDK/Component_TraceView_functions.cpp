#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Component_TraceView

#include "Basic.hpp"

#include "Component_TraceView_classes.hpp"
#include "Component_TraceView_parameters.hpp"


namespace SDK
{

// Function Component_TraceView.Component_TraceView_C.SphereView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   ActorsList                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ScanRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ScanPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                ActorsTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<EObjectTypeQuery>                TraceTypes                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   TraceRadius                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TickInterval                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDebug                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UComponent_TraceView_C::SphereView(const TArray<class UClass*>& ActorsList, float ScanRadius, const struct FVector& ScanPoint, const TArray<EObjectTypeQuery>& ActorsTypes, const TArray<EObjectTypeQuery>& TraceTypes, float TraceRadius, float TickInterval, bool IsDebug, struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Component_TraceView_C", "SphereView");

	Params::Component_TraceView_C_SphereView Parms{};

	Parms.ActorsList = std::move(ActorsList);
	Parms.ScanRadius = ScanRadius;
	Parms.ScanPoint = std::move(ScanPoint);
	Parms.ActorsTypes = std::move(ActorsTypes);
	Parms.TraceTypes = std::move(TraceTypes);
	Parms.TraceRadius = TraceRadius;
	Parms.TickInterval = TickInterval;
	Parms.IsDebug = IsDebug;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);
}


// Function Component_TraceView.Component_TraceView_C.TraceView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   ActorsList                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ScanRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ScanPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// TArray<EObjectTypeQuery>                ActorsTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<EObjectTypeQuery>                TraceTypes                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Trace__R_H_V_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TickInterval                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDebug                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UComponent_TraceView_C::TraceView(const TArray<class UClass*>& ActorsList, float ScanRadius, const struct FTransform& ScanPoint, const TArray<EObjectTypeQuery>& ActorsTypes, const TArray<EObjectTypeQuery>& TraceTypes, const struct FVector& Trace__R_H_V_, float TickInterval, bool IsDebug, struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Component_TraceView_C", "TraceView");

	Params::Component_TraceView_C_TraceView Parms{};

	Parms.ActorsList = std::move(ActorsList);
	Parms.ScanRadius = ScanRadius;
	Parms.ScanPoint = std::move(ScanPoint);
	Parms.ActorsTypes = std::move(ActorsTypes);
	Parms.TraceTypes = std::move(TraceTypes);
	Parms.Trace__R_H_V_ = std::move(Trace__R_H_V_);
	Parms.TickInterval = TickInterval;
	Parms.IsDebug = IsDebug;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);
}


// Function Component_TraceView.Component_TraceView_C.CheckView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScanDist                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScanX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScanY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TraceRadius                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CHECKPOINT                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UComponent_TraceView_C::CheckView(float ScanDist, float ScanX, float ScanY, float TraceRadius, const struct FVector& CHECKPOINT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Component_TraceView_C", "CheckView");

	Params::Component_TraceView_C_CheckView Parms{};

	Parms.ScanDist = ScanDist;
	Parms.ScanX = ScanX;
	Parms.ScanY = ScanY;
	Parms.TraceRadius = TraceRadius;
	Parms.CHECKPOINT = std::move(CHECKPOINT);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

