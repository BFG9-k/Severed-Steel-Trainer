#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBO_VModSelect

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function WBO_VModSelect.WBO_VModSelect_C.ExecuteUbergraph_WBO_VModSelect
// 0x0098 (0x0098 - 0x0000)
struct WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelEditMod                                 K2Node_CustomEvent_NewParam;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EVoxelEditMod OutNav)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_VMod_C*                            K2Node_DynamicCast_AsWBP_VMod;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelEditMod                                 K2Node_CustomEvent_OutNav;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_VMod_C*                            K2Node_DynamicCast_AsWBP_VMod_1;                   // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect) == 0x000008, "Wrong alignment on WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect");
static_assert(sizeof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect) == 0x000098, "Wrong size on WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, EntryPoint) == 0x000000, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_CustomEvent_NewParam) == 0x000004, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_DynamicCast_AsWBP_VMod) == 0x000050, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_DynamicCast_AsWBP_VMod' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_CustomEvent_OutNav) == 0x000060, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_CustomEvent_OutNav' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_GetAllChildren_ReturnValue_1) == 0x000068, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_DynamicCast_AsWBP_VMod_1) == 0x000088, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_DynamicCast_AsWBP_VMod_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_Less_IntInt_ReturnValue_1) == 0x000091, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000092, "Member 'WBO_VModSelect_C_ExecuteUbergraph_WBO_VModSelect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBO_VModSelect.WBO_VModSelect_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct WBO_VModSelect_C_SetSelected final
{
public:
	EVoxelEditMod                                 NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBO_VModSelect_C_SetSelected) == 0x000001, "Wrong alignment on WBO_VModSelect_C_SetSelected");
static_assert(sizeof(WBO_VModSelect_C_SetSelected) == 0x000001, "Wrong size on WBO_VModSelect_C_SetSelected");
static_assert(offsetof(WBO_VModSelect_C_SetSelected, NewParam) == 0x000000, "Member 'WBO_VModSelect_C_SetSelected::NewParam' has a wrong offset!");

// Function WBO_VModSelect.WBO_VModSelect_C.Pressed
// 0x0001 (0x0001 - 0x0000)
struct WBO_VModSelect_C_Pressed final
{
public:
	EVoxelEditMod                                 OutNav;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBO_VModSelect_C_Pressed) == 0x000001, "Wrong alignment on WBO_VModSelect_C_Pressed");
static_assert(sizeof(WBO_VModSelect_C_Pressed) == 0x000001, "Wrong size on WBO_VModSelect_C_Pressed");
static_assert(offsetof(WBO_VModSelect_C_Pressed, OutNav) == 0x000000, "Member 'WBO_VModSelect_C_Pressed::OutNav' has a wrong offset!");

}

