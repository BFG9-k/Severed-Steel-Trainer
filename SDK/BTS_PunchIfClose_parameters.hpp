#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_PunchIfClose

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTS_PunchIfClose.BTS_PunchIfClose_C.ExecuteUbergraph_BTS_PunchIfClose
// 0x0050 (0x0050 - 0x0000)
struct BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_ALS_C*                             K2Node_DynamicCast_AsNPC_ALS;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSquaredDistanceTo_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose) == 0x000008, "Wrong alignment on BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose");
static_assert(sizeof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose) == 0x000050, "Wrong size on BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, EntryPoint) == 0x000000, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, Temp_bool_Variable) == 0x000004, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, K2Node_Event_OwnerController) == 0x000008, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, K2Node_DynamicCast_AsNPC_ALS) == 0x000020, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::K2Node_DynamicCast_AsNPC_ALS' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000030, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, CallFunc_GetSquaredDistanceTo_ReturnValue) == 0x000038, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::CallFunc_GetSquaredDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, CallFunc_RandomBool_ReturnValue) == 0x00003D, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, K2Node_Select_Default) == 0x000040, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose, CallFunc_PlayAnimMontage_ReturnValue) == 0x000048, "Member 'BTS_PunchIfClose_C_ExecuteUbergraph_BTS_PunchIfClose::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");

// Function BTS_PunchIfClose.BTS_PunchIfClose_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_PunchIfClose_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_PunchIfClose_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_PunchIfClose_C_ReceiveTickAI");
static_assert(sizeof(BTS_PunchIfClose_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_PunchIfClose_C_ReceiveTickAI");
static_assert(offsetof(BTS_PunchIfClose_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_PunchIfClose_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_PunchIfClose_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_PunchIfClose_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_PunchIfClose_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

