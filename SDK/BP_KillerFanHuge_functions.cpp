#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillerFanHuge

#include "Basic.hpp"

#include "BP_KillerFanHuge_classes.hpp"
#include "BP_KillerFanHuge_parameters.hpp"


namespace SDK
{

// Function BP_KillerFanHuge.BP_KillerFanHuge_C.ExecuteUbergraph_BP_KillerFanHuge
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillerFanHuge_C::ExecuteUbergraph_BP_KillerFanHuge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillerFanHuge_C", "ExecuteUbergraph_BP_KillerFanHuge");

	Params::BP_KillerFanHuge_C_ExecuteUbergraph_BP_KillerFanHuge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillerFanHuge.BP_KillerFanHuge_C.ImpulseIfPossible
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillerFanHuge_C::ImpulseIfPossible(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillerFanHuge_C", "ImpulseIfPossible");

	Params::BP_KillerFanHuge_C_ImpulseIfPossible Parms{};

	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}

}

