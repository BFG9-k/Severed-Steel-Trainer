#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Marker

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Marker.WBP_Marker_C.ExecuteUbergraph_WBP_Marker
// 0x0068 (0x0068 - 0x0000)
struct WBP_Marker_C_ExecuteUbergraph_WBP_Marker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_ComponentBoundEvent_NewList;                // 0x0038(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker) == 0x000008, "Wrong alignment on WBP_Marker_C_ExecuteUbergraph_WBP_Marker");
static_assert(sizeof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker) == 0x000068, "Wrong size on WBP_Marker_C_ExecuteUbergraph_WBP_Marker");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, EntryPoint) == 0x000000, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, K2Node_ComponentBoundEvent_NewList) == 0x000038, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::K2Node_ComponentBoundEvent_NewList' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, K2Node_ComponentBoundEvent_SelectedItem) == 0x000050, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, K2Node_ComponentBoundEvent_SelectionType) == 0x000060, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_ExecuteUbergraph_WBP_Marker, K2Node_SwitchString_CmpSuccess) == 0x000061, "Member 'WBP_Marker_C_ExecuteUbergraph_WBP_Marker::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function WBP_Marker.WBP_Marker_C.BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'WBP_Marker_C_BndEvt__WBP_Marker_ComboBoxString_84_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function WBP_Marker.WBP_Marker_C.BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature final
{
public:
	TArray<class UClass*>                         NewList;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature");
static_assert(sizeof(WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature) == 0x000010, "Wrong size on WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature");
static_assert(offsetof(WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature, NewList) == 0x000000, "Member 'WBP_Marker_C_BndEvt__WBP_Marker_WBP_NPCToggle_K2Node_ComponentBoundEvent_1_NotifyUpdated__DelegateSignature::NewList' has a wrong offset!");

// Function WBP_Marker.WBP_Marker_C.BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_Marker_C_BndEvt__WBP_Marker_EditableText_81_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Marker.WBP_Marker_C.Setup
// 0x0028 (0x0028 - 0x0000)
struct WBP_Marker_C_Setup final
{
public:
	class ABP_CampaignMarker_C*                   InMarker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0010(0x0018)()
};
static_assert(alignof(WBP_Marker_C_Setup) == 0x000008, "Wrong alignment on WBP_Marker_C_Setup");
static_assert(sizeof(WBP_Marker_C_Setup) == 0x000028, "Wrong size on WBP_Marker_C_Setup");
static_assert(offsetof(WBP_Marker_C_Setup, InMarker) == 0x000000, "Member 'WBP_Marker_C_Setup::InMarker' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_Setup, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'WBP_Marker_C_Setup::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_Setup, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'WBP_Marker_C_Setup::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_Setup, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00000A, "Member 'WBP_Marker_C_Setup::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Marker_C_Setup, CallFunc_Conv_NameToText_ReturnValue) == 0x000010, "Member 'WBP_Marker_C_Setup::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

}

