#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Eden01Map

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Eden01Map.BP_Eden01Map_C
// 0x0200 (0x0420 - 0x0220)
class ABP_Eden01Map_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   cage;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESCAPISM;                                          // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   anxiety;                                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   gallery;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   glassmoon;                                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   crimson;                                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   middleadmin;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   prism;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   train0;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   cleave;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   lab2;                                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   lab;                                               // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Train3;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Train2;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Train1;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CamOffsetDir;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCap;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   thewall;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MANSION;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MUSEUM;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GARDEN;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PENTHOUSE;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ceooffice;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   nightclub;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Apartments;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MALL;                                              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   _Barracks;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TeleportationLab;                                  // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   upperadmin;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LOWERADMIN;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RECEPTION;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VENTS3;                                            // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PRISON;                                            // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   armory;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SERVERROOM;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   intel;                                             // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CHECKPOINT;                                        // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   train;                                             // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   subwayplatform;                                    // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   vents2;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VENTS1;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ServiceCorridor;                                   // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CYBERMEDICINE;                                     // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   cafeteria;                                         // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedProcessing;                                     // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   redhouse;                                          // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TurretTut;                                         // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   divetut;                                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AboveTrash;                                        // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Compactor;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   wastemanagement;                                   // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_12E7EC13496F0E4663018CAE515C645F; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_12E7EC13496F0E4663018CAE515C645F; // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SnapTarget;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CamOffsetDistance;                                 // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CamStartPoint;                                     // 0x03E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CamGoalPoint;                                      // 0x03F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            SolidMesh;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            WireMesh;                                          // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     BNaseCubeMap;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynMat;                                            // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Eden01Map(int32 EntryPoint);
	void ReceiveDestroyed();
	void SnapToThenLerpTo(class FName Start, class FName End);
	void LerpTo(class FName WorldID);
	void ReceiveBeginPlay();
	void SnapTo(class FName WorldID);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void SetBlinkTo(class UStaticMeshComponent* ToBlink);
	void GetLocationForID(class FName ForID, struct FVector* OutLoc);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Eden01Map_C">();
	}
	static class ABP_Eden01Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Eden01Map_C>();
	}
};
static_assert(alignof(ABP_Eden01Map_C) == 0x000008, "Wrong alignment on ABP_Eden01Map_C");
static_assert(sizeof(ABP_Eden01Map_C) == 0x000420, "Wrong size on ABP_Eden01Map_C");
static_assert(offsetof(ABP_Eden01Map_C, UberGraphFrame) == 0x000220, "Member 'ABP_Eden01Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, cage) == 0x000228, "Member 'ABP_Eden01Map_C::cage' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, ESCAPISM) == 0x000230, "Member 'ABP_Eden01Map_C::ESCAPISM' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, anxiety) == 0x000238, "Member 'ABP_Eden01Map_C::anxiety' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, gallery) == 0x000240, "Member 'ABP_Eden01Map_C::gallery' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, glassmoon) == 0x000248, "Member 'ABP_Eden01Map_C::glassmoon' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, crimson) == 0x000250, "Member 'ABP_Eden01Map_C::crimson' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, middleadmin) == 0x000258, "Member 'ABP_Eden01Map_C::middleadmin' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, prism) == 0x000260, "Member 'ABP_Eden01Map_C::prism' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, train0) == 0x000268, "Member 'ABP_Eden01Map_C::train0' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, cleave) == 0x000270, "Member 'ABP_Eden01Map_C::cleave' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, lab2) == 0x000278, "Member 'ABP_Eden01Map_C::lab2' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, lab) == 0x000280, "Member 'ABP_Eden01Map_C::lab' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Train3) == 0x000288, "Member 'ABP_Eden01Map_C::Train3' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Train2) == 0x000290, "Member 'ABP_Eden01Map_C::Train2' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Train1) == 0x000298, "Member 'ABP_Eden01Map_C::Train1' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, CamOffsetDir) == 0x0002A0, "Member 'ABP_Eden01Map_C::CamOffsetDir' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, SceneCap) == 0x0002A8, "Member 'ABP_Eden01Map_C::SceneCap' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, thewall) == 0x0002B0, "Member 'ABP_Eden01Map_C::thewall' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, MANSION) == 0x0002B8, "Member 'ABP_Eden01Map_C::MANSION' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, MUSEUM) == 0x0002C0, "Member 'ABP_Eden01Map_C::MUSEUM' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, GARDEN) == 0x0002C8, "Member 'ABP_Eden01Map_C::GARDEN' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, PENTHOUSE) == 0x0002D0, "Member 'ABP_Eden01Map_C::PENTHOUSE' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, ceooffice) == 0x0002D8, "Member 'ABP_Eden01Map_C::ceooffice' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, nightclub) == 0x0002E0, "Member 'ABP_Eden01Map_C::nightclub' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Apartments) == 0x0002E8, "Member 'ABP_Eden01Map_C::Apartments' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, MALL) == 0x0002F0, "Member 'ABP_Eden01Map_C::MALL' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, _Barracks) == 0x0002F8, "Member 'ABP_Eden01Map_C::_Barracks' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, TeleportationLab) == 0x000300, "Member 'ABP_Eden01Map_C::TeleportationLab' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, upperadmin) == 0x000308, "Member 'ABP_Eden01Map_C::upperadmin' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, LOWERADMIN) == 0x000310, "Member 'ABP_Eden01Map_C::LOWERADMIN' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, RECEPTION) == 0x000318, "Member 'ABP_Eden01Map_C::RECEPTION' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, VENTS3) == 0x000320, "Member 'ABP_Eden01Map_C::VENTS3' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, PRISON) == 0x000328, "Member 'ABP_Eden01Map_C::PRISON' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, armory) == 0x000330, "Member 'ABP_Eden01Map_C::armory' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, SERVERROOM) == 0x000338, "Member 'ABP_Eden01Map_C::SERVERROOM' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, intel) == 0x000340, "Member 'ABP_Eden01Map_C::intel' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, CHECKPOINT) == 0x000348, "Member 'ABP_Eden01Map_C::CHECKPOINT' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, train) == 0x000350, "Member 'ABP_Eden01Map_C::train' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, subwayplatform) == 0x000358, "Member 'ABP_Eden01Map_C::subwayplatform' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, vents2) == 0x000360, "Member 'ABP_Eden01Map_C::vents2' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, VENTS1) == 0x000368, "Member 'ABP_Eden01Map_C::VENTS1' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, ServiceCorridor) == 0x000370, "Member 'ABP_Eden01Map_C::ServiceCorridor' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, CYBERMEDICINE) == 0x000378, "Member 'ABP_Eden01Map_C::CYBERMEDICINE' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, cafeteria) == 0x000380, "Member 'ABP_Eden01Map_C::cafeteria' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, RedProcessing) == 0x000388, "Member 'ABP_Eden01Map_C::RedProcessing' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, redhouse) == 0x000390, "Member 'ABP_Eden01Map_C::redhouse' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, TurretTut) == 0x000398, "Member 'ABP_Eden01Map_C::TurretTut' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, divetut) == 0x0003A0, "Member 'ABP_Eden01Map_C::divetut' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, AboveTrash) == 0x0003A8, "Member 'ABP_Eden01Map_C::AboveTrash' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Compactor) == 0x0003B0, "Member 'ABP_Eden01Map_C::Compactor' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, wastemanagement) == 0x0003B8, "Member 'ABP_Eden01Map_C::wastemanagement' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, DefaultSceneRoot) == 0x0003C0, "Member 'ABP_Eden01Map_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Timeline_0_NewTrack_0_12E7EC13496F0E4663018CAE515C645F) == 0x0003C8, "Member 'ABP_Eden01Map_C::Timeline_0_NewTrack_0_12E7EC13496F0E4663018CAE515C645F' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Timeline_0__Direction_12E7EC13496F0E4663018CAE515C645F) == 0x0003CC, "Member 'ABP_Eden01Map_C::Timeline_0__Direction_12E7EC13496F0E4663018CAE515C645F' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, Timeline_0) == 0x0003D0, "Member 'ABP_Eden01Map_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, SnapTarget) == 0x0003D8, "Member 'ABP_Eden01Map_C::SnapTarget' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, CamOffsetDistance) == 0x0003E0, "Member 'ABP_Eden01Map_C::CamOffsetDistance' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, CamStartPoint) == 0x0003E4, "Member 'ABP_Eden01Map_C::CamStartPoint' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, CamGoalPoint) == 0x0003F0, "Member 'ABP_Eden01Map_C::CamGoalPoint' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, SolidMesh) == 0x000400, "Member 'ABP_Eden01Map_C::SolidMesh' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, WireMesh) == 0x000408, "Member 'ABP_Eden01Map_C::WireMesh' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, BNaseCubeMap) == 0x000410, "Member 'ABP_Eden01Map_C::BNaseCubeMap' has a wrong offset!");
static_assert(offsetof(ABP_Eden01Map_C, DynMat) == 0x000418, "Member 'ABP_Eden01Map_C::DynMat' has a wrong offset!");

}

