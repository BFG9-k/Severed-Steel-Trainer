#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DiscoLights

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DiscoLights.BP_DiscoLights_C.ExecuteUbergraph_BP_DiscoLights
// 0x0160 (0x0160 - 0x0000)
struct BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_AddComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable_1;                               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRandomColor_ReturnValue;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInEditor;                            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEditMode                                     K2Node_Event_NewMode;                              // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EActionType                                   K2Node_Event_ToDo;                                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSimulated;                           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USpotLightComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights) == 0x000010, "Wrong alignment on BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights");
static_assert(sizeof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights) == 0x000160, "Wrong size on BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, EntryPoint) == 0x000000, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, Temp_bool_Variable) == 0x000004, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, Temp_int_Variable) == 0x000008, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_RandomRotator_ReturnValue) == 0x00001C, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_AddComponentByClass_ReturnValue) == 0x000068, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x00007C, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, Temp_int_Variable_1) == 0x000104, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_GetRandomColor_ReturnValue) == 0x000108, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_GetRandomColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_Event_bInEditor) == 0x00011C, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_Event_bInEditor' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Not_PreBool_ReturnValue) == 0x00011D, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_Event_NewMode) == 0x00011E, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_Event_NewMode' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00011F, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_Event_ToDo) == 0x000120, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_Event_ToDo' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_Event_bSimulated) == 0x000121, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_Event_bSimulated' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_SwitchEnum_CmpSuccess) == 0x000122, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000128, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_IsPlatform_ReturnValue) == 0x000138, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, K2Node_Select_Default) == 0x000148, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Array_Length_ReturnValue) == 0x00014C, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights, CallFunc_Less_IntInt_ReturnValue) == 0x000151, "Member 'BP_DiscoLights_C_ExecuteUbergraph_BP_DiscoLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DiscoLights.BP_DiscoLights_C.DoActions
// 0x0002 (0x0002 - 0x0000)
struct BP_DiscoLights_C_DoActions final
{
public:
	EActionType                                   ToDo;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulated;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DiscoLights_C_DoActions) == 0x000001, "Wrong alignment on BP_DiscoLights_C_DoActions");
static_assert(sizeof(BP_DiscoLights_C_DoActions) == 0x000002, "Wrong size on BP_DiscoLights_C_DoActions");
static_assert(offsetof(BP_DiscoLights_C_DoActions, ToDo) == 0x000000, "Member 'BP_DiscoLights_C_DoActions::ToDo' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_DoActions, bSimulated) == 0x000001, "Member 'BP_DiscoLights_C_DoActions::bSimulated' has a wrong offset!");

// Function BP_DiscoLights.BP_DiscoLights_C.EditorModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_DiscoLights_C_EditorModeChanged final
{
public:
	EEditMode                                     NewMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DiscoLights_C_EditorModeChanged) == 0x000001, "Wrong alignment on BP_DiscoLights_C_EditorModeChanged");
static_assert(sizeof(BP_DiscoLights_C_EditorModeChanged) == 0x000001, "Wrong size on BP_DiscoLights_C_EditorModeChanged");
static_assert(offsetof(BP_DiscoLights_C_EditorModeChanged, NewMode) == 0x000000, "Member 'BP_DiscoLights_C_EditorModeChanged::NewMode' has a wrong offset!");

// Function BP_DiscoLights.BP_DiscoLights_C.SetInEditor
// 0x0001 (0x0001 - 0x0000)
struct BP_DiscoLights_C_SetInEditor final
{
public:
	bool                                          bInEditor;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DiscoLights_C_SetInEditor) == 0x000001, "Wrong alignment on BP_DiscoLights_C_SetInEditor");
static_assert(sizeof(BP_DiscoLights_C_SetInEditor) == 0x000001, "Wrong size on BP_DiscoLights_C_SetInEditor");
static_assert(offsetof(BP_DiscoLights_C_SetInEditor, bInEditor) == 0x000000, "Member 'BP_DiscoLights_C_SetInEditor::bInEditor' has a wrong offset!");

// Function BP_DiscoLights.BP_DiscoLights_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DiscoLights_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DiscoLights_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DiscoLights_C_ReceiveTick");
static_assert(sizeof(BP_DiscoLights_C_ReceiveTick) == 0x000004, "Wrong size on BP_DiscoLights_C_ReceiveTick");
static_assert(offsetof(BP_DiscoLights_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DiscoLights_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DiscoLights.BP_DiscoLights_C.TurnOff
// 0x0038 (0x0038 - 0x0000)
struct BP_DiscoLights_C_TurnOff final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USpotLightComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DiscoLights_C_TurnOff) == 0x000008, "Wrong alignment on BP_DiscoLights_C_TurnOff");
static_assert(sizeof(BP_DiscoLights_C_TurnOff) == 0x000038, "Wrong size on BP_DiscoLights_C_TurnOff");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_DiscoLights_C_TurnOff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DiscoLights_C_TurnOff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_DiscoLights_C_TurnOff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_DiscoLights_C_TurnOff::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_DiscoLights_C_TurnOff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_DiscoLights_C_TurnOff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_TurnOff, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_DiscoLights_C_TurnOff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DiscoLights.BP_DiscoLights_C.GetActions
// 0x0020 (0x0020 - 0x0000)
struct BP_DiscoLights_C_GetActions final
{
public:
	TArray<EActionType>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EActionType>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_DiscoLights_C_GetActions) == 0x000008, "Wrong alignment on BP_DiscoLights_C_GetActions");
static_assert(sizeof(BP_DiscoLights_C_GetActions) == 0x000020, "Wrong size on BP_DiscoLights_C_GetActions");
static_assert(offsetof(BP_DiscoLights_C_GetActions, ReturnValue) == 0x000000, "Member 'BP_DiscoLights_C_GetActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DiscoLights_C_GetActions, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_DiscoLights_C_GetActions::K2Node_MakeArray_Array' has a wrong offset!");

}

