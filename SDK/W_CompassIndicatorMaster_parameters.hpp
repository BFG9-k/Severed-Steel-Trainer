#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CompassIndicatorMaster

#include "Basic.hpp"

#include "E_CompassMode_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.ExecuteUbergraph_W_CompassIndicatorMaster
// 0x0300 (0x0300 - 0x0000)
struct W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CompassMode                                 Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CompassMode                                 Temp_byte_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00AC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasChild_ReturnValue;                     // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00F0(0x0088)()
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0188(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F0(0x0018)()
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0208(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0264(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster) == 0x000008, "Wrong alignment on W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster");
static_assert(sizeof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster) == 0x000300, "Wrong size on W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, EntryPoint) == 0x000000, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_byte_Variable) == 0x000004, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_byte_Variable_1) == 0x000005, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_float_Variable) == 0x000008, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_float_Variable_1) == 0x00000C, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_byte_Variable_2) == 0x000010, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_float_Variable_2) == 0x000014, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_float_Variable_3) == 0x000018, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_Select_Default) == 0x000028, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetCameraRotation_ReturnValue) == 0x00002C, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetCameraLocation_ReturnValue) == 0x000038, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakVector2D_X) == 0x000050, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakVector2D_Y) == 0x000054, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000060, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetPosition_ReturnValue) == 0x000068, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakVector2D_X_1) == 0x000070, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakVector2D_Y_1) == 0x000074, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_byte_Variable_3) == 0x000078, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakVector2D_X_2) == 0x00007C, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakVector2D_Y_2) == 0x000080, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000084, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000088, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Less_FloatFloat_ReturnValue) == 0x000094, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000095, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BooleanOR_ReturnValue) == 0x000096, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetPlayerController_ReturnValue_1) == 0x000098, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetCameraLocation_ReturnValue_1) == 0x0000A0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_Event_MyGeometry) == 0x0000AC, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_Event_InDeltaTime) == 0x0000E4, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_bool_Variable) == 0x0000E8, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, Temp_bool_Variable_1) == 0x0000E9, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_HasChild_ReturnValue) == 0x0000EA, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_HasChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_IsValid_ReturnValue) == 0x0000EB, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetChildIndex_ReturnValue) == 0x0000EC, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_MakeStruct_SlateBrush) == 0x0000F0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_RemoveChildAt_ReturnValue) == 0x000178, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_Select_Default_1) == 0x000179, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00017A, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x00017C, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_FFloor_ReturnValue) == 0x000180, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Conv_IntToText_ReturnValue) == 0x000188, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_MakeStruct_FormatArgumentData) == 0x0001A0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_MakeArray_Array) == 0x0001E0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Format_ReturnValue) == 0x0001F0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_MakeStruct_SlateFontInfo) == 0x000208, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_IsValid_ReturnValue_1) == 0x000260, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_MakeVector2D_ReturnValue) == 0x000264, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GetOwner_ReturnValue) == 0x000270, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000278, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000288, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Vector_Distance_ReturnValue) == 0x000290, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000294, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_FindLookAtRotation_ReturnValue) == 0x0002A0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_MakeVector2D_ReturnValue_1) == 0x0002AC, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0002B4, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakRotator_Roll) == 0x0002C0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakRotator_Pitch) == 0x0002C4, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_BreakRotator_Yaw) == 0x0002C8, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0002D0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002D8, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_NormalizeToRange_ReturnValue) == 0x0002DC, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Lerp_ReturnValue) == 0x0002E0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_Select_Default_2) == 0x0002E4, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0002E8, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_Lerp_ReturnValue_1) == 0x0002EC, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, K2Node_Select_Default_3) == 0x0002F0, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_FClamp_ReturnValue) == 0x0002F4, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster, CallFunc_MakeVector2D_ReturnValue_2) == 0x0002F8, "Member 'W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_CompassIndicatorMaster_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassIndicatorMaster_C_Tick) == 0x000004, "Wrong alignment on W_CompassIndicatorMaster_C_Tick");
static_assert(sizeof(W_CompassIndicatorMaster_C_Tick) == 0x00003C, "Wrong size on W_CompassIndicatorMaster_C_Tick");
static_assert(offsetof(W_CompassIndicatorMaster_C_Tick, MyGeometry) == 0x000000, "Member 'W_CompassIndicatorMaster_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CompassIndicatorMaster_C_Tick, InDeltaTime) == 0x000038, "Member 'W_CompassIndicatorMaster_C_Tick::InDeltaTime' has a wrong offset!");

}

