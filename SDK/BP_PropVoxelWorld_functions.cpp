#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropVoxelWorld

#include "Basic.hpp"

#include "BP_PropVoxelWorld_classes.hpp"
#include "BP_PropVoxelWorld_parameters.hpp"


namespace SDK
{

// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.ExecuteUbergraph_BP_PropVoxelWorld
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropVoxelWorld_C::ExecuteUbergraph_BP_PropVoxelWorld(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "ExecuteUbergraph_BP_PropVoxelWorld");

	Params::BP_PropVoxelWorld_C_ExecuteUbergraph_BP_PropVoxelWorld Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.NotifyPlayingReverse
// (Event, Public, BlueprintEvent)

void ABP_PropVoxelWorld_C::NotifyPlayingReverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "NotifyPlayingReverse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.SetExplosionInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   EditRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ShockwaveRadius_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropVoxelWorld_C::SetExplosionInfo(float EditRadius, float ShockwaveRadius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "SetExplosionInfo");

	Params::BP_PropVoxelWorld_C_SetExplosionInfo Parms{};

	Parms.EditRadius = EditRadius;
	Parms.ShockwaveRadius_0 = ShockwaveRadius_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.Explode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PropVoxelWorld_C::Explode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "Explode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.DoShake
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PropVoxelWorld_C::DoShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "DoShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.DoMove
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FVector                          RelativeMove                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeToMove                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropVoxelWorld_C::DoMove(const struct FVector& RelativeMove, float TimeToMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "DoMove");

	Params::BP_PropVoxelWorld_C_DoMove Parms{};

	Parms.RelativeMove = std::move(RelativeMove);
	Parms.TimeToMove = TimeToMove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.LevelReady
// (Event, Public, BlueprintEvent)

void ABP_PropVoxelWorld_C::LevelReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "LevelReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.CancelMoves
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABP_PropVoxelWorld_C::CancelMoves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "CancelMoves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.OnWorldLoadedWithPtr_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AVoxelWorld*                      VoxelWorldLoaded                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropVoxelWorld_C::OnWorldLoadedWithPtr_Event_0(class AVoxelWorld* VoxelWorldLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "OnWorldLoadedWithPtr_Event_0");

	Params::BP_PropVoxelWorld_C_OnWorldLoadedWithPtr_Event_0 Parms{};

	Parms.VoxelWorldLoaded = VoxelWorldLoaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.CacheShatteredChunks
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PropVoxelWorld_C::CacheShatteredChunks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "CacheShatteredChunks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_PropVoxelWorld_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.HomeOnTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropVoxelWorld_C::HomeOnTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "HomeOnTarget");

	Params::BP_PropVoxelWorld_C_HomeOnTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.MoveTL__UpdateFunc
// (BlueprintEvent)

void ABP_PropVoxelWorld_C::MoveTL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "MoveTL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.MoveTL__FinishedFunc
// (BlueprintEvent)

void ABP_PropVoxelWorld_C::MoveTL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "MoveTL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.ShakeTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_PropVoxelWorld_C::ShakeTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "ShakeTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.ShakeTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_PropVoxelWorld_C::ShakeTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "ShakeTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_PropVoxelWorld_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_PropVoxelWorld_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropVoxelWorld.BP_PropVoxelWorld_C.GetWorldLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLoc                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropVoxelWorld_C::GetWorldLocation(struct FVector* OutLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropVoxelWorld_C", "GetWorldLocation");

	Params::BP_PropVoxelWorld_C_GetWorldLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLoc != nullptr)
		*OutLoc = std::move(Parms.OutLoc);
}

}

