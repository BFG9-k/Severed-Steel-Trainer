#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillerFan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_KillerFan.BP_KillerFan_C.ExecuteUbergraph_BP_KillerFan
// 0x0680 (0x0680 - 0x0000)
struct BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0090(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSpin;                          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x014C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_ALS_C*                             K2Node_DynamicCast_AsNPC_ALS;                      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny_1;  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Gib_ReturnValue;                          // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny_2;  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0228(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny_3;  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInEditor;                            // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCenter_ReturnValue;                    // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_FTruncVector_ReturnValue;                 // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LocalToGlobal_ReturnValue;             // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x02B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0360(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ANPC_ALS_C*                             K2Node_DynamicCast_AsNPC_ALS_1;                    // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny_4;  // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Gib_ReturnValue_1;                        // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0410(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0498(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x04BC(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_BP_Manny_C*            K2Node_DynamicCast_AsPlayer_Character_BP_Manny_5;  // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0558(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E8[0x8];                                      // 0x05E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x05F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0620(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0638(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0648(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0654(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0664(0x0010)(ZeroConstructor, NoDestructor)
	EActionType                                   K2Node_Event_ToDo;                                 // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSimulated;                           // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0676(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan) == 0x000010, "Wrong alignment on BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan");
static_assert(sizeof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan) == 0x000680, "Wrong size on BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, EntryPoint) == 0x000000, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_BreakTransform_Location) == 0x000004, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_BreakTransform_Rotation) == 0x000010, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_BreakTransform_Scale) == 0x00001C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, Temp_bool_Variable) == 0x000060, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, Temp_float_Variable) == 0x000064, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, Temp_float_Variable_1) == 0x000068, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000070, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000078, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000080, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000088, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00008C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000090, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsPlayer_Character_BP_Manny) == 0x000118, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsPlayer_Character_BP_Manny' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CustomEvent_bSpin) == 0x000121, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CustomEvent_bSpin' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_Select_Default) == 0x000124, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CustomEvent_HitComponent) == 0x000128, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CustomEvent_OtherActor) == 0x000130, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CustomEvent_OtherComp) == 0x000138, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CustomEvent_NormalImpulse) == 0x000140, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CustomEvent_Hit) == 0x00014C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsNPC_ALS) == 0x0001D8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsNPC_ALS' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsPlayer_Character_BP_Manny_1) == 0x0001E8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsPlayer_Character_BP_Manny_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Gib_ReturnValue) == 0x0001F1, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Gib_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_Event_bIsSelected) == 0x0001F2, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Not_PreBool_ReturnValue) == 0x0001F3, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0001F8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000200, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000208, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000210, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsPlayer_Character_BP_Manny_2) == 0x000218, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsPlayer_Character_BP_Manny_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_3) == 0x000220, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000228, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Array_Get_Item) == 0x000238, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsPlayer_Character_BP_Manny_3) == 0x000240, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsPlayer_Character_BP_Manny_3' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_4) == 0x000248, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Array_Length_ReturnValue) == 0x00024C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_Event_bInEditor) == 0x000254, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_Event_bInEditor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_GetCenter_ReturnValue) == 0x000258, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_GetCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_FTruncVector_ReturnValue) == 0x000264, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_FTruncVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_LocalToGlobal_ReturnValue) == 0x000270, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_LocalToGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_GetActorRightVector_ReturnValue) == 0x00027C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000288, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_GetRightVector_ReturnValue) == 0x000294, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_GetForwardVector_ReturnValue) == 0x0002A0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0002AC, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0002B8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000340, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000348, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000350, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000358, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_bFromSweep) == 0x00035C, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_SweepResult) == 0x000360, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsNPC_ALS_1) == 0x0003E8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsNPC_ALS_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_5) == 0x0003F0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsPlayer_Character_BP_Manny_4) == 0x0003F8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsPlayer_Character_BP_Manny_4' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_6) == 0x000400, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Gib_ReturnValue_1) == 0x000401, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Gib_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000404, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000410, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_HitComponent) == 0x000498, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherActor) == 0x0004A0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_OtherComp) == 0x0004A8, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0004B0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_ComponentBoundEvent_Hit) == 0x0004BC, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_AsPlayer_Character_BP_Manny_5) == 0x000548, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_AsPlayer_Character_BP_Manny_5' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_DynamicCast_bSuccess_7) == 0x000550, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, Temp_int_Loop_Counter_Variable) == 0x000554, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000558, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Less_IntInt_ReturnValue) == 0x0005E0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Add_IntInt_ReturnValue) == 0x0005E4, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0005F0, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000620, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000630, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000638, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000648, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000654, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_CreateDelegate_OutputDelegate) == 0x000664, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_Event_ToDo) == 0x000674, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_Event_ToDo' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_Event_bSimulated) == 0x000675, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_Event_bSimulated' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan, K2Node_SwitchEnum_CmpSuccess) == 0x000676, "Member 'BP_KillerFan_C_ExecuteUbergraph_BP_KillerFan::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.DoActions
// 0x0002 (0x0002 - 0x0000)
struct BP_KillerFan_C_DoActions final
{
public:
	EActionType                                   ToDo;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulated;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KillerFan_C_DoActions) == 0x000001, "Wrong alignment on BP_KillerFan_C_DoActions");
static_assert(sizeof(BP_KillerFan_C_DoActions) == 0x000002, "Wrong size on BP_KillerFan_C_DoActions");
static_assert(offsetof(BP_KillerFan_C_DoActions, ToDo) == 0x000000, "Member 'BP_KillerFan_C_DoActions::ToDo' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_DoActions, bSimulated) == 0x000001, "Member 'BP_KillerFan_C_DoActions::bSimulated' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_KillCylinder_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.SetInEditor
// 0x0001 (0x0001 - 0x0000)
struct BP_KillerFan_C_SetInEditor final
{
public:
	bool                                          bInEditor;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KillerFan_C_SetInEditor) == 0x000001, "Wrong alignment on BP_KillerFan_C_SetInEditor");
static_assert(sizeof(BP_KillerFan_C_SetInEditor) == 0x000001, "Wrong size on BP_KillerFan_C_SetInEditor");
static_assert(offsetof(BP_KillerFan_C_SetInEditor, bInEditor) == 0x000000, "Member 'BP_KillerFan_C_SetInEditor::bInEditor' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_KillerFan_C_BndEvt__BP_KillerFan_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct BP_KillerFan_C_SetSelected final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KillerFan_C_SetSelected) == 0x000001, "Wrong alignment on BP_KillerFan_C_SetSelected");
static_assert(sizeof(BP_KillerFan_C_SetSelected) == 0x000001, "Wrong size on BP_KillerFan_C_SetSelected");
static_assert(offsetof(BP_KillerFan_C_SetSelected, bIsSelected) == 0x000000, "Member 'BP_KillerFan_C_SetSelected::bIsSelected' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.CustomEvent_0
// 0x00B0 (0x00B0 - 0x0000)
struct BP_KillerFan_C_CustomEvent_0 final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_KillerFan_C_CustomEvent_0) == 0x000008, "Wrong alignment on BP_KillerFan_C_CustomEvent_0");
static_assert(sizeof(BP_KillerFan_C_CustomEvent_0) == 0x0000B0, "Wrong size on BP_KillerFan_C_CustomEvent_0");
static_assert(offsetof(BP_KillerFan_C_CustomEvent_0, HitComponent) == 0x000000, "Member 'BP_KillerFan_C_CustomEvent_0::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_CustomEvent_0, OtherActor) == 0x000008, "Member 'BP_KillerFan_C_CustomEvent_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_CustomEvent_0, OtherComp) == 0x000010, "Member 'BP_KillerFan_C_CustomEvent_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_CustomEvent_0, NormalImpulse) == 0x000018, "Member 'BP_KillerFan_C_CustomEvent_0::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_CustomEvent_0, Hit) == 0x000024, "Member 'BP_KillerFan_C_CustomEvent_0::Hit' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.SetSpinning
// 0x0001 (0x0001 - 0x0000)
struct BP_KillerFan_C_SetSpinning final
{
public:
	bool                                          bSpin;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KillerFan_C_SetSpinning) == 0x000001, "Wrong alignment on BP_KillerFan_C_SetSpinning");
static_assert(sizeof(BP_KillerFan_C_SetSpinning) == 0x000001, "Wrong size on BP_KillerFan_C_SetSpinning");
static_assert(offsetof(BP_KillerFan_C_SetSpinning, bSpin) == 0x000000, "Member 'BP_KillerFan_C_SetSpinning::bSpin' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_KillerFan_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.SetHeight
// 0x0108 (0x0108 - 0x0000)
struct BP_KillerFan_C_SetHeight final
{
public:
	float                                         InHeight;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KillerFan_C_SetHeight) == 0x000008, "Wrong alignment on BP_KillerFan_C_SetHeight");
static_assert(sizeof(BP_KillerFan_C_SetHeight) == 0x000108, "Wrong size on BP_KillerFan_C_SetHeight");
static_assert(offsetof(BP_KillerFan_C_SetHeight, InHeight) == 0x000000, "Member 'BP_KillerFan_C_SetHeight::InHeight' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_KillerFan_C_SetHeight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_KillerFan_C_SetHeight::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_GetActorRightVector_ReturnValue) == 0x00000C, "Member 'BP_KillerFan_C_SetHeight::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_KillerFan_C_SetHeight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'BP_KillerFan_C_SetHeight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000030, "Member 'BP_KillerFan_C_SetHeight::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_KillerFan_C_SetHeight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_Conv_VectorToString_ReturnValue) == 0x000048, "Member 'BP_KillerFan_C_SetHeight::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000058, "Member 'BP_KillerFan_C_SetHeight::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_K2_GetComponentScale_ReturnValue) == 0x0000E0, "Member 'BP_KillerFan_C_SetHeight::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_BreakVector_X) == 0x0000EC, "Member 'BP_KillerFan_C_SetHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_BreakVector_Y) == 0x0000F0, "Member 'BP_KillerFan_C_SetHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_BreakVector_Z) == 0x0000F4, "Member 'BP_KillerFan_C_SetHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetHeight, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'BP_KillerFan_C_SetHeight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.SetRadius
// 0x0068 (0x0068 - 0x0000)
struct BP_KillerFan_C_SetRadius final
{
public:
	float                                         InRadius;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_1;       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_2;       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KillerFan_C_SetRadius) == 0x000004, "Wrong alignment on BP_KillerFan_C_SetRadius");
static_assert(sizeof(BP_KillerFan_C_SetRadius) == 0x000068, "Wrong size on BP_KillerFan_C_SetRadius");
static_assert(offsetof(BP_KillerFan_C_SetRadius, InRadius) == 0x000000, "Member 'BP_KillerFan_C_SetRadius::InRadius' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000004, "Member 'BP_KillerFan_C_SetRadius::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_K2_GetComponentScale_ReturnValue_1) == 0x00001C, "Member 'BP_KillerFan_C_SetRadius::CallFunc_K2_GetComponentScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_KillerFan_C_SetRadius::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_X_1) == 0x000034, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_KillerFan_C_SetRadius::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_K2_GetComponentScale_ReturnValue_2) == 0x000044, "Member 'BP_KillerFan_C_SetRadius::CallFunc_K2_GetComponentScale_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_X_2) == 0x000050, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_Y_2) == 0x000054, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_BreakVector_Z_2) == 0x000058, "Member 'BP_KillerFan_C_SetRadius::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_SetRadius, CallFunc_MakeVector_ReturnValue_1) == 0x00005C, "Member 'BP_KillerFan_C_SetRadius::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_KillerFan.BP_KillerFan_C.GetActions
// 0x0020 (0x0020 - 0x0000)
struct BP_KillerFan_C_GetActions final
{
public:
	TArray<EActionType>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EActionType>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_KillerFan_C_GetActions) == 0x000008, "Wrong alignment on BP_KillerFan_C_GetActions");
static_assert(sizeof(BP_KillerFan_C_GetActions) == 0x000020, "Wrong size on BP_KillerFan_C_GetActions");
static_assert(offsetof(BP_KillerFan_C_GetActions, ReturnValue) == 0x000000, "Member 'BP_KillerFan_C_GetActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KillerFan_C_GetActions, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_KillerFan_C_GetActions::K2Node_MakeArray_Array' has a wrong offset!");

}

