#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Eden01Map

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Eden01Map.BP_Eden01Map_C.ExecuteUbergraph_BP_Eden01Map
// 0x0170 (0x0170 - 0x0000)
struct BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WorldID_1;                      // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationForID_OutLoc;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WorldID;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationForID_OutLoc_1;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_Start;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_End;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map) == 0x000008, "Wrong alignment on BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map");
static_assert(sizeof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map) == 0x000170, "Wrong size on BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, EntryPoint) == 0x000000, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, K2Node_CustomEvent_WorldID_1) == 0x000004, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::K2Node_CustomEvent_WorldID_1' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, CallFunc_GetLocationForID_OutLoc) == 0x00000C, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::CallFunc_GetLocationForID_OutLoc' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, K2Node_CustomEvent_WorldID) == 0x000018, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::K2Node_CustomEvent_WorldID' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, CallFunc_GetLocationForID_OutLoc_1) == 0x000020, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::CallFunc_GetLocationForID_OutLoc_1' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, CallFunc_VLerp_ReturnValue) == 0x00002C, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000038, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, K2Node_CustomEvent_Start) == 0x0000C0, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, K2Node_CustomEvent_End) == 0x0000C8, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::K2Node_CustomEvent_End' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000D0, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000168, "Member 'BP_Eden01Map_C_ExecuteUbergraph_BP_Eden01Map::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Eden01Map.BP_Eden01Map_C.SnapToThenLerpTo
// 0x0010 (0x0010 - 0x0000)
struct BP_Eden01Map_C_SnapToThenLerpTo final
{
public:
	class FName                                   Start;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   End;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Eden01Map_C_SnapToThenLerpTo) == 0x000004, "Wrong alignment on BP_Eden01Map_C_SnapToThenLerpTo");
static_assert(sizeof(BP_Eden01Map_C_SnapToThenLerpTo) == 0x000010, "Wrong size on BP_Eden01Map_C_SnapToThenLerpTo");
static_assert(offsetof(BP_Eden01Map_C_SnapToThenLerpTo, Start) == 0x000000, "Member 'BP_Eden01Map_C_SnapToThenLerpTo::Start' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SnapToThenLerpTo, End) == 0x000008, "Member 'BP_Eden01Map_C_SnapToThenLerpTo::End' has a wrong offset!");

// Function BP_Eden01Map.BP_Eden01Map_C.LerpTo
// 0x0008 (0x0008 - 0x0000)
struct BP_Eden01Map_C_LerpTo final
{
public:
	class FName                                   WorldID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Eden01Map_C_LerpTo) == 0x000004, "Wrong alignment on BP_Eden01Map_C_LerpTo");
static_assert(sizeof(BP_Eden01Map_C_LerpTo) == 0x000008, "Wrong size on BP_Eden01Map_C_LerpTo");
static_assert(offsetof(BP_Eden01Map_C_LerpTo, WorldID) == 0x000000, "Member 'BP_Eden01Map_C_LerpTo::WorldID' has a wrong offset!");

// Function BP_Eden01Map.BP_Eden01Map_C.SnapTo
// 0x0008 (0x0008 - 0x0000)
struct BP_Eden01Map_C_SnapTo final
{
public:
	class FName                                   WorldID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Eden01Map_C_SnapTo) == 0x000004, "Wrong alignment on BP_Eden01Map_C_SnapTo");
static_assert(sizeof(BP_Eden01Map_C_SnapTo) == 0x000008, "Wrong size on BP_Eden01Map_C_SnapTo");
static_assert(offsetof(BP_Eden01Map_C_SnapTo, WorldID) == 0x000000, "Member 'BP_Eden01Map_C_SnapTo::WorldID' has a wrong offset!");

// Function BP_Eden01Map.BP_Eden01Map_C.SetBlinkTo
// 0x0058 (0x0058 - 0x0000)
struct BP_Eden01Map_C_SetBlinkTo final
{
public:
	class UStaticMeshComponent*                   ToBlink;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Eden01Map_C_SetBlinkTo) == 0x000008, "Wrong alignment on BP_Eden01Map_C_SetBlinkTo");
static_assert(sizeof(BP_Eden01Map_C_SetBlinkTo) == 0x000058, "Wrong size on BP_Eden01Map_C_SetBlinkTo");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, ToBlink) == 0x000000, "Member 'BP_Eden01Map_C_SetBlinkTo::ToBlink' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000014, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_Eden01Map_C_SetBlinkTo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_Eden01Map_C_SetBlinkTo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_SetStaticMesh_ReturnValue) == 0x000040, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000054, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_SetBlinkTo, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_Eden01Map_C_SetBlinkTo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Eden01Map.BP_Eden01Map_C.GetLocationForID
// 0x0060 (0x0060 - 0x0000)
struct BP_Eden01Map_C_GetLocationForID final
{
public:
	class FName                                   ForID;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLoc;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Eden01Map_C_GetLocationForID) == 0x000004, "Wrong alignment on BP_Eden01Map_C_GetLocationForID");
static_assert(sizeof(BP_Eden01Map_C_GetLocationForID) == 0x000060, "Wrong size on BP_Eden01Map_C_GetLocationForID");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, ForID) == 0x000000, "Member 'BP_Eden01Map_C_GetLocationForID::ForID' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, OutLoc) == 0x000008, "Member 'BP_Eden01Map_C_GetLocationForID::OutLoc' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, K2Node_SwitchName_CmpSuccess) == 0x000014, "Member 'BP_Eden01Map_C_GetLocationForID::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, CallFunc_Divide_VectorVector_ReturnValue) == 0x000018, "Member 'BP_Eden01Map_C_GetLocationForID::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'BP_Eden01Map_C_GetLocationForID::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'BP_Eden01Map_C_GetLocationForID::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00003C, "Member 'BP_Eden01Map_C_GetLocationForID::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000048, "Member 'BP_Eden01Map_C_GetLocationForID::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Eden01Map_C_GetLocationForID, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000054, "Member 'BP_Eden01Map_C_GetLocationForID::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

}

