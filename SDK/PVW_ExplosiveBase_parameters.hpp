#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PVW_ExplosiveBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.ExecuteUbergraph_PVW_ExplosiveBase
// 0x0178 (0x0178 - 0x0000)
struct PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActionType                                   K2Node_Event_ToDo;                                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSimulated;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACampaignManager*                       CallFunc_GetCampaignManager_OutCM;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AChapter*                               CallFunc_GetCurrentChapter_OutChapter;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_2;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActorFromID_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase) == 0x000008, "Wrong alignment on PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase");
static_assert(sizeof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase) == 0x000178, "Wrong size on PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, EntryPoint) == 0x000000, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, K2Node_Event_ToDo) == 0x000004, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::K2Node_Event_ToDo' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, K2Node_Event_bSimulated) == 0x000005, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::K2Node_Event_bSimulated' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_GetTYVCGameMode_NewParam) == 0x000008, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_GetCampaignManager_OutCM) == 0x000020, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_GetCampaignManager_OutCM' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_GetCurrentChapter_OutChapter) == 0x000028, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_GetCurrentChapter_OutChapter' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000034, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000050, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00005C, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_GetTYVCGameMode_NewParam_2) == 0x000068, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_GetTYVCGameMode_NewParam_2' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_NotEqual_NameName_ReturnValue) == 0x000070, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Array_Get_Item) == 0x000094, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_GetActorFromID_ReturnValue) == 0x0000A0, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_GetActorFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_IsValid_ReturnValue_1) == 0x0000AC, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000B0, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000BC, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CC, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000D0, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000158, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, Temp_int_Variable) == 0x00015C, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000164, "Member 'PVW_ExplosiveBase_C_ExecuteUbergraph_PVW_ExplosiveBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.DoActions
// 0x0002 (0x0002 - 0x0000)
struct PVW_ExplosiveBase_C_DoActions final
{
public:
	EActionType                                   ToDo;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulated;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PVW_ExplosiveBase_C_DoActions) == 0x000001, "Wrong alignment on PVW_ExplosiveBase_C_DoActions");
static_assert(sizeof(PVW_ExplosiveBase_C_DoActions) == 0x000002, "Wrong size on PVW_ExplosiveBase_C_DoActions");
static_assert(offsetof(PVW_ExplosiveBase_C_DoActions, ToDo) == 0x000000, "Member 'PVW_ExplosiveBase_C_DoActions::ToDo' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_DoActions, bSimulated) == 0x000001, "Member 'PVW_ExplosiveBase_C_DoActions::bSimulated' has a wrong offset!");

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.OnHit
// 0x00D0 (0x00D0 - 0x0000)
struct PVW_ExplosiveBase_C_OnHit final
{
public:
	EImpactType                                   ImpactType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Dmg;                                               // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnHit_ReturnValue;                        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnHit_ReturnValue_1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PVW_ExplosiveBase_C_OnHit) == 0x000008, "Wrong alignment on PVW_ExplosiveBase_C_OnHit");
static_assert(sizeof(PVW_ExplosiveBase_C_OnHit) == 0x0000D0, "Wrong size on PVW_ExplosiveBase_C_OnHit");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, ImpactType) == 0x000000, "Member 'PVW_ExplosiveBase_C_OnHit::ImpactType' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, HitResult) == 0x000004, "Member 'PVW_ExplosiveBase_C_OnHit::HitResult' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, Dmg) == 0x00008C, "Member 'PVW_ExplosiveBase_C_OnHit::Dmg' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, ReturnValue) == 0x000090, "Member 'PVW_ExplosiveBase_C_OnHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_OnHit_ReturnValue) == 0x000091, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_OnHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000094, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_OnHit_ReturnValue_1) == 0x000098, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_OnHit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000099, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00009A, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00009B, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_BooleanOR_ReturnValue) == 0x00009C, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00009D, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_BooleanOR_ReturnValue_1) == 0x00009E, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_GetTYVCGameMode_NewParam) == 0x0000A0, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A8, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000AC, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000B0, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B4, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_GetTYVCGameMode_NewParam_1) == 0x0000B8, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0000C0, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_OnHit, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'PVW_ExplosiveBase_C_OnHit::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.GetGoals
// 0x0020 (0x0020 - 0x0000)
struct PVW_ExplosiveBase_C_GetGoals final
{
public:
	TArray<EGoalType>                             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EGoalType>                             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(PVW_ExplosiveBase_C_GetGoals) == 0x000008, "Wrong alignment on PVW_ExplosiveBase_C_GetGoals");
static_assert(sizeof(PVW_ExplosiveBase_C_GetGoals) == 0x000020, "Wrong size on PVW_ExplosiveBase_C_GetGoals");
static_assert(offsetof(PVW_ExplosiveBase_C_GetGoals, ReturnValue) == 0x000000, "Member 'PVW_ExplosiveBase_C_GetGoals::ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_GetGoals, K2Node_MakeArray_Array) == 0x000010, "Member 'PVW_ExplosiveBase_C_GetGoals::K2Node_MakeArray_Array' has a wrong offset!");

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.Xplode
// 0x0058 (0x0058 - 0x0000)
struct PVW_ExplosiveBase_C_Xplode final
{
public:
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCenter_ReturnValue;                    // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LocalToGlobalFloat_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACampaignManager*                       CallFunc_GetCampaignManager_OutCM;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AImpactManager*                         CallFunc_GetImpactManager_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PVW_ExplosiveBase_C_Xplode) == 0x000008, "Wrong alignment on PVW_ExplosiveBase_C_Xplode");
static_assert(sizeof(PVW_ExplosiveBase_C_Xplode) == 0x000058, "Wrong size on PVW_ExplosiveBase_C_Xplode");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_GetTYVCGameMode_NewParam) == 0x000000, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_Vector_Up_ReturnValue) == 0x00000C, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000018, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_GetCenter_ReturnValue) == 0x000028, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_GetCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_K2_LocalToGlobalFloat_ReturnValue) == 0x000034, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_K2_LocalToGlobalFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000040, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_GetCampaignManager_OutCM) == 0x000048, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_GetCampaignManager_OutCM' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_Xplode, CallFunc_GetImpactManager_ReturnValue) == 0x000050, "Member 'PVW_ExplosiveBase_C_Xplode::CallFunc_GetImpactManager_ReturnValue' has a wrong offset!");

// Function PVW_ExplosiveBase.PVW_ExplosiveBase_C.GetActions
// 0x0020 (0x0020 - 0x0000)
struct PVW_ExplosiveBase_C_GetActions final
{
public:
	TArray<EActionType>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EActionType>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(PVW_ExplosiveBase_C_GetActions) == 0x000008, "Wrong alignment on PVW_ExplosiveBase_C_GetActions");
static_assert(sizeof(PVW_ExplosiveBase_C_GetActions) == 0x000020, "Wrong size on PVW_ExplosiveBase_C_GetActions");
static_assert(offsetof(PVW_ExplosiveBase_C_GetActions, ReturnValue) == 0x000000, "Member 'PVW_ExplosiveBase_C_GetActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(PVW_ExplosiveBase_C_GetActions, K2Node_MakeArray_Array) == 0x000010, "Member 'PVW_ExplosiveBase_C_GetActions::K2Node_MakeArray_Array' has a wrong offset!");

}

