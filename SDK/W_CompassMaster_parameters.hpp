#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CompassMaster

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "E_CompassMode_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_CompassMaster.W_CompassMaster_C.ExecuteUbergraph_W_CompassMaster
// 0x0540 (0x0540 - 0x0000)
struct W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CompassMode                                 Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CompassMode                                 Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CompassMode                                 Temp_byte_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0068(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00E8(0x0088)()
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0170(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetIndicatorComponent_C*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x01A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x01E4(0x0010)(NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0218(0x0088)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetIndicatorComponent_C*         K2Node_CustomEvent_TargetComponent;                // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x02B8(0x0010)(NoDestructor)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x02D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_RemoveChildAt_ReturnValue_1;              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            K2Node_DynamicCast_AsW_Compass_Indicator_Master;   // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            CallFunc_Create_ReturnValue_1;                     // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue_1;           // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CompassComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0338(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x03C0(0x0088)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0454(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0478(0x0058)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x04D8(0x0058)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster) == 0x000008, "Wrong alignment on W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster");
static_assert(sizeof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster) == 0x000540, "Wrong size on W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, EntryPoint) == 0x000000, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable) == 0x000004, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable_1) == 0x000010, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_float_Variable) == 0x000014, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_float_Variable_1) == 0x000018, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable_2) == 0x00001C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_float_Variable_2) == 0x000020, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_float_Variable_3) == 0x000024, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable_3) == 0x000028, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable_4) == 0x000038, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable_5) == 0x000039, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_bool_Variable) == 0x00004D, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x00004E, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_NormalizeToRange_ReturnValue) == 0x000054, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000058, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Lerp_ReturnValue) == 0x00005C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Event_IsDesignTime) == 0x000065, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Event_MyGeometry) == 0x000068, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Event_InDeltaTime) == 0x0000A0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetLocalSize_ReturnValue) == 0x0000A4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000B8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetPlayerController_ReturnValue) == 0x0000C0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetCameraRotation_ReturnValue) == 0x0000C8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_BreakRotator_Roll) == 0x0000D4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_BreakRotator_Pitch) == 0x0000D8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_BreakRotator_Yaw) == 0x0000DC, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_SlateBrush) == 0x0000E8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetAllActorsOfClass_OutActors) == 0x000170, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Get_Item) == 0x000180, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetComponentByClass_ReturnValue) == 0x000190, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue) == 0x000199, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_bool_Variable_1) == 0x00019A, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_RemoveChildAt_ReturnValue) == 0x00019B, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetAllChildren_ReturnValue) == 0x0001A0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue_1) == 0x0001B8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetObjectClass_ReturnValue) == 0x0001C0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0001C8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0001D0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001DC, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Max_ReturnValue) == 0x0001E0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_Anchors) == 0x0001E4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_MakeVector2D_ReturnValue) == 0x0001F4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001FC, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_bool_Has_Been_Initd_Variable) == 0x000204, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000208, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000210, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_SlateBrush_1) == 0x000218, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Select_Default) == 0x0002A0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_CustomEvent_TargetComponent) == 0x0002A8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_CustomEvent_TargetComponent' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_AddChildToCanvas_ReturnValue) == 0x0002B0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_Anchors_1) == 0x0002B8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetChildIndex_ReturnValue) == 0x0002C8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetAllChildren_ReturnValue_1) == 0x0002D0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_RemoveChildAt_ReturnValue_1) == 0x0002E0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_RemoveChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Get_Item_2) == 0x0002E8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Length_ReturnValue_2) == 0x0002F0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_DynamicCast_AsW_Compass_Indicator_Master) == 0x0002F8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_DynamicCast_AsW_Compass_Indicator_Master' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Less_IntInt_ReturnValue_1) == 0x000301, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_BooleanAND_ReturnValue) == 0x000302, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000303, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Create_ReturnValue_1) == 0x000308, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_bool_IsClosed_Variable) == 0x000310, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_AddChildToCanvas_ReturnValue_1) == 0x000318, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_AddChildToCanvas_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetPlayerController_ReturnValue_1) == 0x000320, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000328, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue_2) == 0x000330, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_SlateBrush_2) == 0x000338, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_SlateBrush_3) == 0x0003C0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Loop_Counter_Variable_2) == 0x000448, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00044C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000450, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_MakeVector2D_ReturnValue_2) == 0x000454, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000460, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000468, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_MakeVector2D_ReturnValue_3) == 0x000470, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_SlateFontInfo) == 0x000478, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_byte_Variable_6) == 0x0004D0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_MakeStruct_SlateFontInfo_1) == 0x0004D8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Select_Default_1) == 0x000530, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Select_Default_2) == 0x000534, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Select_Default_3) == 0x000538, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Select_Default_4) == 0x00053C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Select_Default_4' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.AddIndicator
// 0x0008 (0x0008 - 0x0000)
struct W_CompassMaster_C_AddIndicator final
{
public:
	class UBP_TargetIndicatorComponent_C*         TargetComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_AddIndicator) == 0x000008, "Wrong alignment on W_CompassMaster_C_AddIndicator");
static_assert(sizeof(W_CompassMaster_C_AddIndicator) == 0x000008, "Wrong size on W_CompassMaster_C_AddIndicator");
static_assert(offsetof(W_CompassMaster_C_AddIndicator, TargetComponent) == 0x000000, "Member 'W_CompassMaster_C_AddIndicator::TargetComponent' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_CompassMaster_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_Tick) == 0x000004, "Wrong alignment on W_CompassMaster_C_Tick");
static_assert(sizeof(W_CompassMaster_C_Tick) == 0x00003C, "Wrong size on W_CompassMaster_C_Tick");
static_assert(offsetof(W_CompassMaster_C_Tick, MyGeometry) == 0x000000, "Member 'W_CompassMaster_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_Tick, InDeltaTime) == 0x000038, "Member 'W_CompassMaster_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_CompassMaster_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_CompassMaster_C_PreConstruct) == 0x000001, "Wrong alignment on W_CompassMaster_C_PreConstruct");
static_assert(sizeof(W_CompassMaster_C_PreConstruct) == 0x000001, "Wrong size on W_CompassMaster_C_PreConstruct");
static_assert(offsetof(W_CompassMaster_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_CompassMaster_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.RemoveMarker
// 0x0050 (0x0050 - 0x0000)
struct W_CompassMaster_C_RemoveMarker final
{
public:
	class UBP_TargetIndicatorComponent_C*         ForComp;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            K2Node_DynamicCast_AsW_Compass_Indicator_Master;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_CompassMaster_C_RemoveMarker) == 0x000008, "Wrong alignment on W_CompassMaster_C_RemoveMarker");
static_assert(sizeof(W_CompassMaster_C_RemoveMarker) == 0x000050, "Wrong size on W_CompassMaster_C_RemoveMarker");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, ForComp) == 0x000000, "Member 'W_CompassMaster_C_RemoveMarker::ForComp' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_CompassMaster_C_RemoveMarker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_CompassMaster_C_RemoveMarker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_CompassMaster_C_RemoveMarker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'W_CompassMaster_C_RemoveMarker::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'W_CompassMaster_C_RemoveMarker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_CompassMaster_C_RemoveMarker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'W_CompassMaster_C_RemoveMarker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, K2Node_DynamicCast_AsW_Compass_Indicator_Master) == 0x000040, "Member 'W_CompassMaster_C_RemoveMarker::K2Node_DynamicCast_AsW_Compass_Indicator_Master' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_CompassMaster_C_RemoveMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_RemoveMarker, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000049, "Member 'W_CompassMaster_C_RemoveMarker::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

