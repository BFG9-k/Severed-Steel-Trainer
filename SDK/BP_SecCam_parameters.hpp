#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SecCam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SecCam.BP_SecCam_C.ExecuteUbergraph_BP_SecCam
// 0x0058 (0x0058 - 0x0000)
struct BP_SecCam_C_ExecuteUbergraph_BP_SecCam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam) == 0x000008, "Wrong alignment on BP_SecCam_C_ExecuteUbergraph_BP_SecCam");
static_assert(sizeof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam) == 0x000058, "Wrong size on BP_SecCam_C_ExecuteUbergraph_BP_SecCam");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, EntryPoint) == 0x000000, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_GetTYVCGameMode_NewParam) == 0x000018, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000024, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_FindLookAtRotation_ReturnValue) == 0x000030, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00003C, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_RInterpTo_ReturnValue) == 0x000048, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_ExecuteUbergraph_BP_SecCam, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000054, "Member 'BP_SecCam_C_ExecuteUbergraph_BP_SecCam::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_SecCam.BP_SecCam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SecCam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SecCam_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SecCam_C_ReceiveTick");
static_assert(sizeof(BP_SecCam_C_ReceiveTick) == 0x000004, "Wrong size on BP_SecCam_C_ReceiveTick");
static_assert(offsetof(BP_SecCam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SecCam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SecCam.BP_SecCam_C.OnHit
// 0x0094 (0x0094 - 0x0000)
struct BP_SecCam_C_OnHit final
{
public:
	EImpactType                                   ImpactType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Dmg;                                               // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SecCam_C_OnHit) == 0x000004, "Wrong alignment on BP_SecCam_C_OnHit");
static_assert(sizeof(BP_SecCam_C_OnHit) == 0x000094, "Wrong size on BP_SecCam_C_OnHit");
static_assert(offsetof(BP_SecCam_C_OnHit, ImpactType) == 0x000000, "Member 'BP_SecCam_C_OnHit::ImpactType' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_OnHit, HitResult) == 0x000004, "Member 'BP_SecCam_C_OnHit::HitResult' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_OnHit, Dmg) == 0x00008C, "Member 'BP_SecCam_C_OnHit::Dmg' has a wrong offset!");
static_assert(offsetof(BP_SecCam_C_OnHit, ReturnValue) == 0x000090, "Member 'BP_SecCam_C_OnHit::ReturnValue' has a wrong offset!");

}

