#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TempHead_MissileBP

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TempHead_MissileBP.BP_TempHead_MissileBP_C
// 0x0070 (0x0290 - 0x0220)
class ABP_TempHead_MissileBP_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Cap_6;                                             // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cap_5;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cap_4;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cap_3;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cap_2;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cap_1;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TempMissile_1;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TempMissile_6;                                     // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TempMissile_5;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TempMissile_3;                                     // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TempMissile_4;                                     // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TempMissile_2;                                     // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Head;                                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void OnRep_HideLaserBeam();
	void OnRep_HeadSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TempHead_MissileBP_C">();
	}
	static class ABP_TempHead_MissileBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TempHead_MissileBP_C>();
	}
};
static_assert(alignof(ABP_TempHead_MissileBP_C) == 0x000008, "Wrong alignment on ABP_TempHead_MissileBP_C");
static_assert(sizeof(ABP_TempHead_MissileBP_C) == 0x000290, "Wrong size on ABP_TempHead_MissileBP_C");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Cap_6) == 0x000220, "Member 'ABP_TempHead_MissileBP_C::Cap_6' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Cap_5) == 0x000228, "Member 'ABP_TempHead_MissileBP_C::Cap_5' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Cap_4) == 0x000230, "Member 'ABP_TempHead_MissileBP_C::Cap_4' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Cap_3) == 0x000238, "Member 'ABP_TempHead_MissileBP_C::Cap_3' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Cap_2) == 0x000240, "Member 'ABP_TempHead_MissileBP_C::Cap_2' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Cap_1) == 0x000248, "Member 'ABP_TempHead_MissileBP_C::Cap_1' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, TempMissile_1) == 0x000250, "Member 'ABP_TempHead_MissileBP_C::TempMissile_1' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, TempMissile_6) == 0x000258, "Member 'ABP_TempHead_MissileBP_C::TempMissile_6' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, TempMissile_5) == 0x000260, "Member 'ABP_TempHead_MissileBP_C::TempMissile_5' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, TempMissile_3) == 0x000268, "Member 'ABP_TempHead_MissileBP_C::TempMissile_3' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, TempMissile_4) == 0x000270, "Member 'ABP_TempHead_MissileBP_C::TempMissile_4' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, TempMissile_2) == 0x000278, "Member 'ABP_TempHead_MissileBP_C::TempMissile_2' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Root) == 0x000280, "Member 'ABP_TempHead_MissileBP_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_TempHead_MissileBP_C, Head) == 0x000288, "Member 'ABP_TempHead_MissileBP_C::Head' has a wrong offset!");

}

