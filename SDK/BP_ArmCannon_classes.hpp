#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmCannon

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Voxel_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ArmCannon.BP_ArmCannon_C
// 0x01C0 (0x0AD0 - 0x0910)
class ABP_ArmCannon_C final : public AArmCannon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0910(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         PunchTL_NewTrack_0_A6C6DC90434174427EAC038E12EBC128; // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PunchTL__Direction_A6C6DC90434174427EAC038E12EBC128; // 0x091C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91D[0x3];                                      // 0x091D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PunchTL;                                           // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PUllTImeline_Rot_A947571E499BBF55DB8509925B5D1173; // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PUllTImeline_NewTrack_0_A947571E499BBF55DB8509925B5D1173; // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PUllTImeline__Direction_A947571E499BBF55DB8509925B5D1173; // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931[0x7];                                      // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PUllTImeline;                                      // 0x0938(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_878A12664EC28AEE74572F9E85FDD249; // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_941[0x7];                                      // 0x0941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0948(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         THing_NewTrack_0_8BF7C2FD4271D592FE97279921402307; // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            THing__Direction_8BF7C2FD4271D592FE97279921402307; // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_955[0x3];                                      // 0x0955(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     THing;                                             // 0x0958(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoxelIntBox                           wpgraphbounds;                                     // 0x0960(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             BoxBounds;                                         // 0x0978(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      NewVar_0;                                          // 0x0988(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MinWPRadius;                                       // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxWPRadius;                                       // 0x09DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxWPChargeTime;                                   // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVoxelWorld*                            WorldToEdit;                                       // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoxelTransformableGeneratorPicker     DamageGen;                                         // 0x09F0(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      NewVar_1;                                          // 0x0A58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         NewVar_2;                                          // 0x0A68(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UParticleSystem*                        Impact_Particle;                                   // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CinematicParticles;                                // 0x0A80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         Loop;                                              // 0x0A90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A94[0x4];                                      // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DelayCurve;                                        // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Charges;                                           // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLoc;                                          // 0x0AA4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartWorldRot;                                     // 0x0AB0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         EditRadius;                                        // 0x0ABC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EditHalfHeight;                                    // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EditLoc;                                           // 0x0AC4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ArmCannon(int32 EntryPoint);
	void LoadSkin(class FName InJacket);
	void StartWPAim();
	void StopWPAim();
	void DoPunchCharge(const struct FVector& WorldDir);
	void NotifyCinematicCharge();
	void OnWidePulseHit(const struct FTransform& Transform, class AActor* OnActor, const struct FVector& HitVelocity, const struct FHitResult& HitResult, float Chargetime, float MagmaUV, class UActorComponent* HitComp);
	void StopPullObject();
	void CustomEvent_0();
	void ShowOvercharge(bool bShow, bool bInstant);
	void StartPullObject();
	void DoCinematicOvercharge(const TArray<struct FTransform>& ChargePoints, bool bForWorkshopSwap);
	void ReceiveDestroyed();
	void OnLoaded_A46145184EEB131DEA6FB88A466AA288(class UObject* Loaded);
	void PunchTL__UpdateFunc();
	void PunchTL__FinishedFunc();
	void PUllTImeline__UpdateFunc();
	void PUllTImeline__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void THing__UpdateFunc();
	void THing__FinishedFunc();
	ECannonMode QueryRadialForMode();
	class ALuosProjectile* FireWidePulseProjectile(const struct FTransform& StartingTransform, float Chargetime, float MagmaUV, bool bMega);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmCannon_C">();
	}
	static class ABP_ArmCannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ArmCannon_C>();
	}
};
static_assert(alignof(ABP_ArmCannon_C) == 0x000010, "Wrong alignment on ABP_ArmCannon_C");
static_assert(sizeof(ABP_ArmCannon_C) == 0x000AD0, "Wrong size on ABP_ArmCannon_C");
static_assert(offsetof(ABP_ArmCannon_C, UberGraphFrame) == 0x000910, "Member 'ABP_ArmCannon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PunchTL_NewTrack_0_A6C6DC90434174427EAC038E12EBC128) == 0x000918, "Member 'ABP_ArmCannon_C::PunchTL_NewTrack_0_A6C6DC90434174427EAC038E12EBC128' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PunchTL__Direction_A6C6DC90434174427EAC038E12EBC128) == 0x00091C, "Member 'ABP_ArmCannon_C::PunchTL__Direction_A6C6DC90434174427EAC038E12EBC128' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PunchTL) == 0x000920, "Member 'ABP_ArmCannon_C::PunchTL' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PUllTImeline_Rot_A947571E499BBF55DB8509925B5D1173) == 0x000928, "Member 'ABP_ArmCannon_C::PUllTImeline_Rot_A947571E499BBF55DB8509925B5D1173' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PUllTImeline_NewTrack_0_A947571E499BBF55DB8509925B5D1173) == 0x00092C, "Member 'ABP_ArmCannon_C::PUllTImeline_NewTrack_0_A947571E499BBF55DB8509925B5D1173' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PUllTImeline__Direction_A947571E499BBF55DB8509925B5D1173) == 0x000930, "Member 'ABP_ArmCannon_C::PUllTImeline__Direction_A947571E499BBF55DB8509925B5D1173' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, PUllTImeline) == 0x000938, "Member 'ABP_ArmCannon_C::PUllTImeline' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, Timeline_0__Direction_878A12664EC28AEE74572F9E85FDD249) == 0x000940, "Member 'ABP_ArmCannon_C::Timeline_0__Direction_878A12664EC28AEE74572F9E85FDD249' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, Timeline_0) == 0x000948, "Member 'ABP_ArmCannon_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, THing_NewTrack_0_8BF7C2FD4271D592FE97279921402307) == 0x000950, "Member 'ABP_ArmCannon_C::THing_NewTrack_0_8BF7C2FD4271D592FE97279921402307' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, THing__Direction_8BF7C2FD4271D592FE97279921402307) == 0x000954, "Member 'ABP_ArmCannon_C::THing__Direction_8BF7C2FD4271D592FE97279921402307' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, THing) == 0x000958, "Member 'ABP_ArmCannon_C::THing' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, wpgraphbounds) == 0x000960, "Member 'ABP_ArmCannon_C::wpgraphbounds' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, BoxBounds) == 0x000978, "Member 'ABP_ArmCannon_C::BoxBounds' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, NewVar_0) == 0x000988, "Member 'ABP_ArmCannon_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, MinWPRadius) == 0x0009D8, "Member 'ABP_ArmCannon_C::MinWPRadius' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, MaxWPRadius) == 0x0009DC, "Member 'ABP_ArmCannon_C::MaxWPRadius' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, MaxWPChargeTime) == 0x0009E0, "Member 'ABP_ArmCannon_C::MaxWPChargeTime' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, WorldToEdit) == 0x0009E8, "Member 'ABP_ArmCannon_C::WorldToEdit' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, DamageGen) == 0x0009F0, "Member 'ABP_ArmCannon_C::DamageGen' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, NewVar_1) == 0x000A58, "Member 'ABP_ArmCannon_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, NewVar_2) == 0x000A68, "Member 'ABP_ArmCannon_C::NewVar_2' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, Impact_Particle) == 0x000A78, "Member 'ABP_ArmCannon_C::Impact_Particle' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, CinematicParticles) == 0x000A80, "Member 'ABP_ArmCannon_C::CinematicParticles' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, Loop) == 0x000A90, "Member 'ABP_ArmCannon_C::Loop' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, DelayCurve) == 0x000A98, "Member 'ABP_ArmCannon_C::DelayCurve' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, Charges) == 0x000AA0, "Member 'ABP_ArmCannon_C::Charges' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, StartLoc) == 0x000AA4, "Member 'ABP_ArmCannon_C::StartLoc' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, StartWorldRot) == 0x000AB0, "Member 'ABP_ArmCannon_C::StartWorldRot' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, EditRadius) == 0x000ABC, "Member 'ABP_ArmCannon_C::EditRadius' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, EditHalfHeight) == 0x000AC0, "Member 'ABP_ArmCannon_C::EditHalfHeight' has a wrong offset!");
static_assert(offsetof(ABP_ArmCannon_C, EditLoc) == 0x000AC4, "Member 'ABP_ArmCannon_C::EditLoc' has a wrong offset!");

}

