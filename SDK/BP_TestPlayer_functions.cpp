#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TestPlayer

#include "Basic.hpp"

#include "BP_TestPlayer_classes.hpp"
#include "BP_TestPlayer_parameters.hpp"


namespace SDK
{

// Function BP_TestPlayer.BP_TestPlayer_C.ExecuteUbergraph_BP_TestPlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::ExecuteUbergraph_BP_TestPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "ExecuteUbergraph_BP_TestPlayer");

	Params::BP_TestPlayer_C_ExecuteUbergraph_BP_TestPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpAxisEvt_TurnRight_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpAxisEvt_TurnRight_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpAxisEvt_TurnRight_K2Node_InputAxisEvent_2");

	Params::BP_TestPlayer_C_InpAxisEvt_TurnRight_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TestPlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TestPlayer.BP_TestPlayer_C.ExitQuickItem
// (BlueprintCallable, BlueprintEvent)

void ABP_TestPlayer_C::ExitQuickItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "ExitQuickItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TestPlayer.BP_TestPlayer_C.EnterQuickItem
// (BlueprintCallable, BlueprintEvent)

void ABP_TestPlayer_C::EnterQuickItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "EnterQuickItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");

	Params::BP_TestPlayer_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1");

	Params::BP_TestPlayer_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.EnterBuildMode
// (BlueprintCallable, BlueprintEvent)

void ABP_TestPlayer_C::EnterBuildMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "EnterBuildMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TestPlayer.BP_TestPlayer_C.ExitBuild
// (BlueprintCallable, BlueprintEvent)

void ABP_TestPlayer_C::ExitBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "ExitBuild");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TestPlayer.BP_TestPlayer_C.SubmenuCommited
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SubItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::SubmenuCommited(class FName Category, class FName SubItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "SubmenuCommited");

	Params::BP_TestPlayer_C_SubmenuCommited Parms{};

	Parms.Category = Category;
	Parms.SubItem = SubItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_21
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_21(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_21");

	Params::BP_TestPlayer_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_21 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_16
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpAxisEvt_TurnRate_K2Node_InputAxisEvent_16(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpAxisEvt_TurnRate_K2Node_InputAxisEvent_16");

	Params::BP_TestPlayer_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_16 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_5
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_5(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_5");

	Params::BP_TestPlayer_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_5 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_0");

	Params::BP_TestPlayer_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_1");

	Params::BP_TestPlayer_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_2");

	Params::BP_TestPlayer_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpActEvt_LeftAlt_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpActEvt_LeftAlt_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpActEvt_LeftAlt_K2Node_InputKeyEvent_3");

	Params::BP_TestPlayer_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpActEvt_LeftAlt_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpActEvt_LeftAlt_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpActEvt_LeftAlt_K2Node_InputKeyEvent_4");

	Params::BP_TestPlayer_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TestPlayer_C::InpActEvt_LeftShift_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "InpActEvt_LeftShift_K2Node_InputKeyEvent_5");

	Params::BP_TestPlayer_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TestPlayer.BP_TestPlayer_C.GetCurrentTool
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FToolData                        Output                                                 (Parm, OutParm, HasGetValueTypeHash)

void ABP_TestPlayer_C::GetCurrentTool(struct FToolData* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TestPlayer_C", "GetCurrentTool");

	Params::BP_TestPlayer_C_GetCurrentTool Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}

}

