#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PortalTickComponent

#include "Basic.hpp"

#include "PortalTickComponent_classes.hpp"
#include "PortalTickComponent_parameters.hpp"


namespace SDK
{

// Function PortalTickComponent.PortalTickComponent_C.ExecuteUbergraph_PortalTickComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ExecuteUbergraph_PortalTickComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ExecuteUbergraph_PortalTickComponent");

	Params::PortalTickComponent_C_ExecuteUbergraph_PortalTickComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PortalTickComponent.PortalTickComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ReceiveTick");

	Params::PortalTickComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PortalTickComponent.PortalTickComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UPortalTickComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          new_location                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ChangeLocation(const struct FVector& Location, struct FVector* new_location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeLocation");

	Params::PortalTickComponent_C_ChangeLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (new_location != nullptr)
		*new_location = std::move(Parms.new_location);
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeDirection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ChangeDirection(const struct FVector& Direction, struct FVector* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeDirection");

	Params::PortalTickComponent_C_ChangeDirection Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPortalTickComponent_C::ChangeRotation(const struct FRotator& Rotation, struct FRotator* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeRotation");

	Params::PortalTickComponent_C_ChangeRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          vel                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ChangeVelocity(const struct FVector& vel, struct FVector* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeVelocity");

	Params::PortalTickComponent_C_ChangeVelocity Parms{};

	Parms.vel = std::move(vel);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   multiply_by                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ChangeScale(float* multiply_by)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeScale");

	Params::PortalTickComponent_C_ChangeScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (multiply_by != nullptr)
		*multiply_by = Parms.multiply_by;
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       transform_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       transform_out                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void UPortalTickComponent_C::ChangeTransform(const struct FTransform& transform_in, struct FTransform* transform_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeTransform");

	Params::PortalTickComponent_C_ChangeTransform Parms{};

	Parms.transform_in = std::move(transform_in);

	UObject::ProcessEvent(Func, &Parms);

	if (transform_out != nullptr)
		*transform_out = std::move(Parms.transform_out);
}


// Function PortalTickComponent.PortalTickComponent_C.TeleportOverlappingActors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPortalTickComponent_C::TeleportOverlappingActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "TeleportOverlappingActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PortalTickComponent.PortalTickComponent_C.ChangeActorThroughPortal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorToPass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPortalTickComponent_C::ChangeActorThroughPortal(class AActor* ActorToPass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PortalTickComponent_C", "ChangeActorThroughPortal");

	Params::PortalTickComponent_C_ChangeActorThroughPortal Parms{};

	Parms.ActorToPass = ActorToPass;

	UObject::ProcessEvent(Func, &Parms);
}

}

