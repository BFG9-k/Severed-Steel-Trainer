#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TYVCPC_BP

#include "Basic.hpp"

#include "EJoystickTypes_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TYVCPC_BP.TYVCPC_BP_C.ExecuteUbergraph_TYVCPC_BP
// 0x0008 (0x0008 - 0x0000)
struct TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViz;                                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP) == 0x000004, "Wrong alignment on TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP");
static_assert(sizeof(TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP) == 0x000008, "Wrong size on TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP");
static_assert(offsetof(TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP, EntryPoint) == 0x000000, "Member 'TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP, K2Node_Event_bViz) == 0x000004, "Member 'TYVCPC_BP_C_ExecuteUbergraph_TYVCPC_BP::K2Node_Event_bViz' has a wrong offset!");

// Function TYVCPC_BP.TYVCPC_BP_C.SetCompassViz
// 0x0001 (0x0001 - 0x0000)
struct TYVCPC_BP_C_SetCompassViz final
{
public:
	bool                                          bViz;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TYVCPC_BP_C_SetCompassViz) == 0x000001, "Wrong alignment on TYVCPC_BP_C_SetCompassViz");
static_assert(sizeof(TYVCPC_BP_C_SetCompassViz) == 0x000001, "Wrong size on TYVCPC_BP_C_SetCompassViz");
static_assert(offsetof(TYVCPC_BP_C_SetCompassViz, bViz) == 0x000000, "Member 'TYVCPC_BP_C_SetCompassViz::bViz' has a wrong offset!");

// Function TYVCPC_BP.TYVCPC_BP_C.RequestEveHUD
// 0x0010 (0x0010 - 0x0000)
struct TYVCPC_BP_C_RequestEveHUD final
{
public:
	class UGameplayHUD*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayHUD*                           CallFunc_RequestEveHUD_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TYVCPC_BP_C_RequestEveHUD) == 0x000008, "Wrong alignment on TYVCPC_BP_C_RequestEveHUD");
static_assert(sizeof(TYVCPC_BP_C_RequestEveHUD) == 0x000010, "Wrong size on TYVCPC_BP_C_RequestEveHUD");
static_assert(offsetof(TYVCPC_BP_C_RequestEveHUD, ReturnValue) == 0x000000, "Member 'TYVCPC_BP_C_RequestEveHUD::ReturnValue' has a wrong offset!");
static_assert(offsetof(TYVCPC_BP_C_RequestEveHUD, CallFunc_RequestEveHUD_ReturnValue) == 0x000008, "Member 'TYVCPC_BP_C_RequestEveHUD::CallFunc_RequestEveHUD_ReturnValue' has a wrong offset!");

// Function TYVCPC_BP.TYVCPC_BP_C.GetJoystickDirection
// 0x001C (0x001C - 0x0000)
struct TYVCPC_BP_C_GetJoystickDirection final
{
public:
	EJoystickTypes                                Stick;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              StickInput;                                        // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisKeyValue_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisKeyValue_ReturnValue_1;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TYVCPC_BP_C_GetJoystickDirection) == 0x000004, "Wrong alignment on TYVCPC_BP_C_GetJoystickDirection");
static_assert(sizeof(TYVCPC_BP_C_GetJoystickDirection) == 0x00001C, "Wrong size on TYVCPC_BP_C_GetJoystickDirection");
static_assert(offsetof(TYVCPC_BP_C_GetJoystickDirection, Stick) == 0x000000, "Member 'TYVCPC_BP_C_GetJoystickDirection::Stick' has a wrong offset!");
static_assert(offsetof(TYVCPC_BP_C_GetJoystickDirection, StickInput) == 0x000004, "Member 'TYVCPC_BP_C_GetJoystickDirection::StickInput' has a wrong offset!");
static_assert(offsetof(TYVCPC_BP_C_GetJoystickDirection, CallFunc_GetInputAxisKeyValue_ReturnValue) == 0x00000C, "Member 'TYVCPC_BP_C_GetJoystickDirection::CallFunc_GetInputAxisKeyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TYVCPC_BP_C_GetJoystickDirection, CallFunc_GetInputAxisKeyValue_ReturnValue_1) == 0x000010, "Member 'TYVCPC_BP_C_GetJoystickDirection::CallFunc_GetInputAxisKeyValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TYVCPC_BP_C_GetJoystickDirection, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'TYVCPC_BP_C_GetJoystickDirection::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

