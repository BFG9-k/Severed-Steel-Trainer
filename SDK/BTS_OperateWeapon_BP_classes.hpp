#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_OperateWeapon_BP

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_OperateWeapon_BP.BTS_OperateWeapon_BP_C
// 0x0018 (0x0260 - 0x0248)
class UBTS_OperateWeapon_BP_C final : public UBTS_OperateWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CoolDownTime;                                      // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_OperateWeapon_BP(int32 EntryPoint);
	void MagDump();
	void SingleShot(float CoolDownTime_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_OperateWeapon_BP_C">();
	}
	static class UBTS_OperateWeapon_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_OperateWeapon_BP_C>();
	}
};
static_assert(alignof(UBTS_OperateWeapon_BP_C) == 0x000008, "Wrong alignment on UBTS_OperateWeapon_BP_C");
static_assert(sizeof(UBTS_OperateWeapon_BP_C) == 0x000260, "Wrong size on UBTS_OperateWeapon_BP_C");
static_assert(offsetof(UBTS_OperateWeapon_BP_C, UberGraphFrame) == 0x000248, "Member 'UBTS_OperateWeapon_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_OperateWeapon_BP_C, MontageToPlay) == 0x000250, "Member 'UBTS_OperateWeapon_BP_C::MontageToPlay' has a wrong offset!");
static_assert(offsetof(UBTS_OperateWeapon_BP_C, CoolDownTime) == 0x000258, "Member 'UBTS_OperateWeapon_BP_C::CoolDownTime' has a wrong offset!");

}

