#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DamageIndicator

#include "Basic.hpp"

#include "UI_DamageIndicator_classes.hpp"
#include "UI_DamageIndicator_parameters.hpp"


namespace SDK
{

// Function UI_DamageIndicator.UI_DamageIndicator_C.ExecuteUbergraph_UI_DamageIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageIndicator_C::ExecuteUbergraph_UI_DamageIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageIndicator_C", "ExecuteUbergraph_UI_DamageIndicator");

	Params::UI_DamageIndicator_C_ExecuteUbergraph_UI_DamageIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DamageIndicator.UI_DamageIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_DamageIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_DamageIndicator.UI_DamageIndicator_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageIndicator_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageIndicator_C", "Tick");

	Params::UI_DamageIndicator_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DamageIndicator.UI_DamageIndicator_C.Disappearance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentAlpha                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageIndicator_C::Disappearance(class UImage* Image, float DeltaTime, float* CurrentAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageIndicator_C", "Disappearance");

	Params::UI_DamageIndicator_C_Disappearance Parms{};

	Parms.Image = Image;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentAlpha != nullptr)
		*CurrentAlpha = Parms.CurrentAlpha;
}

}

