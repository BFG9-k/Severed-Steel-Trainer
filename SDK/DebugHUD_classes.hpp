#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DebugHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DebugHUD.DebugHUD_C
// 0x0068 (0x0378 - 0x0310)
class ADebugHUD_C final : public AHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentTargetLocation;                             // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetSize;                                        // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeadZoneMethod;                                    // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CursorMatInst;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AxialDeadZone;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadialDeadZone;                                    // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrimitiveDirection;                                // 0x034C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StickDirection;                                    // 0x0354(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAimAssistComponent_C*                  AimAssistComponentReference;                       // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AssistedDirection;                                 // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_;                                            // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_DebugHUD(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveDrawHUD(int32 SizeX, int32 SizeY);
	void DrawAimAssistDebug();
	void DrawDeadzoneDebug();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DebugHUD_C">();
	}
	static class ADebugHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADebugHUD_C>();
	}
};
static_assert(alignof(ADebugHUD_C) == 0x000008, "Wrong alignment on ADebugHUD_C");
static_assert(sizeof(ADebugHUD_C) == 0x000378, "Wrong size on ADebugHUD_C");
static_assert(offsetof(ADebugHUD_C, UberGraphFrame) == 0x000310, "Member 'ADebugHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, DefaultSceneRoot) == 0x000318, "Member 'ADebugHUD_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, CurrentTargetLocation) == 0x000320, "Member 'ADebugHUD_C::CurrentTargetLocation' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, TargetSize) == 0x00032C, "Member 'ADebugHUD_C::TargetSize' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, DeadZoneMethod) == 0x000330, "Member 'ADebugHUD_C::DeadZoneMethod' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, CursorMatInst) == 0x000338, "Member 'ADebugHUD_C::CursorMatInst' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, AxialDeadZone) == 0x000340, "Member 'ADebugHUD_C::AxialDeadZone' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, RadialDeadZone) == 0x000348, "Member 'ADebugHUD_C::RadialDeadZone' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, PrimitiveDirection) == 0x00034C, "Member 'ADebugHUD_C::PrimitiveDirection' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, StickDirection) == 0x000354, "Member 'ADebugHUD_C::StickDirection' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, AimAssistComponentReference) == 0x000360, "Member 'ADebugHUD_C::AimAssistComponentReference' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, AssistedDirection) == 0x000368, "Member 'ADebugHUD_C::AssistedDirection' has a wrong offset!");
static_assert(offsetof(ADebugHUD_C, Debug_) == 0x000370, "Member 'ADebugHUD_C::Debug_' has a wrong offset!");

}

