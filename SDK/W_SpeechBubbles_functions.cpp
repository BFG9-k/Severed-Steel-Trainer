#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SpeechBubbles

#include "Basic.hpp"

#include "W_SpeechBubbles_classes.hpp"
#include "W_SpeechBubbles_parameters.hpp"


namespace SDK
{

// Function W_SpeechBubbles.W_SpeechBubbles_C.ExecuteUbergraph_W_SpeechBubbles
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpeechBubbles_C::ExecuteUbergraph_W_SpeechBubbles(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "ExecuteUbergraph_W_SpeechBubbles");

	Params::W_SpeechBubbles_C_ExecuteUbergraph_W_SpeechBubbles Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_SpeechBubbles_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "PreConstruct");

	Params::W_SpeechBubbles_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.OnStopSpeaking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_SpeechBubble_C*                SpeechBubble                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpeechBubbles_C::OnStopSpeaking(class UW_SpeechBubble_C* SpeechBubble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "OnStopSpeaking");

	Params::W_SpeechBubbles_C_OnStopSpeaking Parms{};

	Parms.SpeechBubble = SpeechBubble;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.Say
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Speaker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   MaxRenderDistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_SpeechBubbleSettings          Settings                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASpeechBubbleLocation_C*          SpeechBubbleLocation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpeechBubbles_C::Say(class AActor* Speaker, const class FText& Text, float MaxRenderDistance, const struct FS_SpeechBubbleSettings& Settings, class ASpeechBubbleLocation_C* SpeechBubbleLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "Say");

	Params::W_SpeechBubbles_C_Say Parms{};

	Parms.Speaker = Speaker;
	Parms.Text = std::move(Text);
	Parms.MaxRenderDistance = MaxRenderDistance;
	Parms.Settings = std::move(Settings);
	Parms.SpeechBubbleLocation = SpeechBubbleLocation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpeechBubbles_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "Tick");

	Params::W_SpeechBubbles_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_SpeechBubbles_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.TuneActiveBubbles
// (Protected, BlueprintCallable, BlueprintEvent)

void UW_SpeechBubbles_C::TuneActiveBubbles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "TuneActiveBubbles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.GetSpeechBubbleByActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_SpeechBubble_C*                SpeechBubbleWidget                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpeechBubbles_C::GetSpeechBubbleByActor(class AActor* Actor, class UW_SpeechBubble_C** SpeechBubbleWidget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "GetSpeechBubbleByActor");

	Params::W_SpeechBubbles_C_GetSpeechBubbleByActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (SpeechBubbleWidget != nullptr)
		*SpeechBubbleWidget = Parms.SpeechBubbleWidget;
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.GetFinalPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Speaker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_SpeechBubble_C*                SpeechBubble                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Position                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanProject_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_SpeechBubbles_C::GetFinalPosition(class AActor* Speaker, class UW_SpeechBubble_C* SpeechBubble, struct FVector2D* Position, bool* CanProject_) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "GetFinalPosition");

	Params::W_SpeechBubbles_C_GetFinalPosition Parms{};

	Parms.Speaker = Speaker;
	Parms.SpeechBubble = SpeechBubble;

	UObject::ProcessEvent(Func, &Parms);

	if (Position != nullptr)
		*Position = std::move(Parms.Position);

	if (CanProject_ != nullptr)
		*CanProject_ = Parms.CanProject_;
}


// Function W_SpeechBubbles.W_SpeechBubbles_C.GetFinalSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Speaker                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_SpeechBubble_C*                SpeechBubble                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpeechBubbles_C::GetFinalSize(const class AActor* Speaker, class UW_SpeechBubble_C* SpeechBubble, struct FVector2D* Size) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpeechBubbles_C", "GetFinalSize");

	Params::W_SpeechBubbles_C_GetFinalSize Parms{};

	Parms.Speaker = Speaker;
	Parms.SpeechBubble = SpeechBubble;

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}

}

