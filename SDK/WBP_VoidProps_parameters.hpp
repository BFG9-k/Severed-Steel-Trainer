#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_VoidProps

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_VoidProps.WBP_VoidProps_C.ExecuteUbergraph_WBP_VoidProps
// 0x0080 (0x0080 - 0x0000)
struct WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_3;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_2;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_2;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0030(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0050(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps) == 0x000008, "Wrong alignment on WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps");
static_assert(sizeof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps) == 0x000080, "Wrong size on WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, EntryPoint) == 0x000000, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_InValue_3) == 0x000004, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_InValue_3' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_InValue_2) == 0x000008, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, CallFunc_GetValue_ReturnValue) == 0x00000C, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_InValue_1) == 0x000010, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_CommitMethod_2) == 0x000014, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_CommitMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, CallFunc_GetValue_ReturnValue_1) == 0x000018, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_InValue) == 0x00001C, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x000020, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_Text) == 0x000030, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, K2Node_ComponentBoundEvent_CommitMethod) == 0x000048, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, CallFunc_GetText_ReturnValue) == 0x000050, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'WBP_VoidProps_C_ExecuteUbergraph_WBP_VoidProps::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function WBP_VoidProps.WBP_VoidProps_C.BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_VoidProps_C_BndEvt__WBP_VoidProps_ID_K2Node_ComponentBoundEvent_5_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_VoidProps.WBP_VoidProps_C.BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_VoidProps.WBP_VoidProps_C.BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_2_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_VoidProps.WBP_VoidProps_C.BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_VoidProps_C_BndEvt__SpinBox_148_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_VoidProps.WBP_VoidProps_C.BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_VoidProps_C_BndEvt__SpinBox_87_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_VoidProps.WBP_VoidProps_C.Setup
// 0x0038 (0x0038 - 0x0000)
struct WBP_VoidProps_C_Setup final
{
public:
	class ABP_Void_C*                             InVodi;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0018)()
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VoidProps_C_Setup) == 0x000008, "Wrong alignment on WBP_VoidProps_C_Setup");
static_assert(sizeof(WBP_VoidProps_C_Setup) == 0x000038, "Wrong size on WBP_VoidProps_C_Setup");
static_assert(offsetof(WBP_VoidProps_C_Setup, InVodi) == 0x000000, "Member 'WBP_VoidProps_C_Setup::InVodi' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_Setup, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'WBP_VoidProps_C_Setup::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_Setup, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000020, "Member 'WBP_VoidProps_C_Setup::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_Setup, CallFunc_BreakVector_X) == 0x00002C, "Member 'WBP_VoidProps_C_Setup::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_Setup, CallFunc_BreakVector_Y) == 0x000030, "Member 'WBP_VoidProps_C_Setup::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_VoidProps_C_Setup, CallFunc_BreakVector_Z) == 0x000034, "Member 'WBP_VoidProps_C_Setup::CallFunc_BreakVector_Z' has a wrong offset!");

}

