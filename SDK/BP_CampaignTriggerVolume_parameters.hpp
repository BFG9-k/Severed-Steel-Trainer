#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampaignTriggerVolume

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.ExecuteUbergraph_BP_CampaignTriggerVolume
// 0x0038 (0x0038 - 0x0000)
struct BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interactor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACampaignManager*                       CallFunc_GetCampaignManager_OutCM;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNavBlocking;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavModifierComponent*                  CallFunc_AddComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EActionType                                   K2Node_Event_ToDo;                                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSimulated;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume) == 0x000008, "Wrong alignment on BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume");
static_assert(sizeof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume) == 0x000038, "Wrong size on BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, EntryPoint) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, K2Node_Event_Interactor) == 0x000008, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::K2Node_Event_Interactor' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, CallFunc_GetTYVCGameMode_NewParam) == 0x000010, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, CallFunc_GetCampaignManager_OutCM) == 0x000018, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::CallFunc_GetCampaignManager_OutCM' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, K2Node_Event_bNavBlocking) == 0x000020, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::K2Node_Event_bNavBlocking' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, CallFunc_AddComponentByClass_ReturnValue) == 0x000028, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, K2Node_Event_ToDo) == 0x000031, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::K2Node_Event_ToDo' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, K2Node_Event_bSimulated) == 0x000032, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::K2Node_Event_bSimulated' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume, K2Node_SwitchEnum_CmpSuccess) == 0x000033, "Member 'BP_CampaignTriggerVolume_C_ExecuteUbergraph_BP_CampaignTriggerVolume::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.DoActions
// 0x0002 (0x0002 - 0x0000)
struct BP_CampaignTriggerVolume_C_DoActions final
{
public:
	EActionType                                   ToDo;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulated;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_DoActions) == 0x000001, "Wrong alignment on BP_CampaignTriggerVolume_C_DoActions");
static_assert(sizeof(BP_CampaignTriggerVolume_C_DoActions) == 0x000002, "Wrong size on BP_CampaignTriggerVolume_C_DoActions");
static_assert(offsetof(BP_CampaignTriggerVolume_C_DoActions, ToDo) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_DoActions::ToDo' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_DoActions, bSimulated) == 0x000001, "Member 'BP_CampaignTriggerVolume_C_DoActions::bSimulated' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.SetNavBlocking
// 0x0001 (0x0001 - 0x0000)
struct BP_CampaignTriggerVolume_C_SetNavBlocking final
{
public:
	bool                                          bNavBlocking;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_SetNavBlocking) == 0x000001, "Wrong alignment on BP_CampaignTriggerVolume_C_SetNavBlocking");
static_assert(sizeof(BP_CampaignTriggerVolume_C_SetNavBlocking) == 0x000001, "Wrong size on BP_CampaignTriggerVolume_C_SetNavBlocking");
static_assert(offsetof(BP_CampaignTriggerVolume_C_SetNavBlocking, bNavBlocking) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_SetNavBlocking::bNavBlocking' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.RequestInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_CampaignTriggerVolume_C_RequestInteraction final
{
public:
	class AActor*                                 Interactor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_RequestInteraction) == 0x000008, "Wrong alignment on BP_CampaignTriggerVolume_C_RequestInteraction");
static_assert(sizeof(BP_CampaignTriggerVolume_C_RequestInteraction) == 0x000008, "Wrong size on BP_CampaignTriggerVolume_C_RequestInteraction");
static_assert(offsetof(BP_CampaignTriggerVolume_C_RequestInteraction, Interactor) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_RequestInteraction::Interactor' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_CampaignTriggerVolume_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_IsInteractable) == 0x000001, "Wrong alignment on BP_CampaignTriggerVolume_C_IsInteractable");
static_assert(sizeof(BP_CampaignTriggerVolume_C_IsInteractable) == 0x000001, "Wrong size on BP_CampaignTriggerVolume_C_IsInteractable");
static_assert(offsetof(BP_CampaignTriggerVolume_C_IsInteractable, ReturnValue) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_IsInteractable::ReturnValue' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.GetInteractionText
// 0x0018 (0x0018 - 0x0000)
struct BP_CampaignTriggerVolume_C_GetInteractionText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_GetInteractionText) == 0x000008, "Wrong alignment on BP_CampaignTriggerVolume_C_GetInteractionText");
static_assert(sizeof(BP_CampaignTriggerVolume_C_GetInteractionText) == 0x000018, "Wrong size on BP_CampaignTriggerVolume_C_GetInteractionText");
static_assert(offsetof(BP_CampaignTriggerVolume_C_GetInteractionText, ReturnValue) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_GetInteractionText::ReturnValue' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.GetGoals
// 0x0020 (0x0020 - 0x0000)
struct BP_CampaignTriggerVolume_C_GetGoals final
{
public:
	TArray<EGoalType>                             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EGoalType>                             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_GetGoals) == 0x000008, "Wrong alignment on BP_CampaignTriggerVolume_C_GetGoals");
static_assert(sizeof(BP_CampaignTriggerVolume_C_GetGoals) == 0x000020, "Wrong size on BP_CampaignTriggerVolume_C_GetGoals");
static_assert(offsetof(BP_CampaignTriggerVolume_C_GetGoals, ReturnValue) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_GetGoals::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_GetGoals, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_CampaignTriggerVolume_C_GetGoals::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_CampaignTriggerVolume.BP_CampaignTriggerVolume_C.GetActions
// 0x0020 (0x0020 - 0x0000)
struct BP_CampaignTriggerVolume_C_GetActions final
{
public:
	TArray<EActionType>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EActionType>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CampaignTriggerVolume_C_GetActions) == 0x000008, "Wrong alignment on BP_CampaignTriggerVolume_C_GetActions");
static_assert(sizeof(BP_CampaignTriggerVolume_C_GetActions) == 0x000020, "Wrong size on BP_CampaignTriggerVolume_C_GetActions");
static_assert(offsetof(BP_CampaignTriggerVolume_C_GetActions, ReturnValue) == 0x000000, "Member 'BP_CampaignTriggerVolume_C_GetActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampaignTriggerVolume_C_GetActions, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_CampaignTriggerVolume_C_GetActions::K2Node_MakeArray_Array' has a wrong offset!");

}

