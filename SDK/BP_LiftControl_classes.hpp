#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LiftControl

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LiftControl.BP_LiftControl_C
// 0x0020 (0x0260 - 0x0240)
class ABP_LiftControl_C final : public ARechargeStation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_PropLift_C*                         MyLift;                                            // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Is_Up;                                             // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_LiftControl(int32 EntryPoint);
	void RequestInteraction(class AActor* Interactor);
	bool GetShouldSave();
	bool IsInteractable();
	void SetupAsDirection(bool bIsUp);
	class FText GetInteractionText();
	bool OnHit(EImpactType ImpactType, const struct FHitResult& HitResult, float Dmg);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LiftControl_C">();
	}
	static class ABP_LiftControl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LiftControl_C>();
	}
};
static_assert(alignof(ABP_LiftControl_C) == 0x000008, "Wrong alignment on ABP_LiftControl_C");
static_assert(sizeof(ABP_LiftControl_C) == 0x000260, "Wrong size on ABP_LiftControl_C");
static_assert(offsetof(ABP_LiftControl_C, UberGraphFrame) == 0x000240, "Member 'ABP_LiftControl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LiftControl_C, Widget) == 0x000248, "Member 'ABP_LiftControl_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_LiftControl_C, MyLift) == 0x000250, "Member 'ABP_LiftControl_C::MyLift' has a wrong offset!");
static_assert(offsetof(ABP_LiftControl_C, Is_Up) == 0x000258, "Member 'ABP_LiftControl_C::Is_Up' has a wrong offset!");

}

