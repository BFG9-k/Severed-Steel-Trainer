#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LightProperties

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_LightProperties.WBP_LightProperties_C.ExecuteUbergraph_WBP_LightProperties
// 0x0198 (0x0198 - 0x0000)
struct WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_14;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_13;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_12;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_11;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_5;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_10;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_4;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_9;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_3;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0038(0x0018)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_8;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0058(0x0018)()
	float                                         K2Node_ComponentBoundEvent_InValue_7;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_6;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_3;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_4;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_5;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_ComponentBoundEvent_NewColor;               // 0x00AC(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_ComponentBoundEvent_InValue_5;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_4;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_2;         // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_3;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_2;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_6;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_7;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_8;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_MakeColorFromFloat_ReturnValue;           // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties) == 0x000008, "Wrong alignment on WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties");
static_assert(sizeof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties) == 0x000198, "Wrong size on WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, EntryPoint) == 0x000000, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_14) == 0x000004, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_14' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_13) == 0x000008, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_13' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue) == 0x00000C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_1) == 0x000010, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_12) == 0x000014, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_12' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_2) == 0x000018, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_11) == 0x00001C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_11' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_CommitMethod_5) == 0x000020, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_CommitMethod_5' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_10) == 0x000024, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_10' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_CommitMethod_4) == 0x000028, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_CommitMethod_4' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_9) == 0x00002C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_9' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_CommitMethod_3) == 0x000030, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_CommitMethod_3' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_Text) == 0x000038, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_8) == 0x000054, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_8' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetText_ReturnValue) == 0x000058, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_7) == 0x000070, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_7' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_6) == 0x000088, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_6' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_Conv_StringToName_ReturnValue) == 0x00008C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_3) == 0x000094, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_4) == 0x000098, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_5) == 0x00009C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_NewColor) == 0x0000AC, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_NewColor' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000BC, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_5) == 0x000144, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_5' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_4) == 0x000148, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_CommitMethod_2) == 0x00014C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_CommitMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_3) == 0x000150, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_2) == 0x000154, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x000158, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue_1) == 0x00015C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_InValue) == 0x000160, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_CommitMethod) == 0x000164, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_6) == 0x000168, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_7) == 0x00016C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_GetValue_ReturnValue_8) == 0x000170, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_GetValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_MakeColorFromFloat_ReturnValue) == 0x000174, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_MakeColorFromFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_SelectedItem) == 0x000178, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, K2Node_ComponentBoundEvent_SelectionType) == 0x000188, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00018C, "Member 'WBP_LightProperties_C_ExecuteUbergraph_WBP_LightProperties::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_AttachID_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_16_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_3_K2Node_ComponentBoundEvent_15_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_14_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_2_K2Node_ComponentBoundEvent_13_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_12_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_1_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature) == 0x000010, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature, NewColor) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_VoxelColorWheel_131_K2Node_ComponentBoundEvent_10_OnVoxelColorWheelColorChangedEvent__DelegateSignature::NewColor' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_YAW_K2Node_ComponentBoundEvent_9_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_PITCH_K2Node_ComponentBoundEvent_8_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_roll_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__WBP_LightProperties_EditableTextBox_129_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_5_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_4_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__Distance_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__Temp_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_LightProperties_C_BndEvt__Brightness_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_LightProperties.WBP_LightProperties_C.Setup
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_LightProperties_C_Setup final
{
public:
	class ABP_EditorLight_C*                      InLight;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAlphabeticIDs_ReturnValue;             // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_1;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_2;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0088(0x0018)()
};
static_assert(alignof(WBP_LightProperties_C_Setup) == 0x000008, "Wrong alignment on WBP_LightProperties_C_Setup");
static_assert(sizeof(WBP_LightProperties_C_Setup) == 0x0000A0, "Wrong size on WBP_LightProperties_C_Setup");
static_assert(offsetof(WBP_LightProperties_C_Setup, InLight) == 0x000000, "Member 'WBP_LightProperties_C_Setup::InLight' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_LightProperties_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_LightProperties_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_LightProperties_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'WBP_LightProperties_C_Setup::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_GetTYVCGameMode_NewParam) == 0x000028, "Member 'WBP_LightProperties_C_Setup::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_GetAlphabeticIDs_ReturnValue) == 0x000030, "Member 'WBP_LightProperties_C_Setup::CallFunc_GetAlphabeticIDs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_LightProperties_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000048, "Member 'WBP_LightProperties_C_Setup::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_LightProperties_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_LightProperties_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000060, "Member 'WBP_LightProperties_C_Setup::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Conv_ByteToFloat_ReturnValue_1) == 0x000064, "Member 'WBP_LightProperties_C_Setup::CallFunc_Conv_ByteToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Conv_ByteToFloat_ReturnValue_2) == 0x000068, "Member 'WBP_LightProperties_C_Setup::CallFunc_Conv_ByteToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00006C, "Member 'WBP_LightProperties_C_Setup::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'WBP_LightProperties_C_Setup::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'WBP_LightProperties_C_Setup::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'WBP_LightProperties_C_Setup::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_LightProperties_C_Setup, CallFunc_Conv_NameToText_ReturnValue) == 0x000088, "Member 'WBP_LightProperties_C_Setup::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

}

