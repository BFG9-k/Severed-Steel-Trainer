#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EditorHelp

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function WBP_EditorHelp.WBP_EditorHelp_C.ExecuteUbergraph_WBP_EditorHelp
// 0x0020 (0x0020 - 0x0000)
struct WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EEditMode NewEditMode)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	EEditMode                                     K2Node_CustomEvent_NewEditMode;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp) == 0x000008, "Wrong alignment on WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp");
static_assert(sizeof(WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp) == 0x000020, "Wrong size on WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp");
static_assert(offsetof(WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp, EntryPoint) == 0x000000, "Member 'WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp, K2Node_CustomEvent_NewEditMode) == 0x000014, "Member 'WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp::K2Node_CustomEvent_NewEditMode' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp, CallFunc_GetTYVCGameMode_NewParam) == 0x000018, "Member 'WBP_EditorHelp_C_ExecuteUbergraph_WBP_EditorHelp::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");

// Function WBP_EditorHelp.WBP_EditorHelp_C.OnEditorModeChange_Event_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_EditorHelp_C_OnEditorModeChange_Event_0 final
{
public:
	EEditMode                                     NewEditMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditorHelp_C_OnEditorModeChange_Event_0) == 0x000001, "Wrong alignment on WBP_EditorHelp_C_OnEditorModeChange_Event_0");
static_assert(sizeof(WBP_EditorHelp_C_OnEditorModeChange_Event_0) == 0x000001, "Wrong size on WBP_EditorHelp_C_OnEditorModeChange_Event_0");
static_assert(offsetof(WBP_EditorHelp_C_OnEditorModeChange_Event_0, NewEditMode) == 0x000000, "Member 'WBP_EditorHelp_C_OnEditorModeChange_Event_0::NewEditMode' has a wrong offset!");

// Function WBP_EditorHelp.WBP_EditorHelp_C.SetForMode
// 0x0038 (0x0038 - 0x0000)
struct WBP_EditorHelp_C_SetForMode final
{
public:
	EEditMode                                     InMode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEditMode                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditorHelp_C_SetForMode) == 0x000004, "Wrong alignment on WBP_EditorHelp_C_SetForMode");
static_assert(sizeof(WBP_EditorHelp_C_SetForMode) == 0x000038, "Wrong size on WBP_EditorHelp_C_SetForMode");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, InMode) == 0x000000, "Member 'WBP_EditorHelp_C_SetForMode::InMode' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_byte_Variable) == 0x000001, "Member 'WBP_EditorHelp_C_SetForMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable) == 0x000004, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_1) == 0x000008, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_3) == 0x000010, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_4) == 0x000014, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_5) == 0x000018, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_6) == 0x00001C, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_7) == 0x000020, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_8) == 0x000024, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_9) == 0x000028, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_10) == 0x00002C, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, Temp_int_Variable_11) == 0x000030, "Member 'WBP_EditorHelp_C_SetForMode::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_EditorHelp_C_SetForMode, K2Node_Select_Default) == 0x000034, "Member 'WBP_EditorHelp_C_SetForMode::K2Node_Select_Default' has a wrong offset!");

}

