#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FocusOwner

#include "Basic.hpp"

#include "BPI_FocusOwner_classes.hpp"
#include "BPI_FocusOwner_parameters.hpp"


namespace SDK
{

// Function BPI_FocusOwner.BPI_FocusOwner_C.HasOwnerFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_FocusOwner_C::HasOwnerFocus(class UWidget* Widget, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_FocusOwner_C", "HasOwnerFocus");

	Params::BPI_FocusOwner_C_HasOwnerFocus Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPI_FocusOwner.BPI_FocusOwner_C.HasOwnerFocusForUser
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UserIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_FocusOwner_C::HasOwnerFocusForUser(class UWidget* Widget, int32 UserIndex, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_FocusOwner_C", "HasOwnerFocusForUser");

	Params::BPI_FocusOwner_C_HasOwnerFocusForUser Parms{};

	Parms.Widget = Widget;
	Parms.UserIndex = UserIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}

}

