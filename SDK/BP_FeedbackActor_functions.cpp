#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FeedbackActor

#include "Basic.hpp"

#include "BP_FeedbackActor_classes.hpp"
#include "BP_FeedbackActor_parameters.hpp"


namespace SDK
{

// Function BP_FeedbackActor.BP_FeedbackActor_C.ExecuteUbergraph_BP_FeedbackActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FeedbackActor_C::ExecuteUbergraph_BP_FeedbackActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "ExecuteUbergraph_BP_FeedbackActor");

	Params::BP_FeedbackActor_C_ExecuteUbergraph_BP_FeedbackActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeedbackActor.BP_FeedbackActor_C.SetupText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_FeedbackActor_C::SetupText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "SetupText");

	Params::BP_FeedbackActor_C_SetupText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeedbackActor.BP_FeedbackActor_C.SetupValue
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FeedbackActor_C::SetupValue(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "SetupValue");

	Params::BP_FeedbackActor_C_SetupValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeedbackActor.BP_FeedbackActor_C.SetupTexture
// (Event, Public, BlueprintEvent)
// Parameters:
// EFeedback                               ForType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FeedbackActor_C::SetupTexture(EFeedback ForType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "SetupTexture");

	Params::BP_FeedbackActor_C_SetupTexture Parms{};

	Parms.ForType = ForType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeedbackActor.BP_FeedbackActor_C.DoFade
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Stack                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FeedbackActor_C::DoFade(int32 Stack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "DoFade");

	Params::BP_FeedbackActor_C_DoFade Parms{};

	Parms.Stack = Stack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeedbackActor.BP_FeedbackActor_C.FadeTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_FeedbackActor_C::FadeTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "FadeTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FeedbackActor.BP_FeedbackActor_C.FadeTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_FeedbackActor_C::FadeTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeedbackActor_C", "FadeTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

