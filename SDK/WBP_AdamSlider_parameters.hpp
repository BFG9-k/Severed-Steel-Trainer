#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdamSlider

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_AdamSlider.WBP_AdamSlider_C.ExecuteUbergraph_WBP_AdamSlider
// 0x001C (0x001C - 0x0000)
struct WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0008(0x0008)(NoDestructor)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0014(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider) == 0x000004, "Wrong alignment on WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider");
static_assert(sizeof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider) == 0x00001C, "Wrong size on WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider");
static_assert(offsetof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider, EntryPoint) == 0x000000, "Member 'WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider, K2Node_ComponentBoundEvent_Value) == 0x000004, "Member 'WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider, K2Node_Event_InFocusEvent_1) == 0x000008, "Member 'WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider, K2Node_Event_InFocusEvent) == 0x000014, "Member 'WBP_AdamSlider_C_ExecuteUbergraph_WBP_AdamSlider::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_AdamSlider.WBP_AdamSlider_C.BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_AdamSlider_C_BndEvt__WBP_AdamSlider_Slider_41_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_AdamSlider.WBP_AdamSlider_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdamSlider_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_AdamSlider_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_AdamSlider_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_AdamSlider_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_AdamSlider_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_AdamSlider_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_AdamSlider_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_AdamSlider.WBP_AdamSlider_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdamSlider_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_AdamSlider_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_AdamSlider_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_AdamSlider_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_AdamSlider_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_AdamSlider_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_AdamSlider_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_AdamSlider.WBP_AdamSlider_C.AlterVallue
// 0x0010 (0x0010 - 0x0000)
struct WBP_AdamSlider_C_AlterVallue final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdamSlider_C_AlterVallue) == 0x000004, "Wrong alignment on WBP_AdamSlider_C_AlterVallue");
static_assert(sizeof(WBP_AdamSlider_C_AlterVallue) == 0x000010, "Wrong size on WBP_AdamSlider_C_AlterVallue");
static_assert(offsetof(WBP_AdamSlider_C_AlterVallue, Delta) == 0x000000, "Member 'WBP_AdamSlider_C_AlterVallue::Delta' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_AlterVallue, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'WBP_AdamSlider_C_AlterVallue::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_AlterVallue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_AdamSlider_C_AlterVallue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamSlider_C_AlterVallue, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'WBP_AdamSlider_C_AlterVallue::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}

