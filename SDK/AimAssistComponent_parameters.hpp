#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AimAssistComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TargetStructure_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AimAssistComponent.AimAssistComponent_C.ExecuteUbergraph_AimAssistComponent
// 0x0040 (0x0040 - 0x0000)
struct AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ADebugHUD_C*                            K2Node_DynamicCast_AsDebug_HUD;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent) == 0x000008, "Wrong alignment on AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent");
static_assert(sizeof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent) == 0x000040, "Wrong size on AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, EntryPoint) == 0x000000, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, K2Node_DynamicCast_AsDebug_HUD) == 0x000030, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::K2Node_DynamicCast_AsDebug_HUD' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'AimAssistComponent_C_ExecuteUbergraph_AimAssistComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AimAssistComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on AimAssistComponent_C_ReceiveTick");
static_assert(sizeof(AimAssistComponent_C_ReceiveTick) == 0x000004, "Wrong size on AimAssistComponent_C_ReceiveTick");
static_assert(offsetof(AimAssistComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AimAssistComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.LegacyFrictionAssist
// 0x0038 (0x0038 - 0x0000)
struct AimAssistComponent_C_LegacyFrictionAssist final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_LegacyFrictionAssist) == 0x000004, "Wrong alignment on AimAssistComponent_C_LegacyFrictionAssist");
static_assert(sizeof(AimAssistComponent_C_LegacyFrictionAssist) == 0x000038, "Wrong size on AimAssistComponent_C_LegacyFrictionAssist");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, Input) == 0x000000, "Member 'AimAssistComponent_C_LegacyFrictionAssist::Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, Output) == 0x000004, "Member 'AimAssistComponent_C_LegacyFrictionAssist::Output' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000014, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00001C, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_VSize2DSquared_ReturnValue) == 0x000024, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_LegacyFrictionAssist, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'AimAssistComponent_C_LegacyFrictionAssist::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.GetClosestActorToCrosshairFromArray
// 0x00B8 (0x00B8 - 0x0000)
struct AimAssistComponent_C_GetClosestActorToCrosshairFromArray final
{
public:
	TArray<class AActor*>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShortestLength;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray) == 0x000008, "Wrong alignment on AimAssistComponent_C_GetClosestActorToCrosshairFromArray");
static_assert(sizeof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray) == 0x0000B8, "Wrong size on AimAssistComponent_C_GetClosestActorToCrosshairFromArray");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, Array) == 0x000000, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::Array' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, Actor) == 0x000010, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::Actor' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, ShortestLength) == 0x000018, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::ShortestLength' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, Target) == 0x000020, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::Target' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Array_Get_Item) == 0x000030, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_ActorHasTag_ReturnValue) == 0x000048, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_ActorHasTag_ReturnValue_1) == 0x000049, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000050, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_GetCameraLocation_ReturnValue) == 0x000058, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000068, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_GetCameraRotation_ReturnValue) == 0x00007C, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_GetForwardVector_ReturnValue) == 0x000094, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000A4, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_FClamp_ReturnValue) == 0x0000A8, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000AD, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetClosestActorToCrosshairFromArray, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'AimAssistComponent_C_GetClosestActorToCrosshairFromArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.FindTarget
// 0x0048 (0x0048 - 0x0000)
struct AimAssistComponent_C_FindTarget final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetStructure                       CallFunc_Array_Get_Item;                           // 0x0010(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(AimAssistComponent_C_FindTarget) == 0x000008, "Wrong alignment on AimAssistComponent_C_FindTarget");
static_assert(sizeof(AimAssistComponent_C_FindTarget) == 0x000048, "Wrong size on AimAssistComponent_C_FindTarget");
static_assert(offsetof(AimAssistComponent_C_FindTarget, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AimAssistComponent_C_FindTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_FindTarget, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AimAssistComponent_C_FindTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_FindTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_FindTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_FindTarget, CallFunc_Array_Get_Item) == 0x000010, "Member 'AimAssistComponent_C_FindTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_FindTarget, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_FindTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_FindTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'AimAssistComponent_C_FindTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_FindTarget, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'AimAssistComponent_C_FindTarget::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.CalculateTurnSpeed
// 0x008C (0x008C - 0x0000)
struct AimAssistComponent_C_CalculateTurnSpeed final
{
public:
	float                                         InputX;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputY;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutputX;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutputY;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccelerationAngle_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue_1;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_CalculateTurnSpeed) == 0x000004, "Wrong alignment on AimAssistComponent_C_CalculateTurnSpeed");
static_assert(sizeof(AimAssistComponent_C_CalculateTurnSpeed) == 0x00008C, "Wrong size on AimAssistComponent_C_CalculateTurnSpeed");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, InputX) == 0x000000, "Member 'AimAssistComponent_C_CalculateTurnSpeed::InputX' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, InputY) == 0x000004, "Member 'AimAssistComponent_C_CalculateTurnSpeed::InputY' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, OutputX) == 0x000008, "Member 'AimAssistComponent_C_CalculateTurnSpeed::OutputX' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, OutputY) == 0x00000C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::OutputY' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_VSize2D_ReturnValue) == 0x000018, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_DotProduct2D_ReturnValue) == 0x00001C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000024, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, Temp_bool_Variable) == 0x000028, "Member 'AimAssistComponent_C_CalculateTurnSpeed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x00002C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GetFloatValue_ReturnValue) == 0x00003C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000040, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GetAccelerationAngle_ReturnValue) == 0x000044, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GetAccelerationAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000050, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, Temp_bool_Variable_1) == 0x000054, "Member 'AimAssistComponent_C_CalculateTurnSpeed::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Less_FloatFloat_ReturnValue) == 0x000055, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GetGlobalTimeDilation_ReturnValue_1) == 0x000058, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GetGlobalTimeDilation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000060, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, K2Node_Select_Default) == 0x000064, "Member 'AimAssistComponent_C_CalculateTurnSpeed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000068, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_BooleanAND_ReturnValue_1) == 0x000071, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_SelectFloat_ReturnValue) == 0x000074, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_FClamp_ReturnValue_1) == 0x000078, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00007C, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000080, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000084, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateTurnSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000088, "Member 'AimAssistComponent_C_CalculateTurnSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.RadialDeadZone
// 0x0050 (0x0050 - 0x0000)
struct AimAssistComponent_C_RadialDeadZone final
{
public:
	float                                         X_Input;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Input;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeadZone;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output_X;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output_Y;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StickInput;                                        // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_RadialDeadZone) == 0x000004, "Wrong alignment on AimAssistComponent_C_RadialDeadZone");
static_assert(sizeof(AimAssistComponent_C_RadialDeadZone) == 0x000050, "Wrong size on AimAssistComponent_C_RadialDeadZone");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, X_Input) == 0x000000, "Member 'AimAssistComponent_C_RadialDeadZone::X_Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, Y_Input) == 0x000004, "Member 'AimAssistComponent_C_RadialDeadZone::Y_Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, DeadZone) == 0x000008, "Member 'AimAssistComponent_C_RadialDeadZone::DeadZone' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, Output_X) == 0x00000C, "Member 'AimAssistComponent_C_RadialDeadZone::Output_X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, Output_Y) == 0x000010, "Member 'AimAssistComponent_C_RadialDeadZone::Output_Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, StickInput) == 0x000014, "Member 'AimAssistComponent_C_RadialDeadZone::StickInput' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_BreakVector2D_X) == 0x000020, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_Normal2D_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_VSize2D_ReturnValue) == 0x000038, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_RadialDeadZone, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000048, "Member 'AimAssistComponent_C_RadialDeadZone::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.AxialDeadZone
// 0x0078 (0x0078 - 0x0000)
struct AimAssistComponent_C_AxialDeadZone final
{
public:
	float                                         X_Input;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Input;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Deadzone;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Deadzone;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output_X;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output_Y;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StickInput;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_AxialDeadZone) == 0x000004, "Wrong alignment on AimAssistComponent_C_AxialDeadZone");
static_assert(sizeof(AimAssistComponent_C_AxialDeadZone) == 0x000078, "Wrong size on AimAssistComponent_C_AxialDeadZone");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, X_Input) == 0x000000, "Member 'AimAssistComponent_C_AxialDeadZone::X_Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, Y_Input) == 0x000004, "Member 'AimAssistComponent_C_AxialDeadZone::Y_Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, X_Deadzone) == 0x000008, "Member 'AimAssistComponent_C_AxialDeadZone::X_Deadzone' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, Y_Deadzone) == 0x00000C, "Member 'AimAssistComponent_C_AxialDeadZone::Y_Deadzone' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, Output_X) == 0x000010, "Member 'AimAssistComponent_C_AxialDeadZone::Output_X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, Output_Y) == 0x000014, "Member 'AimAssistComponent_C_AxialDeadZone::Output_Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, StickInput) == 0x000018, "Member 'AimAssistComponent_C_AxialDeadZone::StickInput' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_X) == 0x000028, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_Y_1) == 0x00003C, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_MakeVector2D_ReturnValue_1) == 0x000040, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_X_2) == 0x000048, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_Y_2) == 0x00004C, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_X_3) == 0x000050, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_Y_3) == 0x000054, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_X_4) == 0x000058, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_Y_4) == 0x00005C, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_Abs_ReturnValue_1) == 0x000060, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_X_5) == 0x000064, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_BreakVector2D_Y_5) == 0x000068, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_AxialDeadZone, CallFunc_MakeVector2D_ReturnValue_2) == 0x000070, "Member 'AimAssistComponent_C_AxialDeadZone::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.Centering
// 0x0228 (0x0228 - 0x0000)
struct AimAssistComponent_C_Centering final
{
public:
	float                                         X_Input;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Input;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Output;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Output;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_1;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_2;          // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateDeltaRotation_Delta_X;           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateDeltaRotation_Delta_Y;           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x1];                                      // 0x0213(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AimAssistComponent_C_Centering) == 0x000008, "Wrong alignment on AimAssistComponent_C_Centering");
static_assert(sizeof(AimAssistComponent_C_Centering) == 0x000228, "Wrong size on AimAssistComponent_C_Centering");
static_assert(offsetof(AimAssistComponent_C_Centering, X_Input) == 0x000000, "Member 'AimAssistComponent_C_Centering::X_Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, Y_Input) == 0x000004, "Member 'AimAssistComponent_C_Centering::Y_Input' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, X_Output) == 0x000008, "Member 'AimAssistComponent_C_Centering::X_Output' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, Y_Output) == 0x00000C, "Member 'AimAssistComponent_C_Centering::Y_Output' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, TargetLocation) == 0x000010, "Member 'AimAssistComponent_C_Centering::TargetLocation' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, Y) == 0x00001C, "Member 'AimAssistComponent_C_Centering::Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, X) == 0x000020, "Member 'AimAssistComponent_C_Centering::X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, Temp_bool_Variable) == 0x000024, "Member 'AimAssistComponent_C_Centering::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_VSizeSquared_ReturnValue) == 0x000028, "Member 'AimAssistComponent_C_Centering::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_Centering::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_VSizeSquared_ReturnValue_1) == 0x000034, "Member 'AimAssistComponent_C_Centering::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'AimAssistComponent_C_Centering::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'AimAssistComponent_C_Centering::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'AimAssistComponent_C_Centering::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetSocketLocation_ReturnValue) == 0x000040, "Member 'AimAssistComponent_C_Centering::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000050, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, K2Node_Select_Default) == 0x000054, "Member 'AimAssistComponent_C_Centering::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, Temp_bool_Variable_1) == 0x000058, "Member 'AimAssistComponent_C_Centering::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00005C, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000060, "Member 'AimAssistComponent_C_Centering::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000068, "Member 'AimAssistComponent_C_Centering::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetCameraRotation_ReturnValue) == 0x000070, "Member 'AimAssistComponent_C_Centering::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetCameraRotation_ReturnValue_1) == 0x00007C, "Member 'AimAssistComponent_C_Centering::CallFunc_GetCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetForwardVector_ReturnValue) == 0x000088, "Member 'AimAssistComponent_C_Centering::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetCameraLocation_ReturnValue) == 0x000094, "Member 'AimAssistComponent_C_Centering::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'AimAssistComponent_C_Centering::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000AC, "Member 'AimAssistComponent_C_Centering::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Normal_ReturnValue) == 0x0000B8, "Member 'AimAssistComponent_C_Centering::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_SelectVector_ReturnValue) == 0x0000C4, "Member 'AimAssistComponent_C_Centering::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000D0, "Member 'AimAssistComponent_C_Centering::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_FClamp_ReturnValue) == 0x0000D4, "Member 'AimAssistComponent_C_Centering::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'AimAssistComponent_C_Centering::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000DC, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetPlayerController_ReturnValue) == 0x0000E0, "Member 'AimAssistComponent_C_Centering::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'AimAssistComponent_C_Centering::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0000F0, "Member 'AimAssistComponent_C_Centering::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0000F8, "Member 'AimAssistComponent_C_Centering::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Normal2D_ReturnValue) == 0x0000FC, "Member 'AimAssistComponent_C_Centering::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetViewportSize_ReturnValue) == 0x000104, "Member 'AimAssistComponent_C_Centering::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00010C, "Member 'AimAssistComponent_C_Centering::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, Temp_bool_Variable_2) == 0x000114, "Member 'AimAssistComponent_C_Centering::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000118, "Member 'AimAssistComponent_C_Centering::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Normal2D_ReturnValue_1) == 0x000120, "Member 'AimAssistComponent_C_Centering::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, K2Node_Select_Default_1) == 0x000128, "Member 'AimAssistComponent_C_Centering::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_DotProduct2D_ReturnValue) == 0x00012C, "Member 'AimAssistComponent_C_Centering::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_SelectFloat_ReturnValue) == 0x000130, "Member 'AimAssistComponent_C_Centering::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_FClamp_ReturnValue_1) == 0x000134, "Member 'AimAssistComponent_C_Centering::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000138, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Add_FloatFloat_ReturnValue) == 0x00013C, "Member 'AimAssistComponent_C_Centering::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_SelectFloat_ReturnValue_1) == 0x000140, "Member 'AimAssistComponent_C_Centering::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000144, "Member 'AimAssistComponent_C_Centering::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetVelocity_ReturnValue) == 0x000148, "Member 'AimAssistComponent_C_Centering::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Normal_ReturnValue_1) == 0x000154, "Member 'AimAssistComponent_C_Centering::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_VSize_ReturnValue) == 0x000160, "Member 'AimAssistComponent_C_Centering::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000168, "Member 'AimAssistComponent_C_Centering::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_SelectFloat_ReturnValue_2) == 0x000170, "Member 'AimAssistComponent_C_Centering::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetCameraRotation_ReturnValue_2) == 0x000174, "Member 'AimAssistComponent_C_Centering::CallFunc_GetCameraRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000180, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetForwardVector_ReturnValue_1) == 0x000184, "Member 'AimAssistComponent_C_Centering::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000190, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000194, "Member 'AimAssistComponent_C_Centering::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0001A0, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_CalculateDeltaRotation_Delta_X) == 0x0001A4, "Member 'AimAssistComponent_C_Centering::CallFunc_CalculateDeltaRotation_Delta_X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_CalculateDeltaRotation_Delta_Y) == 0x0001A8, "Member 'AimAssistComponent_C_Centering::CallFunc_CalculateDeltaRotation_Delta_Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0001AC, "Member 'AimAssistComponent_C_Centering::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Lerp_ReturnValue) == 0x0001B0, "Member 'AimAssistComponent_C_Centering::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001B4, "Member 'AimAssistComponent_C_Centering::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_FClamp_ReturnValue_2) == 0x0001B8, "Member 'AimAssistComponent_C_Centering::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Lerp_ReturnValue_1) == 0x0001BC, "Member 'AimAssistComponent_C_Centering::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001C0, "Member 'AimAssistComponent_C_Centering::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_FClamp_ReturnValue_3) == 0x0001C4, "Member 'AimAssistComponent_C_Centering::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Lerp_ReturnValue_2) == 0x0001C8, "Member 'AimAssistComponent_C_Centering::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_FClamp_ReturnValue_4) == 0x0001CC, "Member 'AimAssistComponent_C_Centering::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'AimAssistComponent_C_Centering::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0001DC, "Member 'AimAssistComponent_C_Centering::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Normal_ReturnValue_2) == 0x0001E0, "Member 'AimAssistComponent_C_Centering::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_FClamp_ReturnValue_5) == 0x0001EC, "Member 'AimAssistComponent_C_Centering::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0001F0, "Member 'AimAssistComponent_C_Centering::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0001F4, "Member 'AimAssistComponent_C_Centering::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Normal_ReturnValue_3) == 0x000200, "Member 'AimAssistComponent_C_Centering::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x00020C, "Member 'AimAssistComponent_C_Centering::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000210, "Member 'AimAssistComponent_C_Centering::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_BooleanAND_ReturnValue_1) == 0x000211, "Member 'AimAssistComponent_C_Centering::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_BooleanAND_ReturnValue_2) == 0x000212, "Member 'AimAssistComponent_C_Centering::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_SelectVector_ReturnValue_1) == 0x000214, "Member 'AimAssistComponent_C_Centering::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Centering, CallFunc_IsValid_ReturnValue_1) == 0x000220, "Member 'AimAssistComponent_C_Centering::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.UpdateCurrentTarget
// 0x0040 (0x0040 - 0x0000)
struct AimAssistComponent_C_UpdateCurrentTarget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetClosestActorToCrosshairFromArray_Actor; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AimAssistComponent_C_UpdateCurrentTarget) == 0x000008, "Wrong alignment on AimAssistComponent_C_UpdateCurrentTarget");
static_assert(sizeof(AimAssistComponent_C_UpdateCurrentTarget) == 0x000040, "Wrong size on AimAssistComponent_C_UpdateCurrentTarget");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'AimAssistComponent_C_UpdateCurrentTarget::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AimAssistComponent_C_UpdateCurrentTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000024, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x00002C, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_GetClosestActorToCrosshairFromArray_Actor) == 0x000030, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_GetClosestActorToCrosshairFromArray_Actor' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_UpdateCurrentTarget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00003C, "Member 'AimAssistComponent_C_UpdateCurrentTarget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.CalculateDeltaRotation
// 0x0060 (0x0060 - 0x0000)
struct AimAssistComponent_C_CalculateDeltaRotation final
{
public:
	struct FVector                                Current_Location;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Location;                                   // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Current_Rotation;                                  // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Delta_X;                                           // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Y;                                           // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_CalculateDeltaRotation) == 0x000004, "Wrong alignment on AimAssistComponent_C_CalculateDeltaRotation");
static_assert(sizeof(AimAssistComponent_C_CalculateDeltaRotation) == 0x000060, "Wrong size on AimAssistComponent_C_CalculateDeltaRotation");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, Current_Location) == 0x000000, "Member 'AimAssistComponent_C_CalculateDeltaRotation::Current_Location' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, Target_Location) == 0x00000C, "Member 'AimAssistComponent_C_CalculateDeltaRotation::Target_Location' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, Current_Rotation) == 0x000018, "Member 'AimAssistComponent_C_CalculateDeltaRotation::Current_Rotation' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, Delta_X) == 0x000024, "Member 'AimAssistComponent_C_CalculateDeltaRotation::Delta_X' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, Delta_Y) == 0x000028, "Member 'AimAssistComponent_C_CalculateDeltaRotation::Delta_Y' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x00002C, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_BreakRotator_Roll_1) == 0x000044, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_BreakRotator_Pitch_1) == 0x000048, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_BreakRotator_Yaw_1) == 0x00004C, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_NormalizeAxis_ReturnValue) == 0x000058, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_CalculateDeltaRotation, CallFunc_NormalizeAxis_ReturnValue_1) == 0x00005C, "Member 'AimAssistComponent_C_CalculateDeltaRotation::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.BendProjectile
// 0x0158 (0x0158 - 0x0000)
struct AimAssistComponent_C_BendProjectile final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CorrectedEnd;                                      // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AimAssistComponent_C_BendProjectile) == 0x000008, "Wrong alignment on AimAssistComponent_C_BendProjectile");
static_assert(sizeof(AimAssistComponent_C_BendProjectile) == 0x000158, "Wrong size on AimAssistComponent_C_BendProjectile");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, Start) == 0x000000, "Member 'AimAssistComponent_C_BendProjectile::Start' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, End) == 0x00000C, "Member 'AimAssistComponent_C_BendProjectile::End' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CorrectedEnd) == 0x000018, "Member 'AimAssistComponent_C_BendProjectile::CorrectedEnd' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, EndLocation) == 0x000024, "Member 'AimAssistComponent_C_BendProjectile::EndLocation' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_VSizeSquared_ReturnValue) == 0x000040, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000060, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetCameraRotation_ReturnValue) == 0x00006C, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetCameraLocation_ReturnValue) == 0x000078, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetForwardVector_ReturnValue) == 0x000084, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetSocketLocation_ReturnValue) == 0x00009C, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Normal_ReturnValue) == 0x0000A8, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_SelectVector_ReturnValue) == 0x0000B4, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C0, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000C4, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Normal_ReturnValue_1) == 0x0000D0, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000DC, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E1, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E2, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetPlayerController_ReturnValue) == 0x0000E8, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_SelectVector_ReturnValue_1) == 0x0000F0, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0000FC, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000104, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000108, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_GetViewportSize_ReturnValue) == 0x000114, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Normal_ReturnValue_2) == 0x00011C, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000128, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000130, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00013C, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Add_VectorVector_ReturnValue) == 0x000144, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_VSize2D_ReturnValue) == 0x000150, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_BendProjectile, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000154, "Member 'AimAssistComponent_C_BendProjectile::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.ShotFiredAssist
// 0x0010 (0x0010 - 0x0000)
struct AimAssistComponent_C_ShotFiredAssist final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_ShotFiredAssist) == 0x000008, "Wrong alignment on AimAssistComponent_C_ShotFiredAssist");
static_assert(sizeof(AimAssistComponent_C_ShotFiredAssist) == 0x000010, "Wrong size on AimAssistComponent_C_ShotFiredAssist");
static_assert(offsetof(AimAssistComponent_C_ShotFiredAssist, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AimAssistComponent_C_ShotFiredAssist::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_ShotFiredAssist, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_ShotFiredAssist::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.HandleDifferentTargetsSlowDownCalculation
// 0x0040 (0x0040 - 0x0000)
struct AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation final
{
public:
	class UObject*                                ClosestActorToCrosshair;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue_1;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation) == 0x000008, "Wrong alignment on AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation");
static_assert(sizeof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation) == 0x000040, "Wrong size on AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, ClosestActorToCrosshair) == 0x000000, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::ClosestActorToCrosshair' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000010, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_GetGameTimeSinceCreation_ReturnValue_1) == 0x000024, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_GetGameTimeSinceCreation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000034, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation, CallFunc_FClamp_ReturnValue_1) == 0x00003C, "Member 'AimAssistComponent_C_HandleDifferentTargetsSlowDownCalculation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.HandleShotFiredStrengthBonus
// 0x0020 (0x0020 - 0x0000)
struct AimAssistComponent_C_HandleShotFiredStrengthBonus final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_HandleShotFiredStrengthBonus) == 0x000008, "Wrong alignment on AimAssistComponent_C_HandleShotFiredStrengthBonus");
static_assert(sizeof(AimAssistComponent_C_HandleShotFiredStrengthBonus) == 0x000020, "Wrong size on AimAssistComponent_C_HandleShotFiredStrengthBonus");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HandleShotFiredStrengthBonus, CallFunc_Lerp_ReturnValue) == 0x00001C, "Member 'AimAssistComponent_C_HandleShotFiredStrengthBonus::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.Debug
// 0x0020 (0x0020 - 0x0000)
struct AimAssistComponent_C_Debug final
{
public:
	struct FVector2D                              Raw_Direction;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Deadzone_Direction;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Assisted_Direction;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_Debug) == 0x000004, "Wrong alignment on AimAssistComponent_C_Debug");
static_assert(sizeof(AimAssistComponent_C_Debug) == 0x000020, "Wrong size on AimAssistComponent_C_Debug");
static_assert(offsetof(AimAssistComponent_C_Debug, Raw_Direction) == 0x000000, "Member 'AimAssistComponent_C_Debug::Raw_Direction' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Debug, Deadzone_Direction) == 0x000008, "Member 'AimAssistComponent_C_Debug::Deadzone_Direction' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Debug, Assisted_Direction) == 0x000010, "Member 'AimAssistComponent_C_Debug::Assisted_Direction' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_Debug, CallFunc_Normal2D_ReturnValue) == 0x000018, "Member 'AimAssistComponent_C_Debug::CallFunc_Normal2D_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.HitTarget?
// 0x0010 (0x0010 - 0x0000)
struct AimAssistComponent_C_HitTarget_ final
{
public:
	class AActor*                                 HitActorFromTrace;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTarget;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AimAssistComponent_C_HitTarget_) == 0x000008, "Wrong alignment on AimAssistComponent_C_HitTarget_");
static_assert(sizeof(AimAssistComponent_C_HitTarget_) == 0x000010, "Wrong size on AimAssistComponent_C_HitTarget_");
static_assert(offsetof(AimAssistComponent_C_HitTarget_, HitActorFromTrace) == 0x000000, "Member 'AimAssistComponent_C_HitTarget_::HitActorFromTrace' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HitTarget_, IsTarget) == 0x000008, "Member 'AimAssistComponent_C_HitTarget_::IsTarget' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_HitTarget_, CallFunc_Array_Contains_ReturnValue) == 0x000009, "Member 'AimAssistComponent_C_HitTarget_::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AimAssistComponent.AimAssistComponent_C.GetAccelerationAngle
// 0x000C (0x000C - 0x0000)
struct AimAssistComponent_C_GetAccelerationAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AimAssistComponent_C_GetAccelerationAngle) == 0x000004, "Wrong alignment on AimAssistComponent_C_GetAccelerationAngle");
static_assert(sizeof(AimAssistComponent_C_GetAccelerationAngle) == 0x00000C, "Wrong size on AimAssistComponent_C_GetAccelerationAngle");
static_assert(offsetof(AimAssistComponent_C_GetAccelerationAngle, ReturnValue) == 0x000000, "Member 'AimAssistComponent_C_GetAccelerationAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetAccelerationAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'AimAssistComponent_C_GetAccelerationAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AimAssistComponent_C_GetAccelerationAngle, CallFunc_DegCos_ReturnValue) == 0x000008, "Member 'AimAssistComponent_C_GetAccelerationAngle::CallFunc_DegCos_ReturnValue' has a wrong offset!");

}

