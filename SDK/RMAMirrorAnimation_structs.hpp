#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RMAMirrorAnimation

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum RMAMirrorAnimation.ERMAMirrorAnimationAxisWithNull
// NumValues: 0x0005
enum class ERMAMirrorAnimationAxisWithNull : uint8
{
	AxisNull                                 = 0,
	AxisX                                    = 1,
	AxisY                                    = 2,
	AxisZ                                    = 3,
	ERMAMirrorAnimationAxisWithNull_MAX      = 4,
};

// Enum RMAMirrorAnimation.ERMAMirrorAnimationAxis
// NumValues: 0x0004
enum class ERMAMirrorAnimationAxis : uint8
{
	AxisX                                    = 0,
	AxisY                                    = 1,
	AxisZ                                    = 2,
	ERMAMirrorAnimationAxis_MAX              = 3,
};

// ScriptStruct RMAMirrorAnimation.RMAMirrorAnimationAnimNodeMirrorAnimation
// 0x0020 (0x0030 - 0x0010)
struct FRMAMirrorAnimationAnimNodeMirrorAnimation final : public FAnimNode_Base
{
public:
	struct FPoseLink                              InputPose;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Enabled;                                           // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URMAMirrorAnimationMirrorTable*         MirrorTable;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRMAMirrorAnimationAnimNodeMirrorAnimation) == 0x000008, "Wrong alignment on FRMAMirrorAnimationAnimNodeMirrorAnimation");
static_assert(sizeof(FRMAMirrorAnimationAnimNodeMirrorAnimation) == 0x000030, "Wrong size on FRMAMirrorAnimationAnimNodeMirrorAnimation");
static_assert(offsetof(FRMAMirrorAnimationAnimNodeMirrorAnimation, InputPose) == 0x000010, "Member 'FRMAMirrorAnimationAnimNodeMirrorAnimation::InputPose' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationAnimNodeMirrorAnimation, Enabled) == 0x000020, "Member 'FRMAMirrorAnimationAnimNodeMirrorAnimation::Enabled' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationAnimNodeMirrorAnimation, MirrorTable) == 0x000028, "Member 'FRMAMirrorAnimationAnimNodeMirrorAnimation::MirrorTable' has a wrong offset!");

// ScriptStruct RMAMirrorAnimation.RMAMirrorAnimationDoubleBoneConfig
// 0x0014 (0x0014 - 0x0000)
struct FRMAMirrorAnimationDoubleBoneConfig final
{
public:
	class FName                                   BoneAName;                                         // 0x0000(0x0008)(Edit, EditFixedSize, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneBName;                                         // 0x0008(0x0008)(Edit, EditFixedSize, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERMAMirrorAnimationAxisWithNull               LocationMirrorAxis;                                // 0x0010(0x0001)(Edit, EditFixedSize, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERMAMirrorAnimationAxisWithNull               RotationMirrorAxis;                                // 0x0011(0x0001)(Edit, EditFixedSize, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRMAMirrorAnimationDoubleBoneConfig) == 0x000004, "Wrong alignment on FRMAMirrorAnimationDoubleBoneConfig");
static_assert(sizeof(FRMAMirrorAnimationDoubleBoneConfig) == 0x000014, "Wrong size on FRMAMirrorAnimationDoubleBoneConfig");
static_assert(offsetof(FRMAMirrorAnimationDoubleBoneConfig, BoneAName) == 0x000000, "Member 'FRMAMirrorAnimationDoubleBoneConfig::BoneAName' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationDoubleBoneConfig, BoneBName) == 0x000008, "Member 'FRMAMirrorAnimationDoubleBoneConfig::BoneBName' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationDoubleBoneConfig, LocationMirrorAxis) == 0x000010, "Member 'FRMAMirrorAnimationDoubleBoneConfig::LocationMirrorAxis' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationDoubleBoneConfig, RotationMirrorAxis) == 0x000011, "Member 'FRMAMirrorAnimationDoubleBoneConfig::RotationMirrorAxis' has a wrong offset!");

// ScriptStruct RMAMirrorAnimation.RMAMirrorAnimationSingleBoneConfig
// 0x000C (0x000C - 0x0000)
struct FRMAMirrorAnimationSingleBoneConfig final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(Edit, EditFixedSize, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERMAMirrorAnimationAxis                       MirrorAxis;                                        // 0x0008(0x0001)(Edit, EditFixedSize, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRMAMirrorAnimationSingleBoneConfig) == 0x000004, "Wrong alignment on FRMAMirrorAnimationSingleBoneConfig");
static_assert(sizeof(FRMAMirrorAnimationSingleBoneConfig) == 0x00000C, "Wrong size on FRMAMirrorAnimationSingleBoneConfig");
static_assert(offsetof(FRMAMirrorAnimationSingleBoneConfig, BoneName) == 0x000000, "Member 'FRMAMirrorAnimationSingleBoneConfig::BoneName' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationSingleBoneConfig, MirrorAxis) == 0x000008, "Member 'FRMAMirrorAnimationSingleBoneConfig::MirrorAxis' has a wrong offset!");

// ScriptStruct RMAMirrorAnimation.RMAMirrorAnimationBoneKeyword
// 0x0020 (0x0020 - 0x0000)
struct FRMAMirrorAnimationBoneKeyword final
{
public:
	class FString                                 KeywordA;                                          // 0x0000(0x0010)(Edit, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 KeywordB;                                          // 0x0010(0x0010)(Edit, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRMAMirrorAnimationBoneKeyword) == 0x000008, "Wrong alignment on FRMAMirrorAnimationBoneKeyword");
static_assert(sizeof(FRMAMirrorAnimationBoneKeyword) == 0x000020, "Wrong size on FRMAMirrorAnimationBoneKeyword");
static_assert(offsetof(FRMAMirrorAnimationBoneKeyword, KeywordA) == 0x000000, "Member 'FRMAMirrorAnimationBoneKeyword::KeywordA' has a wrong offset!");
static_assert(offsetof(FRMAMirrorAnimationBoneKeyword, KeywordB) == 0x000010, "Member 'FRMAMirrorAnimationBoneKeyword::KeywordB' has a wrong offset!");

}

