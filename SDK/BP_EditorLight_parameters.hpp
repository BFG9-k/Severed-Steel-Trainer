#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EditorLight

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function BP_EditorLight.BP_EditorLight_C.ExecuteUbergraph_BP_EditorLight
// 0x0008 (0x0008 - 0x0000)
struct BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActionType                                   K2Node_Event_ToDo;                                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSimulated;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight) == 0x000004, "Wrong alignment on BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight");
static_assert(sizeof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight) == 0x000008, "Wrong size on BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight");
static_assert(offsetof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight, EntryPoint) == 0x000000, "Member 'BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight, K2Node_Event_ToDo) == 0x000004, "Member 'BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight::K2Node_Event_ToDo' has a wrong offset!");
static_assert(offsetof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight, K2Node_Event_bSimulated) == 0x000005, "Member 'BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight::K2Node_Event_bSimulated' has a wrong offset!");
static_assert(offsetof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight, K2Node_Event_bIsSelected) == 0x000007, "Member 'BP_EditorLight_C_ExecuteUbergraph_BP_EditorLight::K2Node_Event_bIsSelected' has a wrong offset!");

// Function BP_EditorLight.BP_EditorLight_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct BP_EditorLight_C_SetSelected final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EditorLight_C_SetSelected) == 0x000001, "Wrong alignment on BP_EditorLight_C_SetSelected");
static_assert(sizeof(BP_EditorLight_C_SetSelected) == 0x000001, "Wrong size on BP_EditorLight_C_SetSelected");
static_assert(offsetof(BP_EditorLight_C_SetSelected, bIsSelected) == 0x000000, "Member 'BP_EditorLight_C_SetSelected::bIsSelected' has a wrong offset!");

// Function BP_EditorLight.BP_EditorLight_C.DoActions
// 0x0002 (0x0002 - 0x0000)
struct BP_EditorLight_C_DoActions final
{
public:
	EActionType                                   ToDo;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulated;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EditorLight_C_DoActions) == 0x000001, "Wrong alignment on BP_EditorLight_C_DoActions");
static_assert(sizeof(BP_EditorLight_C_DoActions) == 0x000002, "Wrong size on BP_EditorLight_C_DoActions");
static_assert(offsetof(BP_EditorLight_C_DoActions, ToDo) == 0x000000, "Member 'BP_EditorLight_C_DoActions::ToDo' has a wrong offset!");
static_assert(offsetof(BP_EditorLight_C_DoActions, bSimulated) == 0x000001, "Member 'BP_EditorLight_C_DoActions::bSimulated' has a wrong offset!");

// Function BP_EditorLight.BP_EditorLight_C.GetActions
// 0x0020 (0x0020 - 0x0000)
struct BP_EditorLight_C_GetActions final
{
public:
	TArray<EActionType>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EActionType>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EditorLight_C_GetActions) == 0x000008, "Wrong alignment on BP_EditorLight_C_GetActions");
static_assert(sizeof(BP_EditorLight_C_GetActions) == 0x000020, "Wrong size on BP_EditorLight_C_GetActions");
static_assert(offsetof(BP_EditorLight_C_GetActions, ReturnValue) == 0x000000, "Member 'BP_EditorLight_C_GetActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EditorLight_C_GetActions, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_EditorLight_C_GetActions::K2Node_MakeArray_Array' has a wrong offset!");

}

