#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Feedback

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Feedback.WBP_Feedback_C.ExecuteUbergraph_WBP_Feedback
// 0x0008 (0x0008 - 0x0000)
struct WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback) == 0x000004, "Wrong alignment on WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback");
static_assert(sizeof(WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback) == 0x000008, "Wrong size on WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback");
static_assert(offsetof(WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback, EntryPoint) == 0x000000, "Member 'WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Feedback_C_ExecuteUbergraph_WBP_Feedback::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Feedback.WBP_Feedback_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Feedback_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Feedback_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Feedback_C_PreConstruct");
static_assert(sizeof(WBP_Feedback_C_PreConstruct) == 0x000001, "Wrong size on WBP_Feedback_C_PreConstruct");
static_assert(offsetof(WBP_Feedback_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Feedback_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Feedback.WBP_Feedback_C.SetupDynMat
// 0x0010 (0x0010 - 0x0000)
struct WBP_Feedback_C_SetupDynMat final
{
public:
	class UMaterialInterface*                     InMat;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Feedback_C_SetupDynMat) == 0x000008, "Wrong alignment on WBP_Feedback_C_SetupDynMat");
static_assert(sizeof(WBP_Feedback_C_SetupDynMat) == 0x000010, "Wrong size on WBP_Feedback_C_SetupDynMat");
static_assert(offsetof(WBP_Feedback_C_SetupDynMat, InMat) == 0x000000, "Member 'WBP_Feedback_C_SetupDynMat::InMat' has a wrong offset!");
static_assert(offsetof(WBP_Feedback_C_SetupDynMat, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_Feedback_C_SetupDynMat::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_Feedback.WBP_Feedback_C.SetupAsPoints
// 0x0020 (0x0020 - 0x0000)
struct WBP_Feedback_C_SetupAsPoints final
{
public:
	int32                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_Feedback_C_SetupAsPoints) == 0x000008, "Wrong alignment on WBP_Feedback_C_SetupAsPoints");
static_assert(sizeof(WBP_Feedback_C_SetupAsPoints) == 0x000020, "Wrong size on WBP_Feedback_C_SetupAsPoints");
static_assert(offsetof(WBP_Feedback_C_SetupAsPoints, Points) == 0x000000, "Member 'WBP_Feedback_C_SetupAsPoints::Points' has a wrong offset!");
static_assert(offsetof(WBP_Feedback_C_SetupAsPoints, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Feedback_C_SetupAsPoints::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Feedback.WBP_Feedback_C.SetupAsText
// 0x0018 (0x0018 - 0x0000)
struct WBP_Feedback_C_SetupAsText final
{
public:
	class FText                                   ToShow;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Feedback_C_SetupAsText) == 0x000008, "Wrong alignment on WBP_Feedback_C_SetupAsText");
static_assert(sizeof(WBP_Feedback_C_SetupAsText) == 0x000018, "Wrong size on WBP_Feedback_C_SetupAsText");
static_assert(offsetof(WBP_Feedback_C_SetupAsText, ToShow) == 0x000000, "Member 'WBP_Feedback_C_SetupAsText::ToShow' has a wrong offset!");

}

