#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SteamMode

#include "Basic.hpp"

#include "WBP_SteamMode_classes.hpp"
#include "WBP_SteamMode_parameters.hpp"


namespace SDK
{

// Function WBP_SteamMode.WBP_SteamMode_C.ExecuteUbergraph_WBP_SteamMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::ExecuteUbergraph_WBP_SteamMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "ExecuteUbergraph_WBP_SteamMode");

	Params::WBP_SteamMode_C_ExecuteUbergraph_WBP_SteamMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_AuthorName_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_AuthorName_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_AuthorName_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_SteamMode_C_BndEvt__WBP_SteamMode_AuthorName_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_WSID_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_WSID_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_WSID_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_SteamMode_C_BndEvt__WBP_SteamMode_WSID_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_WORKSHOPTITLE_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_WORKSHOPTITLE_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_WORKSHOPTITLE_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_SteamMode_C_BndEvt__WBP_SteamMode_WORKSHOPTITLE_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.Uploaddone
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_SteamMode_C::Uploaddone(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "Uploaddone");

	Params::WBP_SteamMode_C_Uploaddone Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.RemoveUploading
// (BlueprintCallable, BlueprintEvent)

void UWBP_SteamMode_C::RemoveUploading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "RemoveUploading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_Button_0_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_Button_0_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_Button_0_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_4_Pressed__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EVoxelEditMod                           OutNav                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_4_Pressed__DelegateSignature(EVoxelEditMod OutNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_4_Pressed__DelegateSignature");

	Params::WBP_SteamMode_C_BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_4_Pressed__DelegateSignature Parms{};

	Parms.OutNav = OutNav;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.DoubleUpload
// (BlueprintCallable, BlueprintEvent)

void UWBP_SteamMode_C::DoubleUpload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "DoubleUpload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.PostLoad
// (BlueprintCallable, BlueprintEvent)

void UWBP_SteamMode_C::PostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "PostLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_DESCRIPTION_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_DESCRIPTION_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_DESCRIPTION_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_SteamMode_C_BndEvt__WBP_SteamMode_DESCRIPTION_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_TITLE_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_TITLE_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_TITLE_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_SteamMode_C_BndEvt__WBP_SteamMode_TITLE_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_TakeShotButton_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.BndEvt__WBP_SteamMode_WBP_AdamButton_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_SteamMode_C::BndEvt__WBP_SteamMode_WBP_AdamButton_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "BndEvt__WBP_SteamMode_WBP_AdamButton_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_SteamMode_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.NotifyShown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_SteamMode_C::NotifyShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "NotifyShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SteamMode.WBP_SteamMode_C.NewFunction_0
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SteamMode_C::NewFunction_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SteamMode_C", "NewFunction_0");

	UObject::ProcessEvent(Func, nullptr);
}

}

