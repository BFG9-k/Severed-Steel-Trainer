#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Difficulty

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "Engine_structs.hpp"
#include "DiffDesc_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Difficulty.WBP_Difficulty_C
// 0x0250 (0x04B0 - 0x0260)
class UWBP_Difficulty_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_AdamButton_C*                      ColdSteelButton;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DifficultyDescription;                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_86;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      MoltenButton;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MultiInfo;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      SeveredButton;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      SharpenedButton;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      TemperedButton;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FDiffDesc                              CasualDesc;                                        // 0x02A8(0x0060)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDiffDesc                              NormalDesc;                                        // 0x0308(0x0060)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDiffDesc                              HardDesc;                                          // 0x0368(0x0060)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDiffDesc                              VeryHardDesc;                                      // 0x03C8(0x0060)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDiffDesc                              ImpossibleDesc;                                    // 0x0428(0x0060)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(EDifficulty SelectedDiff)> OnSelected;                                        // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EDifficulty                                   SelectedDiff;                                      // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Onback;                                            // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_Difficulty(int32 EntryPoint);
	void BndEvt__SharpenedButton_K2Node_ComponentBoundEvent_18_OnFocused__DelegateSignature();
	void BndEvt__SharpenedButton_K2Node_ComponentBoundEvent_17_OnHovered__DelegateSignature();
	void BndEvt__SharpenedButton_K2Node_ComponentBoundEvent_16_OnPressed__DelegateSignature();
	void BndEvt__BackButton_K2Node_ComponentBoundEvent_15_OnPressed__DelegateSignature();
	void BndEvt__ImpossibleButton_K2Node_ComponentBoundEvent_14_OnFocused__DelegateSignature();
	void BndEvt__VeryHardButton_K2Node_ComponentBoundEvent_13_OnFocused__DelegateSignature();
	void BndEvt__HardButton_K2Node_ComponentBoundEvent_12_OnFocused__DelegateSignature();
	void BndEvt__NormalButton_K2Node_ComponentBoundEvent_11_OnFocused__DelegateSignature();
	void BndEvt__CasualButton_K2Node_ComponentBoundEvent_10_OnPressed__DelegateSignature();
	void BndEvt__ImpossibleButton_K2Node_ComponentBoundEvent_9_OnHovered__DelegateSignature();
	void BndEvt__VeryHardButton_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature();
	void BndEvt__HardButton_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature();
	void BndEvt__NormalButton_K2Node_ComponentBoundEvent_6_OnHovered__DelegateSignature();
	void BndEvt__CasualButton_K2Node_ComponentBoundEvent_5_OnHovered__DelegateSignature();
	void BndEvt__ImpossibleButton_K2Node_ComponentBoundEvent_4_OnPressed__DelegateSignature();
	void BndEvt__VeryHardButton_K2Node_ComponentBoundEvent_3_OnPressed__DelegateSignature();
	void BndEvt__HardButton_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature();
	void BndEvt__NormalButton_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature();
	void BndEvt__WBP_AdamButton_K2Node_ComponentBoundEvent_0_OnFocused__DelegateSignature();
	void ShowDiffDesc(EDifficulty InDiff);
	void Setup_and_Give_Focus(EDifficulty Difficulty, class UWidget** NewParam);
	void NewFunction_0();
	void SetSelected(EDifficulty ToSelect);
	void UntoggleAll();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Difficulty_C">();
	}
	static class UWBP_Difficulty_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Difficulty_C>();
	}
};
static_assert(alignof(UWBP_Difficulty_C) == 0x000008, "Wrong alignment on UWBP_Difficulty_C");
static_assert(sizeof(UWBP_Difficulty_C) == 0x0004B0, "Wrong size on UWBP_Difficulty_C");
static_assert(offsetof(UWBP_Difficulty_C, UberGraphFrame) == 0x000260, "Member 'UWBP_Difficulty_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, ColdSteelButton) == 0x000268, "Member 'UWBP_Difficulty_C::ColdSteelButton' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, DifficultyDescription) == 0x000270, "Member 'UWBP_Difficulty_C::DifficultyDescription' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, Image_86) == 0x000278, "Member 'UWBP_Difficulty_C::Image_86' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, MoltenButton) == 0x000280, "Member 'UWBP_Difficulty_C::MoltenButton' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, MultiInfo) == 0x000288, "Member 'UWBP_Difficulty_C::MultiInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, SeveredButton) == 0x000290, "Member 'UWBP_Difficulty_C::SeveredButton' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, SharpenedButton) == 0x000298, "Member 'UWBP_Difficulty_C::SharpenedButton' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, TemperedButton) == 0x0002A0, "Member 'UWBP_Difficulty_C::TemperedButton' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, CasualDesc) == 0x0002A8, "Member 'UWBP_Difficulty_C::CasualDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, NormalDesc) == 0x000308, "Member 'UWBP_Difficulty_C::NormalDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, HardDesc) == 0x000368, "Member 'UWBP_Difficulty_C::HardDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, VeryHardDesc) == 0x0003C8, "Member 'UWBP_Difficulty_C::VeryHardDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, ImpossibleDesc) == 0x000428, "Member 'UWBP_Difficulty_C::ImpossibleDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, OnSelected) == 0x000488, "Member 'UWBP_Difficulty_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, SelectedDiff) == 0x000498, "Member 'UWBP_Difficulty_C::SelectedDiff' has a wrong offset!");
static_assert(offsetof(UWBP_Difficulty_C, Onback) == 0x0004A0, "Member 'UWBP_Difficulty_C::Onback' has a wrong offset!");

}

