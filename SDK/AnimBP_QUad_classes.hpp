#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_QUad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_QUad.AnimBP_QUad_C
// 0x0950 (0x0C10 - 0x02C0)
class UAnimBP_QUad_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x02C8(0x00E8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x03B0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x03D0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x03F0(0x00A0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0490(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x04D8(0x00A0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0578(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x05A8(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0628(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0730(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x07B0(0x00A0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0850(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0958(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0A60(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0B00(0x00E8)()
	float                                         Dir;                                               // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0BEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x0BF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDead;                                             // 0x0BFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDormant;                                          // 0x0BFD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BFE[0x2];                                      // 0x0BFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LookAtRot;                                         // 0x0C00(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCooldown;                                         // 0x0C0C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsRunning;                                        // 0x0C0D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AnimBP_QUad(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_QUad_C">();
	}
	static class UAnimBP_QUad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_QUad_C>();
	}
};
static_assert(alignof(UAnimBP_QUad_C) == 0x000010, "Wrong alignment on UAnimBP_QUad_C");
static_assert(sizeof(UAnimBP_QUad_C) == 0x000C10, "Wrong size on UAnimBP_QUad_C");
static_assert(offsetof(UAnimBP_QUad_C, UberGraphFrame) == 0x0002C0, "Member 'UAnimBP_QUad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0002C8, "Member 'UAnimBP_QUad_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_LocalToComponentSpace) == 0x0003B0, "Member 'UAnimBP_QUad_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_ComponentToLocalSpace) == 0x0003D0, "Member 'UAnimBP_QUad_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_BlendListByBool_3) == 0x0003F0, "Member 'UAnimBP_QUad_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_Slot) == 0x000490, "Member 'UAnimBP_QUad_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_BlendListByBool_2) == 0x0004D8, "Member 'UAnimBP_QUad_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_Root) == 0x000578, "Member 'UAnimBP_QUad_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_SequencePlayer_1) == 0x0005A8, "Member 'UAnimBP_QUad_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_ModifyBone_2) == 0x000628, "Member 'UAnimBP_QUad_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_SequencePlayer) == 0x000730, "Member 'UAnimBP_QUad_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_BlendListByBool_1) == 0x0007B0, "Member 'UAnimBP_QUad_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_ModifyBone_1) == 0x000850, "Member 'UAnimBP_QUad_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_ModifyBone) == 0x000958, "Member 'UAnimBP_QUad_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_BlendListByBool) == 0x000A60, "Member 'UAnimBP_QUad_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, AnimGraphNode_BlendSpacePlayer) == 0x000B00, "Member 'UAnimBP_QUad_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, Dir) == 0x000BE8, "Member 'UAnimBP_QUad_C::Dir' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, Speed) == 0x000BEC, "Member 'UAnimBP_QUad_C::Speed' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, LookAtLocation) == 0x000BF0, "Member 'UAnimBP_QUad_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, bDead) == 0x000BFC, "Member 'UAnimBP_QUad_C::bDead' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, bDormant) == 0x000BFD, "Member 'UAnimBP_QUad_C::bDormant' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, LookAtRot) == 0x000C00, "Member 'UAnimBP_QUad_C::LookAtRot' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, bCooldown) == 0x000C0C, "Member 'UAnimBP_QUad_C::bCooldown' has a wrong offset!");
static_assert(offsetof(UAnimBP_QUad_C, bIsRunning) == 0x000C0D, "Member 'UAnimBP_QUad_C::bIsRunning' has a wrong offset!");

}

