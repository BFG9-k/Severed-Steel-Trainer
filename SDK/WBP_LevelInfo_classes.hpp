#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LevelInfo

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LevelInfo.WBP_LevelInfo_C
// 0x0058 (0x02B8 - 0x0260)
class UWBP_LevelInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             FastestTime;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HighestDifficulty;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HighestRank;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HighestScore;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_40;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ScoreRow;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_226;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_2;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ChallengeWidget_C*                 WBP_ChallengeWidget;                               // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bHideHeader;                                       // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_LevelInfo(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void LoadSave(const struct FArcadeLevelSave& SaveData, TArray<struct FChallenge>& AllChallenges, bool AsCampaign);
	void SetupAsNeverBeat(TArray<struct FChallenge>& Challenges);
	struct FSlateColor Get_HighestScore_ColorAndOpacity_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LevelInfo_C">();
	}
	static class UWBP_LevelInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LevelInfo_C>();
	}
};
static_assert(alignof(UWBP_LevelInfo_C) == 0x000008, "Wrong alignment on UWBP_LevelInfo_C");
static_assert(sizeof(UWBP_LevelInfo_C) == 0x0002B8, "Wrong size on UWBP_LevelInfo_C");
static_assert(offsetof(UWBP_LevelInfo_C, UberGraphFrame) == 0x000260, "Member 'UWBP_LevelInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, FastestTime) == 0x000268, "Member 'UWBP_LevelInfo_C::FastestTime' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, HighestDifficulty) == 0x000270, "Member 'UWBP_LevelInfo_C::HighestDifficulty' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, HighestRank) == 0x000278, "Member 'UWBP_LevelInfo_C::HighestRank' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, HighestScore) == 0x000280, "Member 'UWBP_LevelInfo_C::HighestScore' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, Image_40) == 0x000288, "Member 'UWBP_LevelInfo_C::Image_40' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, ScoreRow) == 0x000290, "Member 'UWBP_LevelInfo_C::ScoreRow' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, TextBlock_226) == 0x000298, "Member 'UWBP_LevelInfo_C::TextBlock_226' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, VerticalBox_2) == 0x0002A0, "Member 'UWBP_LevelInfo_C::VerticalBox_2' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, WBP_ChallengeWidget) == 0x0002A8, "Member 'UWBP_LevelInfo_C::WBP_ChallengeWidget' has a wrong offset!");
static_assert(offsetof(UWBP_LevelInfo_C, bHideHeader) == 0x0002B0, "Member 'UWBP_LevelInfo_C::bHideHeader' has a wrong offset!");

}

