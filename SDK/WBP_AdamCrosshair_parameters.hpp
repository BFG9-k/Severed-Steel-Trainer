#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdamCrosshair

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_AdamCrosshair.WBP_AdamCrosshair_C.ExecuteUbergraph_WBP_AdamCrosshair
// 0x0088 (0x0088 - 0x0000)
struct WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorAndOpacity_0_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_CrosshairManager_C> K2Node_DynamicCast_AsI_Crosshair_Manager;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair) == 0x000008, "Wrong alignment on WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair");
static_assert(sizeof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair) == 0x000088, "Wrong size on WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, EntryPoint) == 0x000000, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, Temp_class_Variable) == 0x000008, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, Temp_class_Variable_1) == 0x000010, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, Temp_class_Variable_2) == 0x000018, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, Temp_class_Variable_3) == 0x000020, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, Temp_class_Variable_4) == 0x000028, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, CallFunc_GetColorAndOpacity_0_ReturnValue) == 0x000030, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::CallFunc_GetColorAndOpacity_0_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, Temp_byte_Variable) == 0x000040, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, CallFunc_GetTYVCGameMode_NewParam) == 0x000048, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, CallFunc_Conv_IntToByte_ReturnValue) == 0x000050, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, K2Node_Select_Default) == 0x000058, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, CallFunc_AddChildToOverlay_ReturnValue) == 0x000068, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, K2Node_DynamicCast_AsI_Crosshair_Manager) == 0x000070, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::K2Node_DynamicCast_AsI_Crosshair_Manager' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'WBP_AdamCrosshair_C_ExecuteUbergraph_WBP_AdamCrosshair::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AdamCrosshair.WBP_AdamCrosshair_C.SetMyXHair
// 0x0038 (0x0038 - 0x0000)
struct WBP_AdamCrosshair_C_SetMyXHair final
{
public:
	class UTexture2D*                             NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdamCrosshair_C_SetMyXHair) == 0x000008, "Wrong alignment on WBP_AdamCrosshair_C_SetMyXHair");
static_assert(sizeof(WBP_AdamCrosshair_C_SetMyXHair) == 0x000038, "Wrong size on WBP_AdamCrosshair_C_SetMyXHair");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, NewParam) == 0x000000, "Member 'WBP_AdamCrosshair_C_SetMyXHair::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000008, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000010, "Member 'WBP_AdamCrosshair_C_SetMyXHair::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_AdamCrosshair_C_SetMyXHair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000020, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000024, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_SetMyXHair, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'WBP_AdamCrosshair_C_SetMyXHair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_AdamCrosshair.WBP_AdamCrosshair_C.GetColorAndOpacity_0
// 0x0020 (0x0020 - 0x0000)
struct WBP_AdamCrosshair_C_GetColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdamCrosshair_C_GetColorAndOpacity_0) == 0x000004, "Wrong alignment on WBP_AdamCrosshair_C_GetColorAndOpacity_0");
static_assert(sizeof(WBP_AdamCrosshair_C_GetColorAndOpacity_0) == 0x000020, "Wrong size on WBP_AdamCrosshair_C_GetColorAndOpacity_0");
static_assert(offsetof(WBP_AdamCrosshair_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'WBP_AdamCrosshair_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamCrosshair_C_GetColorAndOpacity_0, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000010, "Member 'WBP_AdamCrosshair_C_GetColorAndOpacity_0::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");

}

