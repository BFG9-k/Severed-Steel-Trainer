#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TMP

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TMP.TMP_C
// 0x0030 (0x0710 - 0x06E0)
class ATMP_C final : public AWeaponBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sight;                                             // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Grip;                                              // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Stock;                                             // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mag;                                               // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AmmoInd_C*                          BP_AmmoInd1;                                       // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TMP(int32 EntryPoint);
	void Randomize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TMP_C">();
	}
	static class ATMP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATMP_C>();
	}
};
static_assert(alignof(ATMP_C) == 0x000010, "Wrong alignment on ATMP_C");
static_assert(sizeof(ATMP_C) == 0x000710, "Wrong size on ATMP_C");
static_assert(offsetof(ATMP_C, UberGraphFrame) == 0x0006E0, "Member 'ATMP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATMP_C, Sight) == 0x0006E8, "Member 'ATMP_C::Sight' has a wrong offset!");
static_assert(offsetof(ATMP_C, Grip) == 0x0006F0, "Member 'ATMP_C::Grip' has a wrong offset!");
static_assert(offsetof(ATMP_C, Stock) == 0x0006F8, "Member 'ATMP_C::Stock' has a wrong offset!");
static_assert(offsetof(ATMP_C, Mag) == 0x000700, "Member 'ATMP_C::Mag' has a wrong offset!");
static_assert(offsetof(ATMP_C, BP_AmmoInd1) == 0x000708, "Member 'ATMP_C::BP_AmmoInd1' has a wrong offset!");

}

