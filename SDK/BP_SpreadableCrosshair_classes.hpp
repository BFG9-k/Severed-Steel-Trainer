#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpreadableCrosshair

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SpreadableCrosshair.BP_SpreadableCrosshair_C
// 0x0058 (0x0378 - 0x0320)
class UBP_SpreadableCrosshair_C final : public USpreadingCrosshair
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HitMarker;                                         // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_143;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_232;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_316;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_412;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SpreadableCrosshair(int32 EntryPoint);
	void ShowMarker();
	void FadeInCrosshair();
	void FadeOutCrosshair();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpreadableCrosshair_C">();
	}
	static class UBP_SpreadableCrosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SpreadableCrosshair_C>();
	}
};
static_assert(alignof(UBP_SpreadableCrosshair_C) == 0x000008, "Wrong alignment on UBP_SpreadableCrosshair_C");
static_assert(sizeof(UBP_SpreadableCrosshair_C) == 0x000378, "Wrong size on UBP_SpreadableCrosshair_C");
static_assert(offsetof(UBP_SpreadableCrosshair_C, UberGraphFrame) == 0x000320, "Member 'UBP_SpreadableCrosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, HitMarker) == 0x000328, "Member 'UBP_SpreadableCrosshair_C::HitMarker' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, FadeIn) == 0x000330, "Member 'UBP_SpreadableCrosshair_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image) == 0x000338, "Member 'UBP_SpreadableCrosshair_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_1) == 0x000340, "Member 'UBP_SpreadableCrosshair_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_2) == 0x000348, "Member 'UBP_SpreadableCrosshair_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_3) == 0x000350, "Member 'UBP_SpreadableCrosshair_C::Image_3' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_143) == 0x000358, "Member 'UBP_SpreadableCrosshair_C::Image_143' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_232) == 0x000360, "Member 'UBP_SpreadableCrosshair_C::Image_232' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_316) == 0x000368, "Member 'UBP_SpreadableCrosshair_C::Image_316' has a wrong offset!");
static_assert(offsetof(UBP_SpreadableCrosshair_C, Image_412) == 0x000370, "Member 'UBP_SpreadableCrosshair_C::Image_412' has a wrong offset!");

}

