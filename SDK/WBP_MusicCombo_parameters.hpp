#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MusicCombo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_MusicCombo.WBP_MusicCombo_C.ExecuteUbergraph_WBP_MusicCombo
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0050(0x0070)(ConstParm)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x00C0(0x0008)(NoDestructor)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_2;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00D8(0x0070)(ConstParm)
	TArray<TSoftObjectPtr<class USoundBase>>      CallFunc_Map_Keys_Keys;                            // 0x0148(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_Map_Values_Values;                        // 0x0158(0x0010)(ReferenceParm)
	TSoftObjectPtr<class USoundBase>              CallFunc_Array_Get_Item;                           // 0x0168(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0190(0x0018)()
};
static_assert(alignof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo) == 0x000008, "Wrong alignment on WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo");
static_assert(sizeof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo) == 0x0001A8, "Wrong size on WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, EntryPoint) == 0x000000, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_GetTYVCGameMode_NewParam) == 0x000008, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_Conv_StringToInt_ReturnValue) == 0x000010, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, K2Node_Event_MyGeometry) == 0x000014, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, K2Node_Event_MouseEvent_1) == 0x000050, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, K2Node_Event_InFocusEvent) == 0x0000C0, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_GetTYVCGameMode_NewParam_1) == 0x0000C8, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_GetTYVCGameMode_NewParam_2) == 0x0000D0, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_GetTYVCGameMode_NewParam_2' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, K2Node_Event_MouseEvent) == 0x0000D8, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_Map_Keys_Keys) == 0x000148, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_Map_Values_Values) == 0x000158, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_Array_Get_Item) == 0x000168, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'WBP_MusicCombo_C_ExecuteUbergraph_WBP_MusicCombo::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_MusicCombo.WBP_MusicCombo_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WBP_MusicCombo_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MusicCombo_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_MusicCombo_C_OnMouseLeave");
static_assert(sizeof(WBP_MusicCombo_C_OnMouseLeave) == 0x000070, "Wrong size on WBP_MusicCombo_C_OnMouseLeave");
static_assert(offsetof(WBP_MusicCombo_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_MusicCombo_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_MusicCombo.WBP_MusicCombo_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_MusicCombo_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MusicCombo_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_MusicCombo_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_MusicCombo_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_MusicCombo_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_MusicCombo_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_MusicCombo_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_MusicCombo.WBP_MusicCombo_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_MusicCombo_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MusicCombo_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_MusicCombo_C_OnMouseEnter");
static_assert(sizeof(WBP_MusicCombo_C_OnMouseEnter) == 0x0000A8, "Wrong size on WBP_MusicCombo_C_OnMouseEnter");
static_assert(offsetof(WBP_MusicCombo_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_MusicCombo_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MusicCombo_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_MusicCombo_C_OnMouseEnter::MouseEvent' has a wrong offset!");

}

