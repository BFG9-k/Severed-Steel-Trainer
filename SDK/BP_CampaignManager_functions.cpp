#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampaignManager

#include "Basic.hpp"

#include "BP_CampaignManager_classes.hpp"
#include "BP_CampaignManager_parameters.hpp"


namespace SDK
{

// Function BP_CampaignManager.BP_CampaignManager_C.ExecuteUbergraph_BP_CampaignManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampaignManager_C::ExecuteUbergraph_BP_CampaignManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampaignManager_C", "ExecuteUbergraph_BP_CampaignManager");

	Params::BP_CampaignManager_C_ExecuteUbergraph_BP_CampaignManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampaignManager.BP_CampaignManager_C.SetPlayFDVid
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShouldPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CampaignManager_C::SetPlayFDVid(bool bShouldPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampaignManager_C", "SetPlayFDVid");

	Params::BP_CampaignManager_C_SetPlayFDVid Parms{};

	Parms.bShouldPlay = bShouldPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampaignManager.BP_CampaignManager_C.CleanupEdenMap
// (Event, Protected, BlueprintEvent)

void ABP_CampaignManager_C::CleanupEdenMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampaignManager_C", "CleanupEdenMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampaignManager.BP_CampaignManager_C.DoEdenMapThing
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DestinationText                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_CampaignManager_C::DoEdenMapThing(class FName From, class FName To, const class FText& DestinationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampaignManager_C", "DoEdenMapThing");

	Params::BP_CampaignManager_C_DoEdenMapThing Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.DestinationText = std::move(DestinationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampaignManager.BP_CampaignManager_C.OnEnd_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_CampaignManager_C::OnEnd_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampaignManager_C", "OnEnd_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampaignManager.BP_CampaignManager_C.PlayCutscene
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFileMediaSource*                 InSource                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampaignManager_C::PlayCutscene(class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampaignManager_C", "PlayCutscene");

	Params::BP_CampaignManager_C_PlayCutscene Parms{};

	Parms.InSource = InSource;

	UObject::ProcessEvent(Func, &Parms);
}

}

