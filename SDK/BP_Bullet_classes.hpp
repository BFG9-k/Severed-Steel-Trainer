#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bullet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Bullet.BP_Bullet_C
// 0x0060 (0x0280 - 0x0220)
class ABP_Bullet_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProjectileMovementComponent*           Projectile;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Bullet;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CollisionComponent;                                // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BulletSpeed;                                       // 0x0240(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Pawn;                                              // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      HitObject;                                         // 0x0250(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                HitLoacation;                                      // 0x0260(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Bullet(int32 EntryPoint);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Bullet_C">();
	}
	static class ABP_Bullet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Bullet_C>();
	}
};
static_assert(alignof(ABP_Bullet_C) == 0x000008, "Wrong alignment on ABP_Bullet_C");
static_assert(sizeof(ABP_Bullet_C) == 0x000280, "Wrong size on ABP_Bullet_C");
static_assert(offsetof(ABP_Bullet_C, UberGraphFrame) == 0x000220, "Member 'ABP_Bullet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, Projectile) == 0x000228, "Member 'ABP_Bullet_C::Projectile' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, Bullet) == 0x000230, "Member 'ABP_Bullet_C::Bullet' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, CollisionComponent) == 0x000238, "Member 'ABP_Bullet_C::CollisionComponent' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, BulletSpeed) == 0x000240, "Member 'ABP_Bullet_C::BulletSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, Pawn) == 0x000248, "Member 'ABP_Bullet_C::Pawn' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, HitObject) == 0x000250, "Member 'ABP_Bullet_C::HitObject' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, HitLoacation) == 0x000260, "Member 'ABP_Bullet_C::HitLoacation' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, HitComponent) == 0x000270, "Member 'ABP_Bullet_C::HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_Bullet_C, HitActor) == 0x000278, "Member 'ABP_Bullet_C::HitActor' has a wrong offset!");

}

