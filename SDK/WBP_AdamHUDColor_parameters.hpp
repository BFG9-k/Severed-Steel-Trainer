#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdamHUDColor

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_AdamHUDColor.WBP_AdamHUDColor_C.ExecuteUbergraph_WBP_AdamHUDColor
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EHudColor, struct FLinearColor>          Temp_byte_Variable;                                // 0x0008(0x0050)()
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0058(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0060(0x0008)(NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0028)()
};
static_assert(alignof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor) == 0x000008, "Wrong alignment on WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor");
static_assert(sizeof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor) == 0x0000A8, "Wrong size on WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, EntryPoint) == 0x000000, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, Temp_byte_Variable) == 0x000008, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, K2Node_Event_InFocusEvent_1) == 0x000058, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, K2Node_Event_InFocusEvent) == 0x000060, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, K2Node_Event_IsDesignTime) == 0x000068, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, CallFunc_Map_Find_Value) == 0x00006C, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, CallFunc_Map_Find_ReturnValue) == 0x00007C, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'WBP_AdamHUDColor_C_ExecuteUbergraph_WBP_AdamHUDColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_AdamHUDColor.WBP_AdamHUDColor_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AdamHUDColor_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AdamHUDColor_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AdamHUDColor_C_PreConstruct");
static_assert(sizeof(WBP_AdamHUDColor_C_PreConstruct) == 0x000001, "Wrong size on WBP_AdamHUDColor_C_PreConstruct");
static_assert(offsetof(WBP_AdamHUDColor_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AdamHUDColor_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AdamHUDColor.WBP_AdamHUDColor_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdamHUDColor_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_AdamHUDColor_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_AdamHUDColor_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_AdamHUDColor_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_AdamHUDColor_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_AdamHUDColor_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_AdamHUDColor_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_AdamHUDColor.WBP_AdamHUDColor_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdamHUDColor_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_AdamHUDColor_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_AdamHUDColor_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_AdamHUDColor_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_AdamHUDColor_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_AdamHUDColor_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_AdamHUDColor_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_AdamHUDColor.WBP_AdamHUDColor_C.SetSelected
// 0x0005 (0x0005 - 0x0000)
struct WBP_AdamHUDColor_C_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdamHUDColor_C_SetSelected) == 0x000001, "Wrong alignment on WBP_AdamHUDColor_C_SetSelected");
static_assert(sizeof(WBP_AdamHUDColor_C_SetSelected) == 0x000005, "Wrong size on WBP_AdamHUDColor_C_SetSelected");
static_assert(offsetof(WBP_AdamHUDColor_C_SetSelected, bSelected) == 0x000000, "Member 'WBP_AdamHUDColor_C_SetSelected::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_SetSelected, Temp_bool_Variable) == 0x000001, "Member 'WBP_AdamHUDColor_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_SetSelected, Temp_byte_Variable) == 0x000002, "Member 'WBP_AdamHUDColor_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_SetSelected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_AdamHUDColor_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AdamHUDColor_C_SetSelected, K2Node_Select_Default) == 0x000004, "Member 'WBP_AdamHUDColor_C_SetSelected::K2Node_Select_Default' has a wrong offset!");

}

