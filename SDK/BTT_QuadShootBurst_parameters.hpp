#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_QuadShootBurst

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTT_QuadShootBurst.BTT_QuadShootBurst_C.ExecuteUbergraph_BTT_QuadShootBurst
// 0x0060 (0x0060 - 0x0000)
struct BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMech*                                  K2Node_DynamicCast_AsMech;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst) == 0x000008, "Wrong alignment on BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst");
static_assert(sizeof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst) == 0x000060, "Wrong size on BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, EntryPoint) == 0x000000, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, Temp_int_Variable) == 0x000024, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, K2Node_Event_OwnerController) == 0x000028, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, K2Node_Event_ControlledPawn) == 0x000030, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, K2Node_DynamicCast_AsMech) == 0x000038, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::K2Node_DynamicCast_AsMech' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000058, "Member 'BTT_QuadShootBurst_C_ExecuteUbergraph_BTT_QuadShootBurst::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function BTT_QuadShootBurst.BTT_QuadShootBurst_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_QuadShootBurst_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_QuadShootBurst_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_QuadShootBurst_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_QuadShootBurst_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_QuadShootBurst_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_QuadShootBurst_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_QuadShootBurst_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_QuadShootBurst_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_QuadShootBurst_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

