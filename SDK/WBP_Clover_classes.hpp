#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Clover

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Clover.WBP_Clover_C
// 0x0108 (0x0368 - 0x0260)
class UWBP_Clover_C final : public UCloverWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 CloverImg;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            EmptyColor;                                        // 0x0270(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            OneleftColor;                                      // 0x0298(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TwoLeftColor;                                      // 0x02C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            ThreeLeftColor;                                    // 0x02E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            FullColor;                                         // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsImpossibke;                                     // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SkullColor;                                        // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_Clover(int32 EntryPoint);
	void SetupAsImpossible(bool bIsImpossible);
	void SetDisplayedLuck(int32 Luck);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Clover_C">();
	}
	static class UWBP_Clover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Clover_C>();
	}
};
static_assert(alignof(UWBP_Clover_C) == 0x000008, "Wrong alignment on UWBP_Clover_C");
static_assert(sizeof(UWBP_Clover_C) == 0x000368, "Wrong size on UWBP_Clover_C");
static_assert(offsetof(UWBP_Clover_C, UberGraphFrame) == 0x000260, "Member 'UWBP_Clover_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, CloverImg) == 0x000268, "Member 'UWBP_Clover_C::CloverImg' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, EmptyColor) == 0x000270, "Member 'UWBP_Clover_C::EmptyColor' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, OneleftColor) == 0x000298, "Member 'UWBP_Clover_C::OneleftColor' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, TwoLeftColor) == 0x0002C0, "Member 'UWBP_Clover_C::TwoLeftColor' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, ThreeLeftColor) == 0x0002E8, "Member 'UWBP_Clover_C::ThreeLeftColor' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, FullColor) == 0x000310, "Member 'UWBP_Clover_C::FullColor' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, bIsImpossibke) == 0x000338, "Member 'UWBP_Clover_C::bIsImpossibke' has a wrong offset!");
static_assert(offsetof(UWBP_Clover_C, SkullColor) == 0x000340, "Member 'UWBP_Clover_C::SkullColor' has a wrong offset!");

}

