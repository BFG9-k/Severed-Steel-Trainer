#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengeWidget

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ChallengeWidget.WBP_ChallengeWidget_C.ExecuteUbergraph_WBP_ChallengeWidget
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChallenge>                     K2Node_CustomEvent_Challenges;                     // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FChallenge>                     K2Node_CustomEvent_Completed;                      // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDifficulty                                   Temp_byte_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ChallengeRow_C*                    CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChallenge                             CallFunc_Array_Get_Item;                           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDifficulty                                   CallFunc_CheckCompletion_OutDifficulty;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCompletion_ReturnValue;              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget) == 0x000008, "Wrong alignment on WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget");
static_assert(sizeof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget) == 0x0000A0, "Wrong size on WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, EntryPoint) == 0x000000, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, K2Node_CustomEvent_Challenges) == 0x000008, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::K2Node_CustomEvent_Challenges' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, K2Node_CustomEvent_Completed) == 0x000018, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::K2Node_CustomEvent_Completed' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_bool_Variable) == 0x000028, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_byte_Variable) == 0x000029, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_byte_Variable_1) == 0x00002A, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_byte_Variable_2) == 0x00002B, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_object_Variable) == 0x000030, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_object_Variable_1) == 0x000038, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_object_Variable_2) == 0x000040, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_object_Variable_3) == 0x000048, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_object_Variable_4) == 0x000050, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_object_Variable_5) == 0x000058, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_Create_ReturnValue) == 0x000070, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_CheckCompletion_OutDifficulty) == 0x000084, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_CheckCompletion_OutDifficulty' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_CheckCompletion_ReturnValue) == 0x000085, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_CheckCompletion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, K2Node_Select_Default) == 0x00008D, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget, CallFunc_AddChild_ReturnValue) == 0x000098, "Member 'WBP_ChallengeWidget_C_ExecuteUbergraph_WBP_ChallengeWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeWidget.WBP_ChallengeWidget_C.ShowChallenges
// 0x0020 (0x0020 - 0x0000)
struct WBP_ChallengeWidget_C_ShowChallenges final
{
public:
	TArray<struct FChallenge>                     Challenges;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FChallenge>                     Completed;                                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_ChallengeWidget_C_ShowChallenges) == 0x000008, "Wrong alignment on WBP_ChallengeWidget_C_ShowChallenges");
static_assert(sizeof(WBP_ChallengeWidget_C_ShowChallenges) == 0x000020, "Wrong size on WBP_ChallengeWidget_C_ShowChallenges");
static_assert(offsetof(WBP_ChallengeWidget_C_ShowChallenges, Challenges) == 0x000000, "Member 'WBP_ChallengeWidget_C_ShowChallenges::Challenges' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeWidget_C_ShowChallenges, Completed) == 0x000010, "Member 'WBP_ChallengeWidget_C_ShowChallenges::Completed' has a wrong offset!");

}

