#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScanFX_SwipingBeam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ScanFX_SwipingBeam.BP_ScanFX_SwipingBeam_C.ExecuteUbergraph_BP_ScanFX_SwipingBeam
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam) == 0x000008, "Wrong alignment on BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam");
static_assert(sizeof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam) == 0x0000B0, "Wrong size on BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, EntryPoint) == 0x000000, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_GetFloatValue_ReturnValue) == 0x000008, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000020, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A8, "Member 'BP_ScanFX_SwipingBeam_C_ExecuteUbergraph_BP_ScanFX_SwipingBeam::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_ScanFX_SwipingBeam.BP_ScanFX_SwipingBeam_C.UserConstructionScript
// 0x0088 (0x0088 - 0x0000)
struct BP_ScanFX_SwipingBeam_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ScanFX_SwipingBeam_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_ScanFX_SwipingBeam_C_UserConstructionScript");
static_assert(sizeof(BP_ScanFX_SwipingBeam_C_UserConstructionScript) == 0x000088, "Wrong size on BP_ScanFX_SwipingBeam_C_UserConstructionScript");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000000, "Member 'BP_ScanFX_SwipingBeam_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_ScanFX_SwipingBeam.BP_ScanFX_SwipingBeam_C.SetTargeted
// 0x0001 (0x0001 - 0x0000)
struct BP_ScanFX_SwipingBeam_C_SetTargeted final
{
public:
	bool                                          bIsTargetted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScanFX_SwipingBeam_C_SetTargeted) == 0x000001, "Wrong alignment on BP_ScanFX_SwipingBeam_C_SetTargeted");
static_assert(sizeof(BP_ScanFX_SwipingBeam_C_SetTargeted) == 0x000001, "Wrong size on BP_ScanFX_SwipingBeam_C_SetTargeted");
static_assert(offsetof(BP_ScanFX_SwipingBeam_C_SetTargeted, bIsTargetted) == 0x000000, "Member 'BP_ScanFX_SwipingBeam_C_SetTargeted::bIsTargetted' has a wrong offset!");

}

