#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Quad

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"
#include "Voxel_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Quad.BP_Quad_C
// 0x0130 (0x06B0 - 0x0580)
class ABP_Quad_C : public AMech
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   WP;                                                // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Speech;                                            // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RCannon;                                           // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LCannon;                                           // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_00AE1971403EB059E01E54953504E329; // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_00AE1971403EB059E01E54953504E329; // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftFlashTL_NewTrack_0_309C30484C1F1375A6ACEDB2ED489FC5; // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LeftFlashTL__Direction_309C30484C1F1375A6ACEDB2ED489FC5; // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LeftFlashTL;                                       // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoxelTransformableGeneratorPicker     Graph;                                             // 0x05D0(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastRight;                                         // 0x063C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WP1HP;                                             // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WP2HP;                                             // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MyDynMat;                                          // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFrenzied;                                         // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bExplosionCooling;                                 // 0x0651(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652[0x2];                                      // 0x0652(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalHP;                                           // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInCooldown;                                       // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x3];                                      // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key_Name;                                          // 0x065C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GensWorking;                                       // 0x0664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartingHP;                                        // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ShootingInterruptedKey;                            // 0x066C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               LCannonMat;                                        // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RightCannonMat;                                    // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ShieldAvailableKe;                                 // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         stage1hp;                                          // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         s2hp;                                              // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasSeen;                                          // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x3];                                      // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeechCooldown;                                    // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SpeechHandle;                                      // 0x06A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Quad(int32 EntryPoint);
	void ReceiveBeginPlay();
	void DoDestructionGraph(const struct FVector& WorldLocation, class AVoxelWorld* OnWorld);
	void OnLevelReady_Event_0();
	void ResetSpeech();
	void Say(class USoundBase* NewParam, bool Force);
	void SeenPlayer();
	void CustomEvent_0();
	void SetShieldActive(bool bActive, bool bInstant);
	void BndEvt__BP_Quad_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NotifyMechHit(const struct FHitResult& HitResult, int32 Dmg);
	void DoFlash(class UPrimitiveComponent* ForComp);
	void NotifyHit(const struct FHitResult& HitResult, int32 Dmg);
	void LeftFlashTL__UpdateFunc();
	void LeftFlashTL__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	struct FTransform GetShootOrigin();
	void Check_and_Do_Frenzy();
	void NotifyGensWorking(bool NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Quad_C">();
	}
	static class ABP_Quad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Quad_C>();
	}
};
static_assert(alignof(ABP_Quad_C) == 0x000010, "Wrong alignment on ABP_Quad_C");
static_assert(sizeof(ABP_Quad_C) == 0x0006B0, "Wrong size on ABP_Quad_C");
static_assert(offsetof(ABP_Quad_C, UberGraphFrame) == 0x000580, "Member 'ABP_Quad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, WP) == 0x000588, "Member 'ABP_Quad_C::WP' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Speech) == 0x000590, "Member 'ABP_Quad_C::Speech' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, StaticMesh) == 0x000598, "Member 'ABP_Quad_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, RCannon) == 0x0005A0, "Member 'ABP_Quad_C::RCannon' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, LCannon) == 0x0005A8, "Member 'ABP_Quad_C::LCannon' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Timeline_0_NewTrack_0_00AE1971403EB059E01E54953504E329) == 0x0005B0, "Member 'ABP_Quad_C::Timeline_0_NewTrack_0_00AE1971403EB059E01E54953504E329' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Timeline_0__Direction_00AE1971403EB059E01E54953504E329) == 0x0005B4, "Member 'ABP_Quad_C::Timeline_0__Direction_00AE1971403EB059E01E54953504E329' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Timeline_0) == 0x0005B8, "Member 'ABP_Quad_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, LeftFlashTL_NewTrack_0_309C30484C1F1375A6ACEDB2ED489FC5) == 0x0005C0, "Member 'ABP_Quad_C::LeftFlashTL_NewTrack_0_309C30484C1F1375A6ACEDB2ED489FC5' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, LeftFlashTL__Direction_309C30484C1F1375A6ACEDB2ED489FC5) == 0x0005C4, "Member 'ABP_Quad_C::LeftFlashTL__Direction_309C30484C1F1375A6ACEDB2ED489FC5' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, LeftFlashTL) == 0x0005C8, "Member 'ABP_Quad_C::LeftFlashTL' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Graph) == 0x0005D0, "Member 'ABP_Quad_C::Graph' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Radius) == 0x000638, "Member 'ABP_Quad_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, LastRight) == 0x00063C, "Member 'ABP_Quad_C::LastRight' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, WP1HP) == 0x000640, "Member 'ABP_Quad_C::WP1HP' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, WP2HP) == 0x000644, "Member 'ABP_Quad_C::WP2HP' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, MyDynMat) == 0x000648, "Member 'ABP_Quad_C::MyDynMat' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, bFrenzied) == 0x000650, "Member 'ABP_Quad_C::bFrenzied' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, bExplosionCooling) == 0x000651, "Member 'ABP_Quad_C::bExplosionCooling' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, TotalHP) == 0x000654, "Member 'ABP_Quad_C::TotalHP' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, bInCooldown) == 0x000658, "Member 'ABP_Quad_C::bInCooldown' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, Key_Name) == 0x00065C, "Member 'ABP_Quad_C::Key_Name' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, GensWorking) == 0x000664, "Member 'ABP_Quad_C::GensWorking' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, StartingHP) == 0x000668, "Member 'ABP_Quad_C::StartingHP' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, ShootingInterruptedKey) == 0x00066C, "Member 'ABP_Quad_C::ShootingInterruptedKey' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, LCannonMat) == 0x000678, "Member 'ABP_Quad_C::LCannonMat' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, RightCannonMat) == 0x000680, "Member 'ABP_Quad_C::RightCannonMat' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, ShieldAvailableKe) == 0x000688, "Member 'ABP_Quad_C::ShieldAvailableKe' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, stage1hp) == 0x000690, "Member 'ABP_Quad_C::stage1hp' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, s2hp) == 0x000694, "Member 'ABP_Quad_C::s2hp' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, bHasSeen) == 0x000698, "Member 'ABP_Quad_C::bHasSeen' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, SpeechCooldown) == 0x00069C, "Member 'ABP_Quad_C::SpeechCooldown' has a wrong offset!");
static_assert(offsetof(ABP_Quad_C, SpeechHandle) == 0x0006A0, "Member 'ABP_Quad_C::SpeechHandle' has a wrong offset!");

}

