#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PortalBP

#include "Basic.hpp"

#include "ProceduralMeshComponent_structs.hpp"
#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PortalBP.PortalBP_C.ExecuteUbergraph_PortalBP
// 0x0350 (0x0350 - 0x0000)
struct PortalBP_C_ExecuteUbergraph_PortalBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APortalRenderManagerBP_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0080(0x0010)(ReferenceParm)
	class APortalRenderManagerBP_C*               CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APortalRenderManagerBP_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APortalRenderManagerBP_C*>       CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00F0(0x0010)(ReferenceParm)
	class APortalRenderManagerBP_C*               CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_CameraOrigin;                   // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_RecurseDepth;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ForceMip;                       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetPortalCameraLocations_PlayerCameraLocation; // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0170(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0198(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InID;                                 // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APortalBP_C*>                    CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0200(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APortalBP_C*                            CallFunc_Array_Get_Item_3;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0228(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B3[0x1];                                      // 0x02B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActionType                                   K2Node_Event_ToDo;                                 // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSimulated;                           // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x034E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_ExecuteUbergraph_PortalBP) == 0x000010, "Wrong alignment on PortalBP_C_ExecuteUbergraph_PortalBP");
static_assert(sizeof(PortalBP_C_ExecuteUbergraph_PortalBP) == 0x000350, "Wrong size on PortalBP_C_ExecuteUbergraph_PortalBP");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, EntryPoint) == 0x000000, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CustomEvent_OverlappedActor) == 0x000010, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CustomEvent_OtherActor) == 0x000018, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_Event_OtherActor) == 0x000038, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000040, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000048, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetActorForwardVector_ReturnValue) == 0x00005C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_MakeArray_Array) == 0x000068, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetAllActorsOfClass_OutActors) == 0x000080, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Get_Item) == 0x000090, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Greater_IntInt_ReturnValue) == 0x00009C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetDisplayName_ReturnValue) == 0x0000D0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000F0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CreateDelegate_OutputDelegate) == 0x000108, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CustomEvent_CameraOrigin) == 0x000120, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CustomEvent_CameraOrigin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CustomEvent_RecurseDepth) == 0x000150, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CustomEvent_RecurseDepth' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CustomEvent_ForceMip) == 0x000154, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CustomEvent_ForceMip' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000158, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_SetPortalCameraLocations_PlayerCameraLocation) == 0x000160, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_SetPortalCameraLocations_PlayerCameraLocation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_IsValid_ReturnValue_1) == 0x00016C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, Temp_object_Variable) == 0x000170, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_IsValid_ReturnValue_3) == 0x000181, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000184, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_IsValid_ReturnValue_4) == 0x000194, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000198, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Get_Item_2) == 0x0001A8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Length_ReturnValue_1) == 0x0001B0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0001B8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001C0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetDisplayName_ReturnValue_1) == 0x0001C8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, Temp_int_Loop_Counter_Variable_1) == 0x0001D8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001E0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_Event_InID) == 0x0001E4, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_Event_InID' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001EC, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001F0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000200, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Add_VectorVector_ReturnValue) == 0x000210, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Get_Item_3) == 0x000220, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000228, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0002B0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_bBlockingHit) == 0x0002B1, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002B2, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_Time) == 0x0002B4, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_Distance) == 0x0002B8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_Location) == 0x0002BC, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_Normal) == 0x0002D4, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_ImpactNormal) == 0x0002E0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_PhysMat) == 0x0002F0, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_HitActor) == 0x0002F8, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_HitComponent) == 0x000300, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_HitBoneName) == 0x000308, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_HitItem) == 0x000310, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_ElementIndex) == 0x000314, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_FaceIndex) == 0x000318, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_TraceStart) == 0x00031C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BreakHitResult_TraceEnd) == 0x000328, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Array_Length_ReturnValue_2) == 0x000334, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000338, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000339, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_Not_PreBool_ReturnValue) == 0x00033A, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00033B, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_BooleanAND_ReturnValue) == 0x00033C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000340, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_Event_ToDo) == 0x00034C, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_Event_ToDo' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_Event_bSimulated) == 0x00034D, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_Event_bSimulated' has a wrong offset!");
static_assert(offsetof(PortalBP_C_ExecuteUbergraph_PortalBP, K2Node_SwitchEnum_CmpSuccess) == 0x00034E, "Member 'PortalBP_C_ExecuteUbergraph_PortalBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PortalBP.PortalBP_C.DoActions
// 0x0002 (0x0002 - 0x0000)
struct PortalBP_C_DoActions final
{
public:
	EActionType                                   ToDo;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulated;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_DoActions) == 0x000001, "Wrong alignment on PortalBP_C_DoActions");
static_assert(sizeof(PortalBP_C_DoActions) == 0x000002, "Wrong size on PortalBP_C_DoActions");
static_assert(offsetof(PortalBP_C_DoActions, ToDo) == 0x000000, "Member 'PortalBP_C_DoActions::ToDo' has a wrong offset!");
static_assert(offsetof(PortalBP_C_DoActions, bSimulated) == 0x000001, "Member 'PortalBP_C_DoActions::bSimulated' has a wrong offset!");

// Function PortalBP.PortalBP_C.UpdateLinkID
// 0x0008 (0x0008 - 0x0000)
struct PortalBP_C_UpdateLinkID final
{
public:
	class FName                                   InID;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_UpdateLinkID) == 0x000004, "Wrong alignment on PortalBP_C_UpdateLinkID");
static_assert(sizeof(PortalBP_C_UpdateLinkID) == 0x000008, "Wrong size on PortalBP_C_UpdateLinkID");
static_assert(offsetof(PortalBP_C_UpdateLinkID, InID) == 0x000000, "Member 'PortalBP_C_UpdateLinkID::InID' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetupRender
// 0x0040 (0x0040 - 0x0000)
struct PortalBP_C_SetupRender final
{
public:
	struct FTransform                             CameraOrigin;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         RecurseDepth;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceMip;                                          // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_SetupRender) == 0x000010, "Wrong alignment on PortalBP_C_SetupRender");
static_assert(sizeof(PortalBP_C_SetupRender) == 0x000040, "Wrong size on PortalBP_C_SetupRender");
static_assert(offsetof(PortalBP_C_SetupRender, CameraOrigin) == 0x000000, "Member 'PortalBP_C_SetupRender::CameraOrigin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetupRender, RecurseDepth) == 0x000030, "Member 'PortalBP_C_SetupRender::RecurseDepth' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetupRender, ForceMip) == 0x000034, "Member 'PortalBP_C_SetupRender::ForceMip' has a wrong offset!");

// Function PortalBP.PortalBP_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct PortalBP_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on PortalBP_C_ReceiveActorEndOverlap");
static_assert(sizeof(PortalBP_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on PortalBP_C_ReceiveActorEndOverlap");
static_assert(offsetof(PortalBP_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'PortalBP_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function PortalBP.PortalBP_C.CustomBeginOverlap
// 0x0010 (0x0010 - 0x0000)
struct PortalBP_C_CustomBeginOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_CustomBeginOverlap) == 0x000008, "Wrong alignment on PortalBP_C_CustomBeginOverlap");
static_assert(sizeof(PortalBP_C_CustomBeginOverlap) == 0x000010, "Wrong size on PortalBP_C_CustomBeginOverlap");
static_assert(offsetof(PortalBP_C_CustomBeginOverlap, OverlappedActor) == 0x000000, "Member 'PortalBP_C_CustomBeginOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CustomBeginOverlap, OtherActor) == 0x000008, "Member 'PortalBP_C_CustomBeginOverlap::OtherActor' has a wrong offset!");

// Function PortalBP.PortalBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PortalBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_ReceiveTick) == 0x000004, "Wrong alignment on PortalBP_C_ReceiveTick");
static_assert(sizeof(PortalBP_C_ReceiveTick) == 0x000004, "Wrong size on PortalBP_C_ReceiveTick");
static_assert(offsetof(PortalBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PortalBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PortalBP.PortalBP_C.UserConstructionScript
// 0x01A0 (0x01A0 - 0x0000)
struct PortalBP_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PortalBP_C_UserConstructionScript) == 0x000010, "Wrong alignment on PortalBP_C_UserConstructionScript");
static_assert(sizeof(PortalBP_C_UserConstructionScript) == 0x0001A0, "Wrong size on PortalBP_C_UserConstructionScript");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_GetActorForwardVector_ReturnValue) == 0x000000, "Member 'PortalBP_C_UserConstructionScript::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, Temp_struct_Variable) == 0x000010, "Member 'PortalBP_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'PortalBP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'PortalBP_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'PortalBP_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00005C, "Member 'PortalBP_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'PortalBP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'PortalBP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_Cross_VectorVector_ReturnValue) == 0x000080, "Member 'PortalBP_C_UserConstructionScript::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00008C, "Member 'PortalBP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000090, "Member 'PortalBP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000094, "Member 'PortalBP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000098, "Member 'PortalBP_C_UserConstructionScript::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_MakeColor_ReturnValue) == 0x0000A4, "Member 'PortalBP_C_UserConstructionScript::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x0000B4, "Member 'PortalBP_C_UserConstructionScript::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_VSize_ReturnValue) == 0x0000C0, "Member 'PortalBP_C_UserConstructionScript::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C4, "Member 'PortalBP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'PortalBP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'PortalBP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000110, "Member 'PortalBP_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function PortalBP.PortalBP_C.CreateRenderTarget
// 0x0028 (0x0028 - 0x0000)
struct PortalBP_C_CreateRenderTarget final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_CreateRenderTarget) == 0x000008, "Wrong alignment on PortalBP_C_CreateRenderTarget");
static_assert(sizeof(PortalBP_C_CreateRenderTarget) == 0x000028, "Wrong size on PortalBP_C_CreateRenderTarget");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, InVec) == 0x000000, "Member 'PortalBP_C_CreateRenderTarget::InVec' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, ReturnValue) == 0x000008, "Member 'PortalBP_C_CreateRenderTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, CallFunc_BreakVector2D_X) == 0x000010, "Member 'PortalBP_C_CreateRenderTarget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'PortalBP_C_CreateRenderTarget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'PortalBP_C_CreateRenderTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, CallFunc_FTrunc_ReturnValue_1) == 0x00001C, "Member 'PortalBP_C_CreateRenderTarget::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CreateRenderTarget, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000020, "Member 'PortalBP_C_CreateRenderTarget::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetCurrentMipLevel
// 0x0020 (0x0020 - 0x0000)
struct PortalBP_C_SetCurrentMipLevel final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               Camera;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_SetCurrentMipLevel) == 0x000008, "Wrong alignment on PortalBP_C_SetCurrentMipLevel");
static_assert(sizeof(PortalBP_C_SetCurrentMipLevel) == 0x000020, "Wrong size on PortalBP_C_SetCurrentMipLevel");
static_assert(offsetof(PortalBP_C_SetCurrentMipLevel, Index_0) == 0x000000, "Member 'PortalBP_C_SetCurrentMipLevel::Index_0' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetCurrentMipLevel, Camera) == 0x000008, "Member 'PortalBP_C_SetCurrentMipLevel::Camera' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetCurrentMipLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'PortalBP_C_SetCurrentMipLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetCurrentMipLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'PortalBP_C_SetCurrentMipLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetCurrentMipLevel, CallFunc_Array_Get_Item) == 0x000018, "Member 'PortalBP_C_SetCurrentMipLevel::CallFunc_Array_Get_Item' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetupPortalTarget
// 0x0028 (0x0028 - 0x0000)
struct PortalBP_C_SetupPortalTarget final
{
public:
	class APortalBP_C*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_SetupPortalTarget) == 0x000008, "Wrong alignment on PortalBP_C_SetupPortalTarget");
static_assert(sizeof(PortalBP_C_SetupPortalTarget) == 0x000028, "Wrong size on PortalBP_C_SetupPortalTarget");
static_assert(offsetof(PortalBP_C_SetupPortalTarget, Target) == 0x000000, "Member 'PortalBP_C_SetupPortalTarget::Target' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetupPortalTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PortalBP_C_SetupPortalTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetupPortalTarget, CallFunc_Array_Get_Item) == 0x000010, "Member 'PortalBP_C_SetupPortalTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetupPortalTarget, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'PortalBP_C_SetupPortalTarget::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetupPortalTarget, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'PortalBP_C_SetupPortalTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetMaterialParams
// 0x0068 (0x0068 - 0x0000)
struct PortalBP_C_SetMaterialParams final
{
public:
	int32                                         texture_id;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          custom_matrix;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         invscale;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Offset;                                            // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParentInvscale;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ParentOffset;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          fake_matrix;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_SetMaterialParams) == 0x000008, "Wrong alignment on PortalBP_C_SetMaterialParams");
static_assert(sizeof(PortalBP_C_SetMaterialParams) == 0x000068, "Wrong size on PortalBP_C_SetMaterialParams");
static_assert(offsetof(PortalBP_C_SetMaterialParams, texture_id) == 0x000000, "Member 'PortalBP_C_SetMaterialParams::texture_id' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, custom_matrix) == 0x000004, "Member 'PortalBP_C_SetMaterialParams::custom_matrix' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, invscale) == 0x000008, "Member 'PortalBP_C_SetMaterialParams::invscale' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, Offset) == 0x00000C, "Member 'PortalBP_C_SetMaterialParams::Offset' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, ParentInvscale) == 0x000014, "Member 'PortalBP_C_SetMaterialParams::ParentInvscale' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, ParentOffset) == 0x000018, "Member 'PortalBP_C_SetMaterialParams::ParentOffset' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, fake_matrix) == 0x000020, "Member 'PortalBP_C_SetMaterialParams::fake_matrix' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000024, "Member 'PortalBP_C_SetMaterialParams::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_Array_Get_Item) == 0x000028, "Member 'PortalBP_C_SetMaterialParams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_BreakVector2D_X) == 0x000030, "Member 'PortalBP_C_SetMaterialParams::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'PortalBP_C_SetMaterialParams::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'PortalBP_C_SetMaterialParams::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_BreakVector2D_Y_1) == 0x00003C, "Member 'PortalBP_C_SetMaterialParams::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_MakeColor_ReturnValue) == 0x000040, "Member 'PortalBP_C_SetMaterialParams::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_MakeColor_ReturnValue_1) == 0x000050, "Member 'PortalBP_C_SetMaterialParams::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000060, "Member 'PortalBP_C_SetMaterialParams::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetMaterialParams, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'PortalBP_C_SetMaterialParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.CalcProjectionMatrix
// 0x0170 (0x0170 - 0x0000)
struct PortalBP_C_CalcProjectionMatrix final
{
public:
	struct FTransform                             CameraOrigin;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlane                                 K2Node_MakeStruct_Plane;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlane                                 K2Node_MakeStruct_Plane_1;                         // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlane                                 K2Node_MakeStruct_Plane_2;                         // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlane                                 K2Node_MakeStruct_Plane_3;                         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                K2Node_MakeStruct_Matrix;                          // 0x00F0(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PortalPointToScreen_ScreenLocation;       // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PortalPointToScreen_ReturnValue;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_CalcProjectionMatrix) == 0x000010, "Wrong alignment on PortalBP_C_CalcProjectionMatrix");
static_assert(sizeof(PortalBP_C_CalcProjectionMatrix) == 0x000170, "Wrong size on PortalBP_C_CalcProjectionMatrix");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CameraOrigin) == 0x000000, "Member 'PortalBP_C_CalcProjectionMatrix::CameraOrigin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_BreakVector2D_X) == 0x000038, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, K2Node_MakeStruct_Plane) == 0x000040, "Member 'PortalBP_C_CalcProjectionMatrix::K2Node_MakeStruct_Plane' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000054, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_GetFOVAngle_ReturnValue) == 0x000064, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_DegTan_ReturnValue) == 0x000070, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000074, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_BreakVector2D_Y_1) == 0x00007C, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000080, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000084, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000088, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, K2Node_MakeStruct_Plane_1) == 0x000090, "Member 'PortalBP_C_CalcProjectionMatrix::K2Node_MakeStruct_Plane_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, K2Node_MakeStruct_Plane_2) == 0x0000B0, "Member 'PortalBP_C_CalcProjectionMatrix::K2Node_MakeStruct_Plane_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000C0, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, K2Node_MakeStruct_Plane_3) == 0x0000D0, "Member 'PortalBP_C_CalcProjectionMatrix::K2Node_MakeStruct_Plane_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000E0, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, K2Node_MakeStruct_Matrix) == 0x0000F0, "Member 'PortalBP_C_CalcProjectionMatrix::K2Node_MakeStruct_Matrix' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_GetViewportSize_ReturnValue_1) == 0x00013C, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_PortalPointToScreen_ScreenLocation) == 0x000144, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_PortalPointToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_PortalPointToScreen_ReturnValue) == 0x00014C, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_PortalPointToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000150, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x000158, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000160, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcProjectionMatrix, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000168, "Member 'PortalBP_C_CalcProjectionMatrix::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");

// Function PortalBP.PortalBP_C.RenderNoRecur
// 0x0001 (0x0001 - 0x0000)
struct PortalBP_C_RenderNoRecur final
{
public:
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_RenderNoRecur) == 0x000001, "Wrong alignment on PortalBP_C_RenderNoRecur");
static_assert(sizeof(PortalBP_C_RenderNoRecur) == 0x000001, "Wrong size on PortalBP_C_RenderNoRecur");
static_assert(offsetof(PortalBP_C_RenderNoRecur, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000000, "Member 'PortalBP_C_RenderNoRecur::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.CheckCaptureFrameSimple
// 0x00B0 (0x00B0 - 0x0000)
struct PortalBP_C_CheckCaptureFrameSimple final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_CheckCaptureFrameSimple) == 0x000010, "Wrong alignment on PortalBP_C_CheckCaptureFrameSimple");
static_assert(sizeof(PortalBP_C_CheckCaptureFrameSimple) == 0x0000B0, "Wrong size on PortalBP_C_CheckCaptureFrameSimple");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CameraTransform) == 0x000000, "Member 'PortalBP_C_CheckCaptureFrameSimple::CameraTransform' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_BreakTransform_Location) == 0x000030, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000064, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000070, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_GetActorForwardVector_ReturnValue) == 0x000074, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_Dot_VectorVector_ReturnValue) == 0x00009C, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A0, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckCaptureFrameSimple, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A2, "Member 'PortalBP_C_CheckCaptureFrameSimple::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetClipPlane
// 0x0038 (0x0038 - 0x0000)
struct PortalBP_C_SetClipPlane final
{
public:
	class USceneCaptureComponent2D*               SceneCapture;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_SetClipPlane) == 0x000008, "Wrong alignment on PortalBP_C_SetClipPlane");
static_assert(sizeof(PortalBP_C_SetClipPlane) == 0x000038, "Wrong size on PortalBP_C_SetClipPlane");
static_assert(offsetof(PortalBP_C_SetClipPlane, SceneCapture) == 0x000000, "Member 'PortalBP_C_SetClipPlane::SceneCapture' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetClipPlane, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'PortalBP_C_SetClipPlane::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetClipPlane, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'PortalBP_C_SetClipPlane::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetClipPlane, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'PortalBP_C_SetClipPlane::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetClipPlane, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'PortalBP_C_SetClipPlane::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetPortalCameraLocations
// 0x0100 (0x0100 - 0x0000)
struct PortalBP_C_SetPortalCameraLocations final
{
public:
	struct FTransform                             CameraOrigin;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                PlayerCameraLocation;                              // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ChangeRotation_NewParam;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ChangeLocation_new_location;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PortalBP_C_SetPortalCameraLocations) == 0x000010, "Wrong alignment on PortalBP_C_SetPortalCameraLocations");
static_assert(sizeof(PortalBP_C_SetPortalCameraLocations) == 0x000100, "Wrong size on PortalBP_C_SetPortalCameraLocations");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CameraOrigin) == 0x000000, "Member 'PortalBP_C_SetPortalCameraLocations::CameraOrigin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, PlayerCameraLocation) == 0x000030, "Member 'PortalBP_C_SetPortalCameraLocations::PlayerCameraLocation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CallFunc_BreakTransform_Location) == 0x00003C, "Member 'PortalBP_C_SetPortalCameraLocations::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CallFunc_BreakTransform_Rotation) == 0x000048, "Member 'PortalBP_C_SetPortalCameraLocations::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CallFunc_BreakTransform_Scale) == 0x000054, "Member 'PortalBP_C_SetPortalCameraLocations::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CallFunc_ChangeRotation_NewParam) == 0x000060, "Member 'PortalBP_C_SetPortalCameraLocations::CallFunc_ChangeRotation_NewParam' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CallFunc_ChangeLocation_new_location) == 0x00006C, "Member 'PortalBP_C_SetPortalCameraLocations::CallFunc_ChangeLocation_new_location' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraLocations, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000078, "Member 'PortalBP_C_SetPortalCameraLocations::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetPortalCameraParams
// 0x0010 (0x0010 - 0x0000)
struct PortalBP_C_SetPortalCameraParams final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_SetPortalCameraParams) == 0x000008, "Wrong alignment on PortalBP_C_SetPortalCameraParams");
static_assert(sizeof(PortalBP_C_SetPortalCameraParams) == 0x000010, "Wrong size on PortalBP_C_SetPortalCameraParams");
static_assert(offsetof(PortalBP_C_SetPortalCameraParams, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'PortalBP_C_SetPortalCameraParams::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetPortalCameraParams, CallFunc_GetFOVAngle_ReturnValue) == 0x000008, "Member 'PortalBP_C_SetPortalCameraParams::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.EnsureComponentHasCloner
// 0x0070 (0x0070 - 0x0000)
struct PortalBP_C_EnsureComponentHasCloner final
{
public:
	class AActor*                                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPortal_BP_clone_component_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APortalBP_C*                            K2Node_DynamicCast_AsPortal_BP;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UPortal_BP_clone_component_C*           CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_EnsureComponentHasCloner) == 0x000010, "Wrong alignment on PortalBP_C_EnsureComponentHasCloner");
static_assert(sizeof(PortalBP_C_EnsureComponentHasCloner) == 0x000070, "Wrong size on PortalBP_C_EnsureComponentHasCloner");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, InputPin) == 0x000000, "Member 'PortalBP_C_EnsureComponentHasCloner::InputPin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'PortalBP_C_EnsureComponentHasCloner::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PortalBP_C_EnsureComponentHasCloner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'PortalBP_C_EnsureComponentHasCloner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, K2Node_DynamicCast_AsPortal_BP) == 0x000018, "Member 'PortalBP_C_EnsureComponentHasCloner::K2Node_DynamicCast_AsPortal_BP' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PortalBP_C_EnsureComponentHasCloner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, Temp_struct_Variable) == 0x000030, "Member 'PortalBP_C_EnsureComponentHasCloner::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_EnsureComponentHasCloner, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'PortalBP_C_EnsureComponentHasCloner::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.CheckGenAntiClippingMesh
// 0x0002 (0x0002 - 0x0000)
struct PortalBP_C_CheckGenAntiClippingMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_CheckGenAntiClippingMesh) == 0x000001, "Wrong alignment on PortalBP_C_CheckGenAntiClippingMesh");
static_assert(sizeof(PortalBP_C_CheckGenAntiClippingMesh) == 0x000002, "Wrong size on PortalBP_C_CheckGenAntiClippingMesh");
static_assert(offsetof(PortalBP_C_CheckGenAntiClippingMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PortalBP_C_CheckGenAntiClippingMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CheckGenAntiClippingMesh, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'PortalBP_C_CheckGenAntiClippingMesh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.GenerateAntiClippingMesh
// 0x0158 (0x0158 - 0x0000)
struct PortalBP_C_GenerateAntiClippingMesh final
{
public:
	class UMaterialInstanceDynamic*               TargetMaterial;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      Temp_struct_Variable_1;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      Temp_struct_Variable_2;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FLinearColor>                   Temp_struct_Variable_3;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0048(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GenerateBoxMesh_Vertices;                 // 0x0080(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GenerateBoxMesh_Triangles;                // 0x0090(0x0010)(ReferenceParm)
	TArray<struct FVector>                        CallFunc_GenerateBoxMesh_Normals;                  // 0x00A0(0x0010)(ReferenceParm)
	TArray<struct FVector2D>                      CallFunc_GenerateBoxMesh_UVs;                      // 0x00B0(0x0010)(ReferenceParm)
	TArray<struct FProcMeshTangent>               CallFunc_GenerateBoxMesh_Tangents;                 // 0x00C0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProceduralMeshComponent*               CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProceduralMeshComponent*               CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh_1; // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_GenerateAntiClippingMesh) == 0x000008, "Wrong alignment on PortalBP_C_GenerateAntiClippingMesh");
static_assert(sizeof(PortalBP_C_GenerateAntiClippingMesh) == 0x000158, "Wrong size on PortalBP_C_GenerateAntiClippingMesh");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, TargetMaterial) == 0x000000, "Member 'PortalBP_C_GenerateAntiClippingMesh::TargetMaterial' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, Temp_struct_Variable) == 0x000008, "Member 'PortalBP_C_GenerateAntiClippingMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, Temp_struct_Variable_1) == 0x000018, "Member 'PortalBP_C_GenerateAntiClippingMesh::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, Temp_struct_Variable_2) == 0x000028, "Member 'PortalBP_C_GenerateAntiClippingMesh::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, Temp_struct_Variable_3) == 0x000038, "Member 'PortalBP_C_GenerateAntiClippingMesh::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GetBounds_ReturnValue) == 0x000048, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GetActorScale3D_ReturnValue) == 0x000068, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000074, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GenerateBoxMesh_Vertices) == 0x000080, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GenerateBoxMesh_Vertices' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GenerateBoxMesh_Triangles) == 0x000090, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GenerateBoxMesh_Triangles' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GenerateBoxMesh_Normals) == 0x0000A0, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GenerateBoxMesh_Normals' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GenerateBoxMesh_UVs) == 0x0000B0, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GenerateBoxMesh_UVs' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GenerateBoxMesh_Tangents) == 0x0000C0, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GenerateBoxMesh_Tangents' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D0, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GetForwardVector_ReturnValue) == 0x0000DC, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000E8, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000FC, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh) == 0x000108, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000110, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00011C, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_GetForwardVector_ReturnValue_2) == 0x000128, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000134, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GenerateAntiClippingMesh, CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh_1) == 0x000150, "Member 'PortalBP_C_GenerateAntiClippingMesh::CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh_1' has a wrong offset!");

// Function PortalBP.PortalBP_C.MoveOutOfWalls
// 0x0288 (0x0288 - 0x0000)
struct PortalBP_C_MoveOutOfWalls final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0070(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x01FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PortalBP_C_MoveOutOfWalls) == 0x000008, "Wrong alignment on PortalBP_C_MoveOutOfWalls");
static_assert(sizeof(PortalBP_C_MoveOutOfWalls) == 0x000288, "Wrong size on PortalBP_C_MoveOutOfWalls");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'PortalBP_C_MoveOutOfWalls::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PortalBP_C_MoveOutOfWalls::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, Temp_object_Variable) == 0x000010, "Member 'PortalBP_C_MoveOutOfWalls::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_GetActorScale3D_ReturnValue) == 0x000020, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_GetActorRightVector_ReturnValue) == 0x00002C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_GetActorUpVector_ReturnValue) == 0x000038, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000050, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, K2Node_MakeArray_Array) == 0x000060, "Member 'PortalBP_C_MoveOutOfWalls::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, K2Node_MakeArray_Array_1) == 0x000070, "Member 'PortalBP_C_MoveOutOfWalls::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Array_Get_Item) == 0x00008C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00009C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000AC, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000C4, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00014C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000150, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Normal_ReturnValue) == 0x00015C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_VSize_ReturnValue) == 0x000168, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_bBlockingHit) == 0x00016C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016D, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_Time) == 0x000170, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_Distance) == 0x000174, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_ImpactPoint) == 0x000184, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_Normal) == 0x000190, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_ImpactNormal) == 0x00019C, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_TraceStart) == 0x0001D4, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001EC, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001F0, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_MoveOutOfWalls, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0001FC, "Member 'PortalBP_C_MoveOutOfWalls::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");

// Function PortalBP.PortalBP_C.CalculateMipMapLevel
// 0x00B0 (0x00B0 - 0x0000)
struct PortalBP_C_CalculateMipMapLevel final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecurseDepth;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceMip;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Atan_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_CalculateMipMapLevel) == 0x000008, "Wrong alignment on PortalBP_C_CalculateMipMapLevel");
static_assert(sizeof(PortalBP_C_CalculateMipMapLevel) == 0x0000B0, "Wrong size on PortalBP_C_CalculateMipMapLevel");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, StartPos) == 0x000000, "Member 'PortalBP_C_CalculateMipMapLevel::StartPos' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, RecurseDepth) == 0x00000C, "Member 'PortalBP_C_CalculateMipMapLevel::RecurseDepth' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, ForceMip) == 0x000010, "Member 'PortalBP_C_CalculateMipMapLevel::ForceMip' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_GetFOVAngle_ReturnValue) == 0x000030, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_DegreesToRadians_ReturnValue) == 0x000040, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_VSize_ReturnValue) == 0x000044, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_GetComponentBounds_Origin) == 0x00004C, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_GetComponentBounds_BoxExtent) == 0x000058, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_GetComponentBounds_SphereRadius) == 0x000064, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Atan_ReturnValue) == 0x000074, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Atan_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_GetViewportSize_ReturnValue) == 0x000078, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_VSize2D_ReturnValue) == 0x000080, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000088, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00008C, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000094, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_BreakVector2D_X) == 0x000098, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_BreakVector2D_Y) == 0x00009C, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_FFloor_ReturnValue) == 0x0000A8, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalculateMipMapLevel, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'PortalBP_C_CalculateMipMapLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.PortalPointToScreen
// 0x00C0 (0x00C0 - 0x0000)
struct PortalBP_C_PortalPointToScreen final
{
public:
	struct FTransform                             CameraOrigin;                                      // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                Location;                                          // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenLocation;                                    // 0x003C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_PortalPointToScreen) == 0x000010, "Wrong alignment on PortalBP_C_PortalPointToScreen");
static_assert(sizeof(PortalBP_C_PortalPointToScreen) == 0x0000C0, "Wrong size on PortalBP_C_PortalPointToScreen");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CameraOrigin) == 0x000000, "Member 'PortalBP_C_PortalPointToScreen::CameraOrigin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, Location) == 0x000030, "Member 'PortalBP_C_PortalPointToScreen::Location' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, ScreenLocation) == 0x00003C, "Member 'PortalBP_C_PortalPointToScreen::ScreenLocation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, ReturnValue) == 0x000044, "Member 'PortalBP_C_PortalPointToScreen::ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000048, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_InverseTransformLocation_ReturnValue) == 0x000050, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_TransformLocation_ReturnValue) == 0x0000A0, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x0000AC, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(PortalBP_C_PortalPointToScreen, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x0000B4, "Member 'PortalBP_C_PortalPointToScreen::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.CalcScreenRadiusFromPosition
// 0x0080 (0x0080 - 0x0000)
struct PortalBP_C_CalcScreenRadiusFromPosition final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         radius_screenspace;                                // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Atan_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PortalBP_C_CalcScreenRadiusFromPosition) == 0x000008, "Wrong alignment on PortalBP_C_CalcScreenRadiusFromPosition");
static_assert(sizeof(PortalBP_C_CalcScreenRadiusFromPosition) == 0x000080, "Wrong size on PortalBP_C_CalcScreenRadiusFromPosition");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, StartPos) == 0x000000, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::StartPos' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, radius_screenspace) == 0x00000C, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::radius_screenspace' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_GetViewportSize_ReturnValue) == 0x00001C, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_VSize2D_ReturnValue) == 0x000030, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_BreakVector2D_X) == 0x000038, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_GetComponentBounds_Origin) == 0x000048, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_GetComponentBounds_BoxExtent) == 0x000054, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_GetComponentBounds_SphereRadius) == 0x000060, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_GetFOVAngle_ReturnValue) == 0x000068, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_Atan_ReturnValue) == 0x00006C, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_Atan_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_DegreesToRadians_ReturnValue) == 0x000070, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000074, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_CalcScreenRadiusFromPosition, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'PortalBP_C_CalcScreenRadiusFromPosition::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function PortalBP.PortalBP_C.SetNewTargetPortal
// 0x0010 (0x0010 - 0x0000)
struct PortalBP_C_SetNewTargetPortal final
{
public:
	class APortalBP_C*                            TargetPortal_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_SetNewTargetPortal) == 0x000008, "Wrong alignment on PortalBP_C_SetNewTargetPortal");
static_assert(sizeof(PortalBP_C_SetNewTargetPortal) == 0x000010, "Wrong size on PortalBP_C_SetNewTargetPortal");
static_assert(offsetof(PortalBP_C_SetNewTargetPortal, TargetPortal_0) == 0x000000, "Member 'PortalBP_C_SetNewTargetPortal::TargetPortal_0' has a wrong offset!");
static_assert(offsetof(PortalBP_C_SetNewTargetPortal, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PortalBP_C_SetNewTargetPortal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PortalBP.PortalBP_C.Set Detail
// 0x0001 (0x0001 - 0x0000)
struct PortalBP_C_Set_Detail final
{
public:
	bool                                          bHigh;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PortalBP_C_Set_Detail) == 0x000001, "Wrong alignment on PortalBP_C_Set_Detail");
static_assert(sizeof(PortalBP_C_Set_Detail) == 0x000001, "Wrong size on PortalBP_C_Set_Detail");
static_assert(offsetof(PortalBP_C_Set_Detail, bHigh) == 0x000000, "Member 'PortalBP_C_Set_Detail::bHigh' has a wrong offset!");

// Function PortalBP.PortalBP_C.GetActions
// 0x0020 (0x0020 - 0x0000)
struct PortalBP_C_GetActions final
{
public:
	TArray<EActionType>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EActionType>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(PortalBP_C_GetActions) == 0x000008, "Wrong alignment on PortalBP_C_GetActions");
static_assert(sizeof(PortalBP_C_GetActions) == 0x000020, "Wrong size on PortalBP_C_GetActions");
static_assert(offsetof(PortalBP_C_GetActions, ReturnValue) == 0x000000, "Member 'PortalBP_C_GetActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(PortalBP_C_GetActions, K2Node_MakeArray_Array) == 0x000010, "Member 'PortalBP_C_GetActions::K2Node_MakeArray_Array' has a wrong offset!");

}

