#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Void

#include "Basic.hpp"

#include "BP_Void_classes.hpp"
#include "BP_Void_parameters.hpp"


namespace SDK
{

// Function BP_Void.BP_Void_C.ExecuteUbergraph_BP_Void
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Void_C::ExecuteUbergraph_BP_Void(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "ExecuteUbergraph_BP_Void");

	Params::BP_Void_C_ExecuteUbergraph_BP_Void Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.SetInEditor
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEditor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Void_C::SetInEditor(bool bInEditor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "SetInEditor");

	Params::BP_Void_C_SetInEditor Parms{};

	Parms.bInEditor = bInEditor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.UpdateInvisDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInInvis                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Void_C::UpdateInvisDisplay(bool bInInvis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "UpdateInvisDisplay");

	Params::BP_Void_C_UpdateInvisDisplay Parms{};

	Parms.bInInvis = bInInvis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.DoActions
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActionType                             ToDo                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSimulated                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Void_C::DoActions(EActionType ToDo, bool bSimulated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "DoActions");

	Params::BP_Void_C_DoActions Parms{};

	Parms.ToDo = ToDo;
	Parms.bSimulated = bSimulated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.OnLevelReady
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Void_C::OnLevelReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "OnLevelReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Void.BP_Void_C.OnEditorModeChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EEditMode                               NewEditMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Void_C::OnEditorModeChange(EEditMode NewEditMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "OnEditorModeChange");

	Params::BP_Void_C_OnEditorModeChange Parms{};

	Parms.NewEditMode = NewEditMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Void_C::CustomEvent_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "CustomEvent_0");

	Params::BP_Void_C_CustomEvent_0 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.OnComponentBeginOverlap_Event_0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Void_C::OnComponentBeginOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "OnComponentBeginOverlap_Event_0");

	Params::BP_Void_C_OnComponentBeginOverlap_Event_0 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.MakeHole
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldLoc                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Void_C::MakeHole(const struct FVector& WorldLoc, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "MakeHole");

	Params::BP_Void_C_MakeHole Parms{};

	Parms.WorldLoc = std::move(WorldLoc);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.ShutdownField
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Center                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Void_C::ShutdownField(const struct FVector& Center)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "ShutdownField");

	Params::BP_Void_C_ShutdownField Parms{};

	Parms.Center = std::move(Center);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.UpdateFFDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InFiekd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Void_C::UpdateFFDisplay(bool InFiekd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "UpdateFFDisplay");

	Params::BP_Void_C_UpdateFFDisplay Parms{};

	Parms.InFiekd = InFiekd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Void.BP_Void_C.PostDataLoaded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Void_C::PostDataLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "PostDataLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Void.BP_Void_C.FadeTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Void_C::FadeTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "FadeTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Void.BP_Void_C.FadeTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Void_C::FadeTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "FadeTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Void.BP_Void_C.GetShouldSave
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Void_C::GetShouldSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "GetShouldSave");

	Params::BP_Void_C_GetShouldSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Void.BP_Void_C.GetActions
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EActionType>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<EActionType> ABP_Void_C::GetActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Void_C", "GetActions");

	Params::BP_Void_C_GetActions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

