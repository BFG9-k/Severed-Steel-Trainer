#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AudioSettings

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_AudioSettings.WBP_AudioSettings_C.ExecuteUbergraph_WBP_AudioSettings
// 0x0160 (0x0160 - 0x0000)
struct WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_CONFIRM_C*                         CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomTrackCount_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_2;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_3;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_2;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_3;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_4;                 // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MusicCombo_2_C*                    K2Node_DynamicCast_AsWBP_Music_Combo_2;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_NewValue_4;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_NewValue_3;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_NewValue_2;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue_5;                 // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_NewValue_1;             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_NewValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatform_ReturnValue_6;                 // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MusicCombo_2_C*                    K2Node_DynamicCast_AsWBP_Music_Combo_2_1;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0118(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0130(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_2;                              // 0x0148(0x0018)(ConstParm)
};
static_assert(alignof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings");
static_assert(sizeof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings) == 0x000160, "Wrong size on WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, EntryPoint) == 0x000000, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_bool_Variable) == 0x000004, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable) == 0x000005, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetTYVCGameMode_NewParam) == 0x000030, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetCustomTrackCount_ReturnValue) == 0x000038, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetCustomTrackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000040, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000081, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000082, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_BooleanOR_ReturnValue) == 0x000083, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000084, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000085, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_BooleanOR_ReturnValue_1) == 0x000086, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000087, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_BooleanOR_ReturnValue_2) == 0x000088, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_Select_Default) == 0x000089, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00008A, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00008B, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_2) == 0x00008C, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_BooleanOR_ReturnValue_3) == 0x00008D, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetTYVCGameMode_NewParam_2) == 0x000090, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetTYVCGameMode_NewParam_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_3) == 0x000098, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_bool_Variable_1) == 0x000099, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_Select_Default_1) == 0x00009A, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue) == 0x00009B, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetTYVCGameMode_NewParam_3) == 0x0000A0, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetTYVCGameMode_NewParam_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue_1) == 0x0000A8, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue_2) == 0x0000A9, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue_3) == 0x0000AB, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AC, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue_4) == 0x0000AD, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000AE, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_4) == 0x0000AF, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_5) == 0x0000B0, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetChildAt_ReturnValue) == 0x0000B8, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetChildrenCount_ReturnValue) == 0x0000C0, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_DynamicCast_AsWBP_Music_Combo_2) == 0x0000C8, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_DynamicCast_AsWBP_Music_Combo_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D1, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_ComponentBoundEvent_NewValue_4) == 0x0000D4, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_ComponentBoundEvent_NewValue_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_ComponentBoundEvent_NewValue_3) == 0x0000D8, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_ComponentBoundEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_bool_Variable_2) == 0x0000DC, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_ComponentBoundEvent_NewValue_2) == 0x0000E0, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_ComponentBoundEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue_5) == 0x0000E4, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_Select_Default_2) == 0x0000E5, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_6) == 0x0000E6, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetVisibility_ReturnValue) == 0x0000E7, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0000E8, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_ComponentBoundEvent_NewValue_1) == 0x0000EC, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_ComponentBoundEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_ComponentBoundEvent_NewValue) == 0x0000F0, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_ComponentBoundEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_byte_Variable_7) == 0x0000F4, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_bool_Variable_3) == 0x0000F5, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_IsPlatform_ReturnValue_6) == 0x0000F6, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_IsPlatform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_Select_Default_3) == 0x0000F7, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetChildAt_ReturnValue_1) == 0x0000F8, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_DynamicCast_AsWBP_Music_Combo_2_1) == 0x000100, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_DynamicCast_AsWBP_Music_Combo_2_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_GetChildrenCount_ReturnValue_1) == 0x00010C, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000110, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_text_Variable) == 0x000118, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_text_Variable_1) == 0x000130, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings, Temp_text_Variable_2) == 0x000148, "Member 'WBP_AudioSettings_C_ExecuteUbergraph_WBP_AudioSettings::Temp_text_Variable_2' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_AudioSettings_C_BndEvt__GameSlider_1_K2Node_ComponentBoundEvent_3_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_AudioSettings_C_BndEvt__WBP_AudioSettings_NPCSLIDER_K2Node_ComponentBoundEvent_5_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_1_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature");
static_assert(sizeof(WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature) == 0x000004, "Wrong size on WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature");
static_assert(offsetof(WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_AudioSettings_C_BndEvt__GameSlider_K2Node_ComponentBoundEvent_2_LostFocusWithDelta__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.UpdateDisplay
// 0x0070 (0x0070 - 0x0000)
struct WBP_AudioSettings_C_UpdateDisplay final
{
public:
	EOSTMode                                      Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCustomTrackPath_OutPath;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x006C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_UpdateDisplay) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_UpdateDisplay");
static_assert(sizeof(WBP_AudioSettings_C_UpdateDisplay) == 0x000070, "Wrong size on WBP_AudioSettings_C_UpdateDisplay");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_byte_Variable) == 0x000000, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable) == 0x000004, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_1) == 0x000008, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_3) == 0x000010, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_byte_Variable_1) == 0x000014, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_4) == 0x000018, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_5) == 0x00001C, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_6) == 0x000020, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, Temp_int_Variable_7) == 0x000024, "Member 'WBP_AudioSettings_C_UpdateDisplay::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, CallFunc_IsPlatform_ReturnValue) == 0x000028, "Member 'WBP_AudioSettings_C_UpdateDisplay::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, CallFunc_GetTYVCGameMode_NewParam) == 0x000030, "Member 'WBP_AudioSettings_C_UpdateDisplay::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, CallFunc_GetCustomTrackPath_OutPath) == 0x000038, "Member 'WBP_AudioSettings_C_UpdateDisplay::CallFunc_GetCustomTrackPath_OutPath' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_AudioSettings_C_UpdateDisplay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, CallFunc_GetTYVCGameMode_NewParam_1) == 0x000060, "Member 'WBP_AudioSettings_C_UpdateDisplay::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, K2Node_Select_Default) == 0x000068, "Member 'WBP_AudioSettings_C_UpdateDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_UpdateDisplay, K2Node_Select_Default_1) == 0x00006C, "Member 'WBP_AudioSettings_C_UpdateDisplay::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.GetDefaultFocus
// 0x0008 (0x0008 - 0x0000)
struct WBP_AudioSettings_C_GetDefaultFocus final
{
public:
	class UWidget*                                NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_GetDefaultFocus) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_GetDefaultFocus");
static_assert(sizeof(WBP_AudioSettings_C_GetDefaultFocus) == 0x000008, "Wrong size on WBP_AudioSettings_C_GetDefaultFocus");
static_assert(offsetof(WBP_AudioSettings_C_GetDefaultFocus, NewParam) == 0x000000, "Member 'WBP_AudioSettings_C_GetDefaultFocus::NewParam' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.LeftMaster
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_LeftMaster final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_LeftMaster) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_LeftMaster");
static_assert(sizeof(WBP_AudioSettings_C_LeftMaster) == 0x000010, "Wrong size on WBP_AudioSettings_C_LeftMaster");
static_assert(offsetof(WBP_AudioSettings_C_LeftMaster, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_LeftMaster::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_LeftMaster, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_LeftMaster::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.GatherAndSave
// 0x0078 (0x0078 - 0x0000)
struct WBP_AudioSettings_C_GatherAndSave final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable_4;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      Temp_byte_Variable_5;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_ReturnValue_1;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOSTMode                                      K2Node_Select_Default_1;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTYVCAudioSettings                     K2Node_MakeStruct_TYVCAudioSettings;               // 0x0040(0x0038)()
};
static_assert(alignof(WBP_AudioSettings_C_GatherAndSave) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_GatherAndSave");
static_assert(sizeof(WBP_AudioSettings_C_GatherAndSave) == 0x000078, "Wrong size on WBP_AudioSettings_C_GatherAndSave");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_int_Variable) == 0x000000, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_byte_Variable) == 0x000004, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_int_Variable_1) == 0x000008, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_byte_Variable_2) == 0x00000C, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_byte_Variable_3) == 0x00000D, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_byte_Variable_4) == 0x00000E, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, Temp_byte_Variable_5) == 0x00000F, "Member 'WBP_AudioSettings_C_GatherAndSave::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetSelectedIndex_ReturnValue) == 0x000010, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, K2Node_Select_Default) == 0x000014, "Member 'WBP_AudioSettings_C_GatherAndSave::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetSelectedIndex_ReturnValue_1) == 0x000018, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetSelectedIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue) == 0x00001C, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_AudioSettings_C_GatherAndSave::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue_1) == 0x000024, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetTYVCGameMode_NewParam) == 0x000028, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue_2) == 0x000030, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue_3) == 0x000034, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, CallFunc_GetValue_ReturnValue_4) == 0x000038, "Member 'WBP_AudioSettings_C_GatherAndSave::CallFunc_GetValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_GatherAndSave, K2Node_MakeStruct_TYVCAudioSettings) == 0x000040, "Member 'WBP_AudioSettings_C_GatherAndSave::K2Node_MakeStruct_TYVCAudioSettings' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Right Master
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Right_Master final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Right_Master) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Right_Master");
static_assert(sizeof(WBP_AudioSettings_C_Right_Master) == 0x000010, "Wrong size on WBP_AudioSettings_C_Right_Master");
static_assert(offsetof(WBP_AudioSettings_C_Right_Master, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Right_Master::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Right_Master, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Right_Master::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Left Music
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Left_Music final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Left_Music) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Left_Music");
static_assert(sizeof(WBP_AudioSettings_C_Left_Music) == 0x000010, "Wrong size on WBP_AudioSettings_C_Left_Music");
static_assert(offsetof(WBP_AudioSettings_C_Left_Music, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Left_Music::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Left_Music, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Left_Music::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Right Music
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Right_Music final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Right_Music) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Right_Music");
static_assert(sizeof(WBP_AudioSettings_C_Right_Music) == 0x000010, "Wrong size on WBP_AudioSettings_C_Right_Music");
static_assert(offsetof(WBP_AudioSettings_C_Right_Music, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Right_Music::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Right_Music, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Right_Music::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Left Game
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Left_Game final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Left_Game) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Left_Game");
static_assert(sizeof(WBP_AudioSettings_C_Left_Game) == 0x000010, "Wrong size on WBP_AudioSettings_C_Left_Game");
static_assert(offsetof(WBP_AudioSettings_C_Left_Game, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Left_Game::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Left_Game, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Left_Game::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Right Game
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Right_Game final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Right_Game) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Right_Game");
static_assert(sizeof(WBP_AudioSettings_C_Right_Game) == 0x000010, "Wrong size on WBP_AudioSettings_C_Right_Game");
static_assert(offsetof(WBP_AudioSettings_C_Right_Game, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Right_Game::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Right_Game, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Right_Game::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Left Arcade
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Left_Arcade final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Left_Arcade) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Left_Arcade");
static_assert(sizeof(WBP_AudioSettings_C_Left_Arcade) == 0x000010, "Wrong size on WBP_AudioSettings_C_Left_Arcade");
static_assert(offsetof(WBP_AudioSettings_C_Left_Arcade, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Left_Arcade::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Left_Arcade, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Left_Arcade::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.Right Arcade
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_Right_Arcade final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_Right_Arcade) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_Right_Arcade");
static_assert(sizeof(WBP_AudioSettings_C_Right_Arcade) == 0x000010, "Wrong size on WBP_AudioSettings_C_Right_Arcade");
static_assert(offsetof(WBP_AudioSettings_C_Right_Arcade, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_Right_Arcade::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_Right_Arcade, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_Right_Arcade::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.LeftNPC
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_LeftNPC final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_LeftNPC) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_LeftNPC");
static_assert(sizeof(WBP_AudioSettings_C_LeftNPC) == 0x000010, "Wrong size on WBP_AudioSettings_C_LeftNPC");
static_assert(offsetof(WBP_AudioSettings_C_LeftNPC, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_LeftNPC::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_LeftNPC, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_LeftNPC::ReturnValue' has a wrong offset!");

// Function WBP_AudioSettings.WBP_AudioSettings_C.RightNPC
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioSettings_C_RightNPC final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AudioSettings_C_RightNPC) == 0x000008, "Wrong alignment on WBP_AudioSettings_C_RightNPC");
static_assert(sizeof(WBP_AudioSettings_C_RightNPC) == 0x000010, "Wrong size on WBP_AudioSettings_C_RightNPC");
static_assert(offsetof(WBP_AudioSettings_C_RightNPC, Navigation_0) == 0x000000, "Member 'WBP_AudioSettings_C_RightNPC::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_AudioSettings_C_RightNPC, ReturnValue) == 0x000008, "Member 'WBP_AudioSettings_C_RightNPC::ReturnValue' has a wrong offset!");

}

