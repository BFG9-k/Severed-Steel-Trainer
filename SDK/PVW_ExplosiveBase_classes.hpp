#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PVW_ExplosiveBase

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_PropVoxelWorld_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PVW_ExplosiveBase.PVW_ExplosiveBase_C
// 0x0030 (0x0AE0 - 0x0AB0)
class APVW_ExplosiveBase_C : public ABP_PropVoxelWorld_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PVW_ExplosiveBase_C;                // 0x0AB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bExplodeAtHit;                                     // 0x0AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB9[0x7];                                      // 0x0AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ExplosionFX_0;                                     // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MyStartingLoc;                                     // 0x0AC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowHealth;                                       // 0x0AD4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD5[0x3];                                      // 0x0AD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentMoveIndex;                                  // 0x0AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PVW_ExplosiveBase(int32 EntryPoint);
	void ReceiveDestroyed();
	void RemoveCompass();
	void CustomEvent_1();
	void CustomEvent_0();
	void DoActions(EActionType ToDo, bool bSimulated);
	bool OnHit(EImpactType ImpactType, const struct FHitResult& HitResult, float Dmg);
	TArray<EGoalType> GetGoals();
	void Xplode();
	TArray<EActionType> GetActions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PVW_ExplosiveBase_C">();
	}
	static class APVW_ExplosiveBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APVW_ExplosiveBase_C>();
	}
};
static_assert(alignof(APVW_ExplosiveBase_C) == 0x000008, "Wrong alignment on APVW_ExplosiveBase_C");
static_assert(sizeof(APVW_ExplosiveBase_C) == 0x000AE0, "Wrong size on APVW_ExplosiveBase_C");
static_assert(offsetof(APVW_ExplosiveBase_C, UberGraphFrame_PVW_ExplosiveBase_C) == 0x000AB0, "Member 'APVW_ExplosiveBase_C::UberGraphFrame_PVW_ExplosiveBase_C' has a wrong offset!");
static_assert(offsetof(APVW_ExplosiveBase_C, bExplodeAtHit) == 0x000AB8, "Member 'APVW_ExplosiveBase_C::bExplodeAtHit' has a wrong offset!");
static_assert(offsetof(APVW_ExplosiveBase_C, ExplosionFX_0) == 0x000AC0, "Member 'APVW_ExplosiveBase_C::ExplosionFX_0' has a wrong offset!");
static_assert(offsetof(APVW_ExplosiveBase_C, MyStartingLoc) == 0x000AC8, "Member 'APVW_ExplosiveBase_C::MyStartingLoc' has a wrong offset!");
static_assert(offsetof(APVW_ExplosiveBase_C, bShowHealth) == 0x000AD4, "Member 'APVW_ExplosiveBase_C::bShowHealth' has a wrong offset!");
static_assert(offsetof(APVW_ExplosiveBase_C, CurrentMoveIndex) == 0x000AD8, "Member 'APVW_ExplosiveBase_C::CurrentMoveIndex' has a wrong offset!");

}

