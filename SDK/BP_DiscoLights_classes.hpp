#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DiscoLights

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DiscoLights.BP_DiscoLights_C
// 0x0020 (0x0260 - 0x0240)
class ABP_DiscoLights_C final : public ARechargeStation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         LightCount;                                        // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationSpeed;                                     // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DiscoLights(int32 EntryPoint);
	void OnLevelReady();
	void DoActions(EActionType ToDo, bool bSimulated);
	void EditorModeChanged(EEditMode NewMode);
	void SetInEditor(bool bInEditor);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void TurnOff();
	TArray<EActionType> GetActions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DiscoLights_C">();
	}
	static class ABP_DiscoLights_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DiscoLights_C>();
	}
};
static_assert(alignof(ABP_DiscoLights_C) == 0x000008, "Wrong alignment on ABP_DiscoLights_C");
static_assert(sizeof(ABP_DiscoLights_C) == 0x000260, "Wrong size on ABP_DiscoLights_C");
static_assert(offsetof(ABP_DiscoLights_C, UberGraphFrame) == 0x000240, "Member 'ABP_DiscoLights_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DiscoLights_C, Sphere) == 0x000248, "Member 'ABP_DiscoLights_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_DiscoLights_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_DiscoLights_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DiscoLights_C, LightCount) == 0x000258, "Member 'ABP_DiscoLights_C::LightCount' has a wrong offset!");
static_assert(offsetof(ABP_DiscoLights_C, RotationSpeed) == 0x00025C, "Member 'ABP_DiscoLights_C::RotationSpeed' has a wrong offset!");

}

