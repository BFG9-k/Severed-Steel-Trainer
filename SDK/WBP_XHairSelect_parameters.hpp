#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_XHairSelect

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function WBP_XHairSelect.WBP_XHairSelect_C.ExecuteUbergraph_WBP_XHairSelect
// 0x0038 (0x0038 - 0x0000)
struct WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelEditMod                                 K2Node_ComponentBoundEvent_OutNav_1;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelEditMod                                 K2Node_ComponentBoundEvent_OutNav;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ComponentBoundEvent_Key;                    // 0x0018(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasOwnerFocus_value;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect) == 0x000008, "Wrong alignment on WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect");
static_assert(sizeof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect) == 0x000038, "Wrong size on WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, EntryPoint) == 0x000000, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, Temp_int_Variable) == 0x000004, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, Temp_int_Variable_1) == 0x000010, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, K2Node_ComponentBoundEvent_OutNav_1) == 0x000014, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::K2Node_ComponentBoundEvent_OutNav_1' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, K2Node_ComponentBoundEvent_OutNav) == 0x000015, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::K2Node_ComponentBoundEvent_OutNav' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, K2Node_ComponentBoundEvent_Key) == 0x000018, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::K2Node_ComponentBoundEvent_Key' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000030, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000031, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect, CallFunc_HasOwnerFocus_value) == 0x000033, "Member 'WBP_XHairSelect_C_ExecuteUbergraph_WBP_XHairSelect::CallFunc_HasOwnerFocus_value' has a wrong offset!");

// Function WBP_XHairSelect.WBP_XHairSelect_C.BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature");
static_assert(sizeof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature");
static_assert(offsetof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature, Key) == 0x000000, "Member 'WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_UIKeyListener_25_K2Node_ComponentBoundEvent_4_UIKeyListenerKeyEvent__DelegateSignature::Key' has a wrong offset!");

// Function WBP_XHairSelect.WBP_XHairSelect_C.BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature final
{
public:
	EVoxelEditMod                                 OutNav;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature) == 0x000001, "Wrong alignment on WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature");
static_assert(sizeof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature) == 0x000001, "Wrong size on WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature");
static_assert(offsetof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature, OutNav) == 0x000000, "Member 'WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Fwd_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature::OutNav' has a wrong offset!");

// Function WBP_XHairSelect.WBP_XHairSelect_C.BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature final
{
public:
	EVoxelEditMod                                 OutNav;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature) == 0x000001, "Wrong alignment on WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature");
static_assert(sizeof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature) == 0x000001, "Wrong size on WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature");
static_assert(offsetof(WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature, OutNav) == 0x000000, "Member 'WBP_XHairSelect_C_BndEvt__WBP_XHairSelect_Back_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature::OutNav' has a wrong offset!");

// Function WBP_XHairSelect.WBP_XHairSelect_C.SetForIndex
// 0x0028 (0x0028 - 0x0000)
struct WBP_XHairSelect_C_SetForIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XHairSelect_C_SetForIndex) == 0x000008, "Wrong alignment on WBP_XHairSelect_C_SetForIndex");
static_assert(sizeof(WBP_XHairSelect_C_SetForIndex) == 0x000028, "Wrong size on WBP_XHairSelect_C_SetForIndex");
static_assert(offsetof(WBP_XHairSelect_C_SetForIndex, Index_0) == 0x000000, "Member 'WBP_XHairSelect_C_SetForIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_SetForIndex, CallFunc_GetTYVCGameMode_NewParam) == 0x000008, "Member 'WBP_XHairSelect_C_SetForIndex::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_SetForIndex, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_XHairSelect_C_SetForIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_SetForIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_XHairSelect_C_SetForIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_SetForIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WBP_XHairSelect_C_SetForIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_SetForIndex, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'WBP_XHairSelect_C_SetForIndex::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function WBP_XHairSelect.WBP_XHairSelect_C.GetColorAndOpacity_0
// 0x0020 (0x0020 - 0x0000)
struct WBP_XHairSelect_C_GetColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XHairSelect_C_GetColorAndOpacity_0) == 0x000004, "Wrong alignment on WBP_XHairSelect_C_GetColorAndOpacity_0");
static_assert(sizeof(WBP_XHairSelect_C_GetColorAndOpacity_0) == 0x000020, "Wrong size on WBP_XHairSelect_C_GetColorAndOpacity_0");
static_assert(offsetof(WBP_XHairSelect_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'WBP_XHairSelect_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_GetColorAndOpacity_0, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000010, "Member 'WBP_XHairSelect_C_GetColorAndOpacity_0::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");

// Function WBP_XHairSelect.WBP_XHairSelect_C.HandleKeyDown
// 0x0020 (0x0020 - 0x0000)
struct WBP_XHairSelect_C_HandleKeyDown final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Handled;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_XHairSelect_C_HandleKeyDown) == 0x000008, "Wrong alignment on WBP_XHairSelect_C_HandleKeyDown");
static_assert(sizeof(WBP_XHairSelect_C_HandleKeyDown) == 0x000020, "Wrong size on WBP_XHairSelect_C_HandleKeyDown");
static_assert(offsetof(WBP_XHairSelect_C_HandleKeyDown, Key) == 0x000000, "Member 'WBP_XHairSelect_C_HandleKeyDown::Key' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_HandleKeyDown, Handled) == 0x000018, "Member 'WBP_XHairSelect_C_HandleKeyDown::Handled' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_HandleKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000019, "Member 'WBP_XHairSelect_C_HandleKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XHairSelect_C_HandleKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00001A, "Member 'WBP_XHairSelect_C_HandleKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");

}

