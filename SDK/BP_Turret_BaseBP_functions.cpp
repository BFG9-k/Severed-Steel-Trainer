#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Turret_BaseBP

#include "Basic.hpp"

#include "BP_Turret_BaseBP_classes.hpp"
#include "BP_Turret_BaseBP_parameters.hpp"


namespace SDK
{

// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ExecuteUbergraph_BP_Turret_BaseBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_BaseBP_C::ExecuteUbergraph_BP_Turret_BaseBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ExecuteUbergraph_BP_Turret_BaseBP");

	Params::BP_Turret_BaseBP_C_ExecuteUbergraph_BP_Turret_BaseBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.SetInEditor
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEditor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Turret_BaseBP_C::SetInEditor(bool bInEditor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "SetInEditor");

	Params::BP_Turret_BaseBP_C_SetInEditor Parms{};

	Parms.bInEditor = bInEditor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.SetupTurret
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::SetupTurret()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "SetupTurret");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.OnLevelReady
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::OnLevelReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "OnLevelReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Turret_BaseBP_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.RepairDone
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::RepairDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "RepairDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ResetRepairButton
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::ResetRepairButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ResetRepairButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ResetRepairHead
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::ResetRepairHead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ResetRepairHead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.EnableInputs
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::EnableInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "EnableInputs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.Repair
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.TurretReceiveDamage
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::TurretReceiveDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "TurretReceiveDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_BaseBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ReceiveTick");

	Params::BP_Turret_BaseBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.AttachHeadToMount
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::AttachHeadToMount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "AttachHeadToMount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ActivateMountRotation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::ActivateMountRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ActivateMountRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.DeactivateMountRotation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::DeactivateMountRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "DeactivateMountRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.CheckIfActive
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::CheckIfActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "CheckIfActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ActivateTurret
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::ActivateTurret()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ActivateTurret");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.DeactivateTurret
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::DeactivateTurret()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "DeactivateTurret");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.UpdateHeadSettings
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::UpdateHeadSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "UpdateHeadSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.StopSound
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::StopSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "StopSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.PlaySound
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::PlaySound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "PlaySound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.Get RotationValue
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::Get_RotationValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "Get RotationValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.RotationAudio
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::RotationAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "RotationAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.Set Look Angle
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::Set_Look_Angle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "Set Look Angle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ResetLook
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::ResetLook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ResetLook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ResetLookAngle
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::ResetLookAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ResetLookAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.SelectHead
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::SelectHead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "SelectHead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Turret_BaseBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.StopRot
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::StopRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "StopRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.PlayRot
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::PlayRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "PlayRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.UpdateRotation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::UpdateRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "UpdateRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.InpActEvt_F_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Turret_BaseBP_C::InpActEvt_F_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "InpActEvt_F_K2Node_InputKeyEvent_0");

	Params::BP_Turret_BaseBP_C_InpActEvt_F_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.TurretIdleRotation__PlaySound__EventFunc
// (BlueprintEvent)

void ABP_Turret_BaseBP_C::TurretIdleRotation__PlaySound__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "TurretIdleRotation__PlaySound__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.TurretIdleRotation__Stop Sound__EventFunc
// (BlueprintEvent)

void ABP_Turret_BaseBP_C::TurretIdleRotation__Stop_Sound__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "TurretIdleRotation__Stop Sound__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.TurretIdleRotation__UpdateFunc
// (BlueprintEvent)

void ABP_Turret_BaseBP_C::TurretIdleRotation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "TurretIdleRotation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.TurretIdleRotation__FinishedFunc
// (BlueprintEvent)

void ABP_Turret_BaseBP_C::TurretIdleRotation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "TurretIdleRotation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.Setup for replication
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::Setup_for_replication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "Setup for replication");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.RepairHeadAttachment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Turret_BaseBP_C::RepairHeadAttachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "RepairHeadAttachment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Turret_BaseBP.BP_Turret_BaseBP_C.OnHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EImpactType                             ImpactType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Dmg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Turret_BaseBP_C::OnHit(EImpactType ImpactType, const struct FHitResult& HitResult, float Dmg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_BaseBP_C", "OnHit");

	Params::BP_Turret_BaseBP_C_OnHit Parms{};

	Parms.ImpactType = ImpactType;
	Parms.HitResult = std::move(HitResult);
	Parms.Dmg = Dmg;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

