#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Void

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Void.BP_Void_C
// 0x0058 (0x0298 - 0x0240)
class ABP_Void_C final : public ARechargeStation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTimeline_Fade_690529B2403838A51071F5A89BCFEAEE; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeTimeline__Direction_690529B2403838A51071F5A89BCFEAEE; // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeTimeline;                                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MyScale;                                           // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     VoidMat;                                           // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     FieldMat;                                          // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsForcefield;                                     // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MyDynMat;                                          // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInvisible;                                      // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Void(int32 EntryPoint);
	void SetInEditor(bool bInEditor);
	void UpdateInvisDisplay(bool bInInvis);
	void DoActions(EActionType ToDo, bool bSimulated);
	void OnLevelReady();
	void OnEditorModeChange(EEditMode NewEditMode);
	void CustomEvent_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentBeginOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MakeHole(const struct FVector& WorldLoc, float Radius);
	void ShutdownField(const struct FVector& Center);
	void UpdateFFDisplay(bool InFiekd);
	void PostDataLoaded();
	void FadeTimeline__UpdateFunc();
	void FadeTimeline__FinishedFunc();
	bool GetShouldSave();
	TArray<EActionType> GetActions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Void_C">();
	}
	static class ABP_Void_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Void_C>();
	}
};
static_assert(alignof(ABP_Void_C) == 0x000008, "Wrong alignment on ABP_Void_C");
static_assert(sizeof(ABP_Void_C) == 0x000298, "Wrong size on ABP_Void_C");
static_assert(offsetof(ABP_Void_C, UberGraphFrame) == 0x000240, "Member 'ABP_Void_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, Plane) == 0x000248, "Member 'ABP_Void_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, FadeTimeline_Fade_690529B2403838A51071F5A89BCFEAEE) == 0x000250, "Member 'ABP_Void_C::FadeTimeline_Fade_690529B2403838A51071F5A89BCFEAEE' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, FadeTimeline__Direction_690529B2403838A51071F5A89BCFEAEE) == 0x000254, "Member 'ABP_Void_C::FadeTimeline__Direction_690529B2403838A51071F5A89BCFEAEE' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, FadeTimeline) == 0x000258, "Member 'ABP_Void_C::FadeTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, MyScale) == 0x000260, "Member 'ABP_Void_C::MyScale' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, VoidMat) == 0x000270, "Member 'ABP_Void_C::VoidMat' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, FieldMat) == 0x000278, "Member 'ABP_Void_C::FieldMat' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, bIsForcefield) == 0x000280, "Member 'ABP_Void_C::bIsForcefield' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, MyDynMat) == 0x000288, "Member 'ABP_Void_C::MyDynMat' has a wrong offset!");
static_assert(offsetof(ABP_Void_C, bIsInvisible) == 0x000290, "Member 'ABP_Void_C::bIsInvisible' has a wrong offset!");

}

