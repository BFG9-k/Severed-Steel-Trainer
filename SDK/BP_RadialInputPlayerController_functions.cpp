#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RadialInputPlayerController

#include "Basic.hpp"

#include "BP_RadialInputPlayerController_classes.hpp"
#include "BP_RadialInputPlayerController_parameters.hpp"


namespace SDK
{

// Function BP_RadialInputPlayerController.BP_RadialInputPlayerController_C.GetJoystickDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJoystickTypes                          Stick                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        StickInput                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RadialInputPlayerController_C::GetJoystickDirection(EJoystickTypes Stick, struct FVector2D* StickInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RadialInputPlayerController_C", "GetJoystickDirection");

	Params::BP_RadialInputPlayerController_C_GetJoystickDirection Parms{};

	Parms.Stick = Stick;

	UObject::ProcessEvent(Func, &Parms);

	if (StickInput != nullptr)
		*StickInput = std::move(Parms.StickInput);
}

}

