#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NDOC

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_NDOC.WBP_NDOC_C.ExecuteUbergraph_WBP_NDOC
// 0x0158 (0x0158 - 0x0000)
struct WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x004C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_UpdateAmount;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Random_OutItem;                     // 0x00B8(0x0018)()
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_1;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam_2;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACampaignManager*                       CallFunc_GetCampaignManager_OutCM;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Random_OutItem_1;                   // 0x0108(0x0018)()
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatform_ReturnValue_1;                 // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0140(0x0018)()
};
static_assert(alignof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC) == 0x000008, "Wrong alignment on WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC");
static_assert(sizeof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC) == 0x000158, "Wrong size on WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, EntryPoint) == 0x000000, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_IsPlatform_ReturnValue) == 0x000004, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_IsPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, Temp_bool_Variable) == 0x000028, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, Temp_text_Variable) == 0x000030, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, Temp_bool_Variable_1) == 0x000048, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_Event_MyGeometry) == 0x00004C, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_Event_InDeltaTime) == 0x000084, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000090, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000098, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_Event_UpdateAmount) == 0x0000A8, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_Event_UpdateAmount' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B4, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_Event_IsDesignTime) == 0x0000B5, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Array_Random_OutItem) == 0x0000B8, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Array_Random_OutIndex) == 0x0000D0, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GetTYVCGameMode_NewParam) == 0x0000D8, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_PlayAnimation_ReturnValue) == 0x0000E0, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GetTYVCGameMode_NewParam_1) == 0x0000E8, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GetTYVCGameMode_NewParam_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GetTYVCGameMode_NewParam_2) == 0x0000F0, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GetTYVCGameMode_NewParam_2' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_GetCampaignManager_OutCM) == 0x0000F8, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_GetCampaignManager_OutCM' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Array_Random_OutItem_1) == 0x000108, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_Array_Random_OutIndex_1) == 0x000120, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_IsPlatform_ReturnValue_1) == 0x000124, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_IsPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, CallFunc_BooleanOR_ReturnValue) == 0x000125, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_Select_Default) == 0x000128, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC, K2Node_Select_Default_1) == 0x000140, "Member 'WBP_NDOC_C_ExecuteUbergraph_WBP_NDOC::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_NDOC.WBP_NDOC_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NDOC_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NDOC_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NDOC_C_PreConstruct");
static_assert(sizeof(WBP_NDOC_C_PreConstruct) == 0x000001, "Wrong size on WBP_NDOC_C_PreConstruct");
static_assert(offsetof(WBP_NDOC_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NDOC_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NDOC.WBP_NDOC_C.UpdateInnerRing
// 0x0004 (0x0004 - 0x0000)
struct WBP_NDOC_C_UpdateInnerRing final
{
public:
	float                                         UpdateAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NDOC_C_UpdateInnerRing) == 0x000004, "Wrong alignment on WBP_NDOC_C_UpdateInnerRing");
static_assert(sizeof(WBP_NDOC_C_UpdateInnerRing) == 0x000004, "Wrong size on WBP_NDOC_C_UpdateInnerRing");
static_assert(offsetof(WBP_NDOC_C_UpdateInnerRing, UpdateAmount) == 0x000000, "Member 'WBP_NDOC_C_UpdateInnerRing::UpdateAmount' has a wrong offset!");

// Function WBP_NDOC.WBP_NDOC_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_NDOC_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NDOC_C_Tick) == 0x000004, "Wrong alignment on WBP_NDOC_C_Tick");
static_assert(sizeof(WBP_NDOC_C_Tick) == 0x00003C, "Wrong size on WBP_NDOC_C_Tick");
static_assert(offsetof(WBP_NDOC_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_NDOC_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_NDOC_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_NDOC_C_Tick::InDeltaTime' has a wrong offset!");

}

