#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Head_Laser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Head_Laser.BP_Head_Laser_C.ExecuteUbergraph_BP_Head_Laser
// 0x06C0 (0x06C0 - 0x0000)
struct BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x01F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0280(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits_1;     // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue_1; // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x02AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x03B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x043E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F[0x1];                                      // 0x043F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x04BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x04BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x04BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x04C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x04CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x04D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x04FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0xF];                                      // 0x0511(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TargetBP_C*                         K2Node_DynamicCast_AsBP_Target_BP;                 // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits_2;     // 0x0590(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue_2; // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x05A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A3[0x1];                                      // 0x05A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x05AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x05C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x05D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x060C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_626[0x2];                                      // 0x0626(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x062C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser) == 0x000010, "Wrong alignment on BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser");
static_assert(sizeof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser) == 0x0006C0, "Wrong size on BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, EntryPoint) == 0x000000, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_GetForwardVector_ReturnValue) == 0x000004, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00001C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_IsClosed_Variable) == 0x0000A4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000B8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_Has_Been_Initd_Variable) == 0x0000B9, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_LineTraceSingle_OutHit) == 0x0000BC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_LineTraceSingle_ReturnValue) == 0x000144, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bBlockingHit) == 0x000145, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bInitialOverlap) == 0x000146, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Time) == 0x000148, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Distance) == 0x00014C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactPoint) == 0x00015C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactNormal) == 0x000174, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_GetForwardVector_ReturnValue_1) == 0x0001C4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001D0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001DC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_IsClosed_Variable_1) == 0x0001F4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0001F8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000280, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000290, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SphereTraceMultiForObjects_OutHits_1) == 0x000298, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SphereTraceMultiForObjects_OutHits_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SphereTraceMultiForObjects_ReturnValue_1) == 0x0002A8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SphereTraceMultiForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Array_Get_Item) == 0x0002AC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000334, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000335, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Time_1) == 0x000338, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Distance_1) == 0x00033C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Location_1) == 0x000340, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00034C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Normal_1) == 0x000358, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000364, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_PhysMat_1) == 0x000370, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitActor_1) == 0x000378, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitComponent_1) == 0x000380, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitBoneName_1) == 0x000388, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitItem_1) == 0x000390, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ElementIndex_1) == 0x000394, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_FaceIndex_1) == 0x000398, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceStart_1) == 0x00039C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003A8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Array_Get_Item_1) == 0x0003B4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00043C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bBlockingHit_2) == 0x00043D, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00043E, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Time_2) == 0x000440, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Distance_2) == 0x000444, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Location_2) == 0x000448, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000454, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Normal_2) == 0x000460, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactNormal_2) == 0x00046C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_PhysMat_2) == 0x000478, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitActor_2) == 0x000480, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitComponent_2) == 0x000488, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitBoneName_2) == 0x000490, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitItem_2) == 0x000498, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ElementIndex_2) == 0x00049C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_FaceIndex_2) == 0x0004A0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceStart_2) == 0x0004A4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceEnd_2) == 0x0004B0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0004BC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_Has_Been_Initd_Variable_1) == 0x0004BD, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_Has_Been_Initd_Variable_2) == 0x0004BE, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_Has_Been_Initd_Variable_3) == 0x0004BF, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_GetForwardVector_ReturnValue_2) == 0x0004C0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0004CC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_GetForwardVector_ReturnValue_3) == 0x0004D8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0004E4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0004F0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0004FC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_IsClosed_Variable_2) == 0x000508, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_Array_Add_ReturnValue) == 0x00050C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000510, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000520, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakTransform_Location) == 0x000550, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakTransform_Rotation) == 0x00055C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakTransform_Scale) == 0x000568, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, K2Node_DynamicCast_AsBP_Target_BP) == 0x000578, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::K2Node_DynamicCast_AsBP_Target_BP' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, K2Node_DynamicCast_bSuccess) == 0x000580, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000588, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SphereTraceMultiForObjects_OutHits_2) == 0x000590, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SphereTraceMultiForObjects_OutHits_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_SphereTraceMultiForObjects_ReturnValue_2) == 0x0005A0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_SphereTraceMultiForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bBlockingHit_3) == 0x0005A1, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x0005A2, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Time_3) == 0x0005A4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Distance_3) == 0x0005A8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Location_3) == 0x0005AC, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0005B8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_Normal_3) == 0x0005C4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0005D0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_PhysMat_3) == 0x0005E0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitActor_3) == 0x0005E8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitComponent_3) == 0x0005F0, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitBoneName_3) == 0x0005F8, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_HitItem_3) == 0x000600, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_ElementIndex_3) == 0x000604, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_FaceIndex_3) == 0x000608, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceStart_3) == 0x00060C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_BreakHitResult_TraceEnd_3) == 0x000618, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000624, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000625, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, K2Node_Event_DeltaSeconds) == 0x000628, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x00062C, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser, Temp_bool_IsClosed_Variable_3) == 0x0006B4, "Member 'BP_Head_Laser_C_ExecuteUbergraph_BP_Head_Laser::Temp_bool_IsClosed_Variable_3' has a wrong offset!");

// Function BP_Head_Laser.BP_Head_Laser_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Head_Laser_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Head_Laser_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Head_Laser_C_ReceiveTick");
static_assert(sizeof(BP_Head_Laser_C_ReceiveTick) == 0x000004, "Wrong size on BP_Head_Laser_C_ReceiveTick");
static_assert(offsetof(BP_Head_Laser_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Head_Laser_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

