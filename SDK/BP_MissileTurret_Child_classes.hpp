#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MissileTurret_Child

#include "Basic.hpp"

#include "BP_TemplateTurret_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MissileTurret_Child.BP_MissileTurret_Child_C
// 0x0058 (0x03E8 - 0x0390)
class ABP_MissileTurret_Child_C final : public ABP_TemplateTurret_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MissileTurret_Child_C;           // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   RadarMesh;                                         // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireParticle05;                                    // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireParticle06;                                    // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireParticle04;                                    // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireParticle03;                                    // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireParticle02;                                    // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireParticle01;                                    // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFire;                                            // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReloadTime;                                        // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnCounter;                                      // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IsAlert_Offset;                                    // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MissileTurret_Child(int32 EntryPoint);
	void E_SkinSelector();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SkinFunction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MissileTurret_Child_C">();
	}
	static class ABP_MissileTurret_Child_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MissileTurret_Child_C>();
	}
};
static_assert(alignof(ABP_MissileTurret_Child_C) == 0x000008, "Wrong alignment on ABP_MissileTurret_Child_C");
static_assert(sizeof(ABP_MissileTurret_Child_C) == 0x0003E8, "Wrong size on ABP_MissileTurret_Child_C");
static_assert(offsetof(ABP_MissileTurret_Child_C, UberGraphFrame_BP_MissileTurret_Child_C) == 0x000390, "Member 'ABP_MissileTurret_Child_C::UberGraphFrame_BP_MissileTurret_Child_C' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, RadarMesh) == 0x000398, "Member 'ABP_MissileTurret_Child_C::RadarMesh' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, FireParticle05) == 0x0003A0, "Member 'ABP_MissileTurret_Child_C::FireParticle05' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, FireParticle06) == 0x0003A8, "Member 'ABP_MissileTurret_Child_C::FireParticle06' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, FireParticle04) == 0x0003B0, "Member 'ABP_MissileTurret_Child_C::FireParticle04' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, FireParticle03) == 0x0003B8, "Member 'ABP_MissileTurret_Child_C::FireParticle03' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, FireParticle02) == 0x0003C0, "Member 'ABP_MissileTurret_Child_C::FireParticle02' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, FireParticle01) == 0x0003C8, "Member 'ABP_MissileTurret_Child_C::FireParticle01' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, StaticMesh2) == 0x0003D0, "Member 'ABP_MissileTurret_Child_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, IsFire) == 0x0003D8, "Member 'ABP_MissileTurret_Child_C::IsFire' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, ReloadTime) == 0x0003DC, "Member 'ABP_MissileTurret_Child_C::ReloadTime' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, SpawnCounter) == 0x0003E0, "Member 'ABP_MissileTurret_Child_C::SpawnCounter' has a wrong offset!");
static_assert(offsetof(ABP_MissileTurret_Child_C, IsAlert_Offset) == 0x0003E4, "Member 'ABP_MissileTurret_Child_C::IsAlert_Offset' has a wrong offset!");

}

