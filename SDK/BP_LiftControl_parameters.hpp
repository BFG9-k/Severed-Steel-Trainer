#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LiftControl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LiftControl.BP_LiftControl_C.ExecuteUbergraph_BP_LiftControl
// 0x0010 (0x0010 - 0x0000)
struct BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interactor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl) == 0x000008, "Wrong alignment on BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl");
static_assert(sizeof(BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl) == 0x000010, "Wrong size on BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl");
static_assert(offsetof(BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl, EntryPoint) == 0x000000, "Member 'BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl, K2Node_Event_Interactor) == 0x000008, "Member 'BP_LiftControl_C_ExecuteUbergraph_BP_LiftControl::K2Node_Event_Interactor' has a wrong offset!");

// Function BP_LiftControl.BP_LiftControl_C.RequestInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_LiftControl_C_RequestInteraction final
{
public:
	class AActor*                                 Interactor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LiftControl_C_RequestInteraction) == 0x000008, "Wrong alignment on BP_LiftControl_C_RequestInteraction");
static_assert(sizeof(BP_LiftControl_C_RequestInteraction) == 0x000008, "Wrong size on BP_LiftControl_C_RequestInteraction");
static_assert(offsetof(BP_LiftControl_C_RequestInteraction, Interactor) == 0x000000, "Member 'BP_LiftControl_C_RequestInteraction::Interactor' has a wrong offset!");

// Function BP_LiftControl.BP_LiftControl_C.GetShouldSave
// 0x0001 (0x0001 - 0x0000)
struct BP_LiftControl_C_GetShouldSave final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LiftControl_C_GetShouldSave) == 0x000001, "Wrong alignment on BP_LiftControl_C_GetShouldSave");
static_assert(sizeof(BP_LiftControl_C_GetShouldSave) == 0x000001, "Wrong size on BP_LiftControl_C_GetShouldSave");
static_assert(offsetof(BP_LiftControl_C_GetShouldSave, ReturnValue) == 0x000000, "Member 'BP_LiftControl_C_GetShouldSave::ReturnValue' has a wrong offset!");

// Function BP_LiftControl.BP_LiftControl_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_LiftControl_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LiftControl_C_IsInteractable) == 0x000001, "Wrong alignment on BP_LiftControl_C_IsInteractable");
static_assert(sizeof(BP_LiftControl_C_IsInteractable) == 0x000001, "Wrong size on BP_LiftControl_C_IsInteractable");
static_assert(offsetof(BP_LiftControl_C_IsInteractable, ReturnValue) == 0x000000, "Member 'BP_LiftControl_C_IsInteractable::ReturnValue' has a wrong offset!");

// Function BP_LiftControl.BP_LiftControl_C.SetupAsDirection
// 0x0020 (0x0020 - 0x0000)
struct BP_LiftControl_C_SetupAsDirection final
{
public:
	bool                                          bIsUp;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_LiftControlWidget_C*               K2Node_DynamicCast_AsWBP_Lift_Control_Widget;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LiftControl_C_SetupAsDirection) == 0x000008, "Wrong alignment on BP_LiftControl_C_SetupAsDirection");
static_assert(sizeof(BP_LiftControl_C_SetupAsDirection) == 0x000020, "Wrong size on BP_LiftControl_C_SetupAsDirection");
static_assert(offsetof(BP_LiftControl_C_SetupAsDirection, bIsUp) == 0x000000, "Member 'BP_LiftControl_C_SetupAsDirection::bIsUp' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_SetupAsDirection, CallFunc_GetWidget_ReturnValue) == 0x000008, "Member 'BP_LiftControl_C_SetupAsDirection::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_SetupAsDirection, K2Node_DynamicCast_AsWBP_Lift_Control_Widget) == 0x000010, "Member 'BP_LiftControl_C_SetupAsDirection::K2Node_DynamicCast_AsWBP_Lift_Control_Widget' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_SetupAsDirection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LiftControl_C_SetupAsDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LiftControl.BP_LiftControl_C.GetInteractionText
// 0x0068 (0x0068 - 0x0000)
struct BP_LiftControl_C_GetInteractionText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(BP_LiftControl_C_GetInteractionText) == 0x000008, "Wrong alignment on BP_LiftControl_C_GetInteractionText");
static_assert(sizeof(BP_LiftControl_C_GetInteractionText) == 0x000068, "Wrong size on BP_LiftControl_C_GetInteractionText");
static_assert(offsetof(BP_LiftControl_C_GetInteractionText, ReturnValue) == 0x000000, "Member 'BP_LiftControl_C_GetInteractionText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_GetInteractionText, Temp_bool_Variable) == 0x000018, "Member 'BP_LiftControl_C_GetInteractionText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_GetInteractionText, Temp_text_Variable) == 0x000020, "Member 'BP_LiftControl_C_GetInteractionText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_GetInteractionText, Temp_text_Variable_1) == 0x000038, "Member 'BP_LiftControl_C_GetInteractionText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_GetInteractionText, K2Node_Select_Default) == 0x000050, "Member 'BP_LiftControl_C_GetInteractionText::K2Node_Select_Default' has a wrong offset!");

// Function BP_LiftControl.BP_LiftControl_C.OnHit
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LiftControl_C_OnHit final
{
public:
	EImpactType                                   ImpactType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Dmg;                                               // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LiftControl_C_OnHit) == 0x000008, "Wrong alignment on BP_LiftControl_C_OnHit");
static_assert(sizeof(BP_LiftControl_C_OnHit) == 0x0000A8, "Wrong size on BP_LiftControl_C_OnHit");
static_assert(offsetof(BP_LiftControl_C_OnHit, ImpactType) == 0x000000, "Member 'BP_LiftControl_C_OnHit::ImpactType' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_OnHit, HitResult) == 0x000004, "Member 'BP_LiftControl_C_OnHit::HitResult' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_OnHit, Dmg) == 0x00008C, "Member 'BP_LiftControl_C_OnHit::Dmg' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_OnHit, ReturnValue) == 0x000090, "Member 'BP_LiftControl_C_OnHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_OnHit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'BP_LiftControl_C_OnHit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LiftControl_C_OnHit, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000A0, "Member 'BP_LiftControl_C_OnHit::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

}

