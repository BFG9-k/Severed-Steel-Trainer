#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M4

#include "Basic.hpp"

#include "ThankYouVeryCool_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass M4.M4_C
// 0x0030 (0x0710 - 0x06E0)
class AM4_C final : public AWeaponBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AmmoInd_C*                          BP_AmmoInd;                                        // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_M4(int32 EntryPoint);
	void Randomize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M4_C">();
	}
	static class AM4_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AM4_C>();
	}
};
static_assert(alignof(AM4_C) == 0x000010, "Wrong alignment on AM4_C");
static_assert(sizeof(AM4_C) == 0x000710, "Wrong size on AM4_C");
static_assert(offsetof(AM4_C, UberGraphFrame) == 0x0006E0, "Member 'AM4_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AM4_C, StaticMesh2) == 0x0006E8, "Member 'AM4_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(AM4_C, BP_AmmoInd) == 0x0006F0, "Member 'AM4_C::BP_AmmoInd' has a wrong offset!");
static_assert(offsetof(AM4_C, StaticMesh1) == 0x0006F8, "Member 'AM4_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AM4_C, StaticMesh) == 0x000700, "Member 'AM4_C::StaticMesh' has a wrong offset!");

}

