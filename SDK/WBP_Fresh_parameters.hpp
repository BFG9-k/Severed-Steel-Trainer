#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Fresh

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ThankYouVeryCool_structs.hpp"


namespace SDK::Params
{

// Function WBP_Fresh.WBP_Fresh_C.ExecuteUbergraph_WBP_Fresh
// 0x0090 (0x0090 - 0x0000)
struct WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFeat                                         K2Node_CustomEvent_POints;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATYVCGameMode_BP_C*                     CallFunc_GetTYVCGameMode_NewParam;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FeatToChallengeTextSingular_ReturnValue;  // 0x0070(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh) == 0x000008, "Wrong alignment on WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh");
static_assert(sizeof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh) == 0x000090, "Wrong size on WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, EntryPoint) == 0x000000, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, K2Node_Event_MyGeometry) == 0x000014, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, K2Node_CustomEvent_POints) == 0x000058, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::K2Node_CustomEvent_POints' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, K2Node_CustomEvent_Delay) == 0x00005C, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_GetTYVCGameMode_NewParam) == 0x000060, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_GetTYVCGameMode_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000068, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_FeatToChallengeTextSingular_ReturnValue) == 0x000070, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_FeatToChallengeTextSingular_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'WBP_Fresh_C_ExecuteUbergraph_WBP_Fresh::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Fresh.WBP_Fresh_C.RunAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_Fresh_C_RunAnim final
{
public:
	EFeat                                         Points;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Fresh_C_RunAnim) == 0x000004, "Wrong alignment on WBP_Fresh_C_RunAnim");
static_assert(sizeof(WBP_Fresh_C_RunAnim) == 0x000008, "Wrong size on WBP_Fresh_C_RunAnim");
static_assert(offsetof(WBP_Fresh_C_RunAnim, Points) == 0x000000, "Member 'WBP_Fresh_C_RunAnim::Points' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_RunAnim, Delay) == 0x000004, "Member 'WBP_Fresh_C_RunAnim::Delay' has a wrong offset!");

// Function WBP_Fresh.WBP_Fresh_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Fresh_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Fresh_C_Tick) == 0x000004, "Wrong alignment on WBP_Fresh_C_Tick");
static_assert(sizeof(WBP_Fresh_C_Tick) == 0x00003C, "Wrong size on WBP_Fresh_C_Tick");
static_assert(offsetof(WBP_Fresh_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Fresh_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Fresh_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Fresh_C_Tick::InDeltaTime' has a wrong offset!");

}

