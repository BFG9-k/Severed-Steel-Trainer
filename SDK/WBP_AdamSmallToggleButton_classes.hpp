#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdamSmallToggleButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AdamSmallToggleButton.WBP_AdamSmallToggleButton_C
// 0x0560 (0x07C0 - 0x0260)
class UWBP_AdamSmallToggleButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_79;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              DesiredSize;                                       // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCurrentStatus;                                    // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           ActiveStyle;                                       // 0x0290(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           InactiveStyle;                                     // 0x0508(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DesiredScale;                                      // 0x0780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784[0x4];                                      // 0x0784(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClicked;                                         // 0x0788(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bStartSelected;                                    // 0x0798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x07A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_AdamSmallToggleButton(int32 EntryPoint);
	void BndEvt__WBP_AdamSmallToggleButton_Button_79_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_AdamSmallToggleButton_Button_79_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void SimulateCLick();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ControllerSwapped(bool bIsController);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void BndEvt__Button_79_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void SetStatus(bool bActive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AdamSmallToggleButton_C">();
	}
	static class UWBP_AdamSmallToggleButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AdamSmallToggleButton_C>();
	}
};
static_assert(alignof(UWBP_AdamSmallToggleButton_C) == 0x000008, "Wrong alignment on UWBP_AdamSmallToggleButton_C");
static_assert(sizeof(UWBP_AdamSmallToggleButton_C) == 0x0007C0, "Wrong size on UWBP_AdamSmallToggleButton_C");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, UberGraphFrame) == 0x000260, "Member 'UWBP_AdamSmallToggleButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, Border_0) == 0x000268, "Member 'UWBP_AdamSmallToggleButton_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, Button_79) == 0x000270, "Member 'UWBP_AdamSmallToggleButton_C::Button_79' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, SizeBox_0) == 0x000278, "Member 'UWBP_AdamSmallToggleButton_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, DesiredSize) == 0x000280, "Member 'UWBP_AdamSmallToggleButton_C::DesiredSize' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, bCurrentStatus) == 0x000288, "Member 'UWBP_AdamSmallToggleButton_C::bCurrentStatus' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, ActiveStyle) == 0x000290, "Member 'UWBP_AdamSmallToggleButton_C::ActiveStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, InactiveStyle) == 0x000508, "Member 'UWBP_AdamSmallToggleButton_C::InactiveStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, DesiredScale) == 0x000780, "Member 'UWBP_AdamSmallToggleButton_C::DesiredScale' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, OnClicked) == 0x000788, "Member 'UWBP_AdamSmallToggleButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, bStartSelected) == 0x000798, "Member 'UWBP_AdamSmallToggleButton_C::bStartSelected' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, OnHovered) == 0x0007A0, "Member 'UWBP_AdamSmallToggleButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_AdamSmallToggleButton_C, OnUnhovered) == 0x0007B0, "Member 'UWBP_AdamSmallToggleButton_C::OnUnhovered' has a wrong offset!");

}

