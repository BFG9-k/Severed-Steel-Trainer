#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArcadeSetupV2

#include "Basic.hpp"

#include "ThankYouVeryCool_structs.hpp"
#include "E_ArcadeSetupMenu_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ArcadeSetupV2.WBP_ArcadeSetupV2_C
// 0x01E0 (0x0440 - 0x0260)
class UWBP_ArcadeSetupV2_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SweepSub;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             ArmCannonBlock;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      ArmCannonButton;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           BTog;                                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CannonOverlay;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DIfficultyBlock;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      DifficultyButton;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DifficultyDescription;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_69;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      LeaderboardsBtn;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelName_1;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             LevelSelectSlot;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        LevelSelectSwitcher;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MultiStat;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MutatorBock;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      Mutators;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Mutoverlay;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      PlayButon;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      RemixButton;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RemixInfo;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RemixOverlay;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WorldButtons_C*                    ShuffleBtn;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamButton_C*                      StartingWeaponButton;                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             SubMenuSlot;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        SubMenuSwitcher;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SubmenuTitle;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_0;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArcadeProgress_C*                  WBP_ArcadeProgress;                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TitleV3_C*                         WBP_TitleV3;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WeaponBlock;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               WeaponOverlay;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EDifficulty                                   Selected_Diff;                                     // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArcadeLevelAsset*                      SSLevel;                                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomLevelPath;                                   // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bSelectedCustomLevel;                              // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SelectedWeapon;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ArcadeSetupMenu                             CurrentMenu;                                       // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LevelList_C*                       LevelListWidgt;                                    // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Difficulty_C*                      DiffWIdg;                                          // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WeaponSelect_C*                    WeaponWidg;                                        // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ArcadeSetupMenu                             LastMode;                                          // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpawnWithArmCannon;                               // 0x03B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialParameterCollection*           Global_MPC;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EGameModifier>                         Modifiers;                                         // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_Modifiers_C*                       MutMenu;                                           // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DefaultLevel;                                      // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              PostSweep;                                         // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_CannonSelect_C*                    CannonWidd;                                        // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_LeaderboardWrapper_C*              LB;                                                // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForCampaign;                                      // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EDifficulty Diff, TArray<EGameModifier>& ModList, bool WantNGP)> CampagnPlayPressed;                                // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          NGPDesired;                                        // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bForCampaignSkip;                                  // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              CampaignBackPressed;                               // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bCanDoRemix;                                       // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_ArcadeSetupV2(int32 EntryPoint);
	void BndEvt__WBP_ArcadeSetupV2_RemixButton_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature();
	void BndEvt__WBP_ArcadeSetupV2_RemixButton_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature();
	void BndEvt__WBP_ArcadeSetupV2_RemixButton_K2Node_ComponentBoundEvent_9_OnPressed__DelegateSignature();
	void DoHowTo();
	void CustomEvent_5();
	void BndEvt__WBP_ArcadeSetupV2_ShuffleBtn_K2Node_ComponentBoundEvent_8_Pressed__DelegateSignature(EVoxelEditMod OutNav);
	void OnInitialLoadComplete();
	void PLConfirmed(TArray<class UArcadeLevelAsset*>& Playlist);
	void SSSelected(class UClass* EditorObject, const class FText& DisplayName);
	void CustomLevelSelected(const class FString& Path, const class FText& DisplayName);
	void NGPStatusChange_Event_0(bool desiredStats);
	void CustomEvent_4();
	void SetNG_();
	void SetCampaignOnlyDiff();
	void SetupForCampaign();
	void CustomEvent444();
	void CustomEventccc();
	void CustomEvent_3();
	void BndEvt__WBP_AdamButton_C_2_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature();
	void CustomEvent_2();
	void CustomEvent_1();
	void Construct();
	void WeaponSelected(const class FText& DisplayName, class UClass* WeaponBase);
	void SSSelected2(class UArcadeLevelAsset* EditorObject, const class FText& DisplayName);
	void CannonSelected(ECannonMode Mode, const class FText& DisplayName);
	void ArmCannoPostT();
	void BndEvt__WBP_ArcadeSetupV2_ArmCannonButton_K2Node_ComponentBoundEvent_7_OnPressed__DelegateSignature();
	void PostTweenLeaderboard();
	void ModsModded(TArray<EGameModifier>& NewStack, float NewMulti);
	void BndEvt__DifficultyButton_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	void PostTweenMut();
	void GoToMutsEvent();
	void PostDifficultyTween();
	void SweptOutForWeapon();
	void ShowDifficultySelect();
	void SelectedDiff(EDifficulty SelectedDiff_0);
	void BndEvt__WBP_ArcadeSetupV2_LeaderboardsBtn_K2Node_ComponentBoundEvent_6_OnPressed__DelegateSignature();
	void GoToLevelSelect();
	void BndEvt__WBP_AdamButton_C_3_K2Node_ComponentBoundEvent_5_OnPressed__DelegateSignature();
	void BndEvt__WBP_AdamButton_K2Node_ComponentBoundEvent_4_OnPressed__DelegateSignature();
	void BndEvt__WBP_AdamButton_C_4_K2Node_ComponentBoundEvent_3_OnPressed__DelegateSignature();
	void ArmCannonSelected();
	void GOBackWeapon();
	void GoBackLevel();
	void DiffBack();
	void BndEvt__WBP_AdamButton_C_1_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature();
	void OnBackPressed();
	void CustomEvent_0();
	void SetAsDefault();
	void GoToMainSetup();
	struct FSlateColor GetColorAndOpacity_0();
	void GoToMutators();
	void GO__BACK_FROM_MUT(TArray<EGameModifier>& NewParam);
	void UntoggleAll();
	void PostTween(const TDelegate<void()>& InEvent, bool bSkipOut);
	void Sweep_Half_Way();
	void UpdateMultiplier();
	class UWidget* TOLBSelect(EUINavigation Navigation_0);
	class UWidget* To_Play_Btn(EUINavigation Navigation_0);
	class UWidget* ToMirrored(EUINavigation Navigation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ArcadeSetupV2_C">();
	}
	static class UWBP_ArcadeSetupV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ArcadeSetupV2_C>();
	}
};
static_assert(alignof(UWBP_ArcadeSetupV2_C) == 0x000008, "Wrong alignment on UWBP_ArcadeSetupV2_C");
static_assert(sizeof(UWBP_ArcadeSetupV2_C) == 0x000440, "Wrong size on UWBP_ArcadeSetupV2_C");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, UberGraphFrame) == 0x000260, "Member 'UWBP_ArcadeSetupV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, SweepSub) == 0x000268, "Member 'UWBP_ArcadeSetupV2_C::SweepSub' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, ArmCannonBlock) == 0x000270, "Member 'UWBP_ArcadeSetupV2_C::ArmCannonBlock' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, ArmCannonButton) == 0x000278, "Member 'UWBP_ArcadeSetupV2_C::ArmCannonButton' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Border_0) == 0x000280, "Member 'UWBP_ArcadeSetupV2_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, BTog) == 0x000288, "Member 'UWBP_ArcadeSetupV2_C::BTog' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, CannonOverlay) == 0x000290, "Member 'UWBP_ArcadeSetupV2_C::CannonOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, DIfficultyBlock) == 0x000298, "Member 'UWBP_ArcadeSetupV2_C::DIfficultyBlock' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, DifficultyButton) == 0x0002A0, "Member 'UWBP_ArcadeSetupV2_C::DifficultyButton' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, DifficultyDescription) == 0x0002A8, "Member 'UWBP_ArcadeSetupV2_C::DifficultyDescription' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Image_69) == 0x0002B0, "Member 'UWBP_ArcadeSetupV2_C::Image_69' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LeaderboardsBtn) == 0x0002B8, "Member 'UWBP_ArcadeSetupV2_C::LeaderboardsBtn' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LevelName_1) == 0x0002C0, "Member 'UWBP_ArcadeSetupV2_C::LevelName_1' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LevelSelectSlot) == 0x0002C8, "Member 'UWBP_ArcadeSetupV2_C::LevelSelectSlot' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LevelSelectSwitcher) == 0x0002D0, "Member 'UWBP_ArcadeSetupV2_C::LevelSelectSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, MultiStat) == 0x0002D8, "Member 'UWBP_ArcadeSetupV2_C::MultiStat' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, MutatorBock) == 0x0002E0, "Member 'UWBP_ArcadeSetupV2_C::MutatorBock' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Mutators) == 0x0002E8, "Member 'UWBP_ArcadeSetupV2_C::Mutators' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Mutoverlay) == 0x0002F0, "Member 'UWBP_ArcadeSetupV2_C::Mutoverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, PlayButon) == 0x0002F8, "Member 'UWBP_ArcadeSetupV2_C::PlayButon' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, RemixButton) == 0x000300, "Member 'UWBP_ArcadeSetupV2_C::RemixButton' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, RemixInfo) == 0x000308, "Member 'UWBP_ArcadeSetupV2_C::RemixInfo' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, RemixOverlay) == 0x000310, "Member 'UWBP_ArcadeSetupV2_C::RemixOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, ShuffleBtn) == 0x000318, "Member 'UWBP_ArcadeSetupV2_C::ShuffleBtn' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, StartingWeaponButton) == 0x000320, "Member 'UWBP_ArcadeSetupV2_C::StartingWeaponButton' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, SubMenuSlot) == 0x000328, "Member 'UWBP_ArcadeSetupV2_C::SubMenuSlot' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, SubMenuSwitcher) == 0x000330, "Member 'UWBP_ArcadeSetupV2_C::SubMenuSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, SubmenuTitle) == 0x000338, "Member 'UWBP_ArcadeSetupV2_C::SubmenuTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, UniformGridPanel_0) == 0x000340, "Member 'UWBP_ArcadeSetupV2_C::UniformGridPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, WBP_ArcadeProgress) == 0x000348, "Member 'UWBP_ArcadeSetupV2_C::WBP_ArcadeProgress' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, WBP_TitleV3) == 0x000350, "Member 'UWBP_ArcadeSetupV2_C::WBP_TitleV3' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, WeaponBlock) == 0x000358, "Member 'UWBP_ArcadeSetupV2_C::WeaponBlock' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, WeaponOverlay) == 0x000360, "Member 'UWBP_ArcadeSetupV2_C::WeaponOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Selected_Diff) == 0x000368, "Member 'UWBP_ArcadeSetupV2_C::Selected_Diff' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, SSLevel) == 0x000370, "Member 'UWBP_ArcadeSetupV2_C::SSLevel' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, CustomLevelPath) == 0x000378, "Member 'UWBP_ArcadeSetupV2_C::CustomLevelPath' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, bSelectedCustomLevel) == 0x000388, "Member 'UWBP_ArcadeSetupV2_C::bSelectedCustomLevel' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, SelectedWeapon) == 0x000390, "Member 'UWBP_ArcadeSetupV2_C::SelectedWeapon' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, CurrentMenu) == 0x000398, "Member 'UWBP_ArcadeSetupV2_C::CurrentMenu' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LevelListWidgt) == 0x0003A0, "Member 'UWBP_ArcadeSetupV2_C::LevelListWidgt' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, DiffWIdg) == 0x0003A8, "Member 'UWBP_ArcadeSetupV2_C::DiffWIdg' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, WeaponWidg) == 0x0003B0, "Member 'UWBP_ArcadeSetupV2_C::WeaponWidg' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LastMode) == 0x0003B8, "Member 'UWBP_ArcadeSetupV2_C::LastMode' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, bSpawnWithArmCannon) == 0x0003B9, "Member 'UWBP_ArcadeSetupV2_C::bSpawnWithArmCannon' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Global_MPC) == 0x0003C0, "Member 'UWBP_ArcadeSetupV2_C::Global_MPC' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, Modifiers) == 0x0003C8, "Member 'UWBP_ArcadeSetupV2_C::Modifiers' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, MutMenu) == 0x0003D8, "Member 'UWBP_ArcadeSetupV2_C::MutMenu' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, DefaultLevel) == 0x0003E0, "Member 'UWBP_ArcadeSetupV2_C::DefaultLevel' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, PostSweep) == 0x0003E8, "Member 'UWBP_ArcadeSetupV2_C::PostSweep' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, CannonWidd) == 0x0003F8, "Member 'UWBP_ArcadeSetupV2_C::CannonWidd' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, LB) == 0x000400, "Member 'UWBP_ArcadeSetupV2_C::LB' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, bForCampaign) == 0x000408, "Member 'UWBP_ArcadeSetupV2_C::bForCampaign' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, CampagnPlayPressed) == 0x000410, "Member 'UWBP_ArcadeSetupV2_C::CampagnPlayPressed' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, NGPDesired) == 0x000420, "Member 'UWBP_ArcadeSetupV2_C::NGPDesired' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, bForCampaignSkip) == 0x000421, "Member 'UWBP_ArcadeSetupV2_C::bForCampaignSkip' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, CampaignBackPressed) == 0x000428, "Member 'UWBP_ArcadeSetupV2_C::CampaignBackPressed' has a wrong offset!");
static_assert(offsetof(UWBP_ArcadeSetupV2_C, bCanDoRemix) == 0x000438, "Member 'UWBP_ArcadeSetupV2_C::bCanDoRemix' has a wrong offset!");

}

