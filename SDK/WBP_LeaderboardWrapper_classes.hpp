#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LeaderboardWrapper

#include "Basic.hpp"

#include "E_LeaderboardTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LeaderboardWrapper.WBP_LeaderboardWrapper_C
// 0x0050 (0x02B0 - 0x0260)
class UWBP_LeaderboardWrapper_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_AdamSmallToggleButton_C*           FriendsToggle;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           GlobalToggle;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             LBSlot;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           ScoreToggle;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdamSmallToggleButton_C*           TimeToggle;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 LevelID;                                           // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UWBP_Leaderboard_C*                     CurrentLeaderboard;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxToShow;                                         // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LeaderboardWrapper(int32 EntryPoint);
	void OnLBReadThrottled_Event_0(const class FString& LevelName);
	void Construct();
	void BndEvt__WBP_LeaderboardWrapper_ScoreToggle_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void BndEvt__WBP_LeaderboardWrapper_TimeToggle_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__WBP_LeaderboardWrapper_GlobalToggle_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__WBP_LeaderboardWrapper_FriendsToggle_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void OnLeaderboardUpdated();
	void OnLeaderboardQueryDone();
	void OnLeaderboardRefreshStarted();
	void InitFromTogglles();
	void SetListNavigation(class UWidget* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LeaderboardWrapper_C">();
	}
	static class UWBP_LeaderboardWrapper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LeaderboardWrapper_C>();
	}
};
static_assert(alignof(UWBP_LeaderboardWrapper_C) == 0x000008, "Wrong alignment on UWBP_LeaderboardWrapper_C");
static_assert(sizeof(UWBP_LeaderboardWrapper_C) == 0x0002B0, "Wrong size on UWBP_LeaderboardWrapper_C");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, UberGraphFrame) == 0x000260, "Member 'UWBP_LeaderboardWrapper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, FriendsToggle) == 0x000268, "Member 'UWBP_LeaderboardWrapper_C::FriendsToggle' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, GlobalToggle) == 0x000270, "Member 'UWBP_LeaderboardWrapper_C::GlobalToggle' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, LBSlot) == 0x000278, "Member 'UWBP_LeaderboardWrapper_C::LBSlot' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, ScoreToggle) == 0x000280, "Member 'UWBP_LeaderboardWrapper_C::ScoreToggle' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, TimeToggle) == 0x000288, "Member 'UWBP_LeaderboardWrapper_C::TimeToggle' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, LevelID) == 0x000290, "Member 'UWBP_LeaderboardWrapper_C::LevelID' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, CurrentLeaderboard) == 0x0002A0, "Member 'UWBP_LeaderboardWrapper_C::CurrentLeaderboard' has a wrong offset!");
static_assert(offsetof(UWBP_LeaderboardWrapper_C, MaxToShow) == 0x0002A8, "Member 'UWBP_LeaderboardWrapper_C::MaxToShow' has a wrong offset!");

}

