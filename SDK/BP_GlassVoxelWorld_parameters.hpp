#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlassVoxelWorld

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Voxel_structs.hpp"


namespace SDK::Params
{

// Function BP_GlassVoxelWorld.BP_GlassVoxelWorld_C.ExecuteUbergraph_BP_GlassVoxelWorld
// 0x0050 (0x0050 - 0x0000)
struct BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HoleRadius;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DirVec;                               // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoDebris;                            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FModifiedVoxelValue>            CallFunc_SetValueSphereAsync_ModifiedValues;       // 0x0028(0x0010)(ReferenceParm)
	struct FVoxelIntBox                           CallFunc_SetValueSphereAsync_EditedBounds;         // 0x0038(0x0018)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld) == 0x000008, "Wrong alignment on BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld");
static_assert(sizeof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld) == 0x000050, "Wrong size on BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, EntryPoint) == 0x000000, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, K2Node_Event_Location) == 0x000004, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, K2Node_Event_HoleRadius) == 0x000010, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::K2Node_Event_HoleRadius' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, K2Node_Event_DirVec) == 0x000014, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::K2Node_Event_DirVec' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, K2Node_Event_bDoDebris) == 0x000020, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::K2Node_Event_bDoDebris' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, CallFunc_SetValueSphereAsync_ModifiedValues) == 0x000028, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::CallFunc_SetValueSphereAsync_ModifiedValues' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld, CallFunc_SetValueSphereAsync_EditedBounds) == 0x000038, "Member 'BP_GlassVoxelWorld_C_ExecuteUbergraph_BP_GlassVoxelWorld::CallFunc_SetValueSphereAsync_EditedBounds' has a wrong offset!");

// Function BP_GlassVoxelWorld.BP_GlassVoxelWorld_C.DoHole
// 0x0020 (0x0020 - 0x0000)
struct BP_GlassVoxelWorld_C_DoHole final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoleRadius;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirVec;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoDebris;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlassVoxelWorld_C_DoHole) == 0x000004, "Wrong alignment on BP_GlassVoxelWorld_C_DoHole");
static_assert(sizeof(BP_GlassVoxelWorld_C_DoHole) == 0x000020, "Wrong size on BP_GlassVoxelWorld_C_DoHole");
static_assert(offsetof(BP_GlassVoxelWorld_C_DoHole, Location) == 0x000000, "Member 'BP_GlassVoxelWorld_C_DoHole::Location' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_DoHole, HoleRadius) == 0x00000C, "Member 'BP_GlassVoxelWorld_C_DoHole::HoleRadius' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_DoHole, DirVec) == 0x000010, "Member 'BP_GlassVoxelWorld_C_DoHole::DirVec' has a wrong offset!");
static_assert(offsetof(BP_GlassVoxelWorld_C_DoHole, bDoDebris) == 0x00001C, "Member 'BP_GlassVoxelWorld_C_DoHole::bDoDebris' has a wrong offset!");

}

