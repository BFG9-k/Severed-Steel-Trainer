#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetIndicatorComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TargetIndicatorComponent.BP_TargetIndicatorComponent_C
// 0x0090 (0x0140 - 0x00B0)
class UBP_TargetIndicatorComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTexture2D*                             IndicatorTexture;                                  // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            IndicatorColor;                                    // 0x00C0(0x0028)(Edit, BlueprintVisible)
	bool                                          ShowDistanceText;                                  // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            DistanceTextColor;                                 // 0x00F0(0x0028)(Edit, BlueprintVisible)
	bool                                          ShowOffScreen;                                     // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowAtDistance;                                    // 0x0119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToShow;                                    // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_CompassMaster_C*                     MyCompass;                                         // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartOn;                                          // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TestHUDObjective_C*                 ScreenWidget;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TestHUDObjective_C*                 SpawnedObj;                                        // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TargetIndicatorComponent(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Remove_From_Compass();
	void AddToCompass();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TargetIndicatorComponent_C">();
	}
	static class UBP_TargetIndicatorComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TargetIndicatorComponent_C>();
	}
};
static_assert(alignof(UBP_TargetIndicatorComponent_C) == 0x000008, "Wrong alignment on UBP_TargetIndicatorComponent_C");
static_assert(sizeof(UBP_TargetIndicatorComponent_C) == 0x000140, "Wrong size on UBP_TargetIndicatorComponent_C");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_TargetIndicatorComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, IndicatorTexture) == 0x0000B8, "Member 'UBP_TargetIndicatorComponent_C::IndicatorTexture' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, IndicatorColor) == 0x0000C0, "Member 'UBP_TargetIndicatorComponent_C::IndicatorColor' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, ShowDistanceText) == 0x0000E8, "Member 'UBP_TargetIndicatorComponent_C::ShowDistanceText' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, DistanceTextColor) == 0x0000F0, "Member 'UBP_TargetIndicatorComponent_C::DistanceTextColor' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, ShowOffScreen) == 0x000118, "Member 'UBP_TargetIndicatorComponent_C::ShowOffScreen' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, ShowAtDistance) == 0x000119, "Member 'UBP_TargetIndicatorComponent_C::ShowAtDistance' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, DistanceToShow) == 0x00011C, "Member 'UBP_TargetIndicatorComponent_C::DistanceToShow' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, MyCompass) == 0x000120, "Member 'UBP_TargetIndicatorComponent_C::MyCompass' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, bStartOn) == 0x000128, "Member 'UBP_TargetIndicatorComponent_C::bStartOn' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, ScreenWidget) == 0x000130, "Member 'UBP_TargetIndicatorComponent_C::ScreenWidget' has a wrong offset!");
static_assert(offsetof(UBP_TargetIndicatorComponent_C, SpawnedObj) == 0x000138, "Member 'UBP_TargetIndicatorComponent_C::SpawnedObj' has a wrong offset!");

}

