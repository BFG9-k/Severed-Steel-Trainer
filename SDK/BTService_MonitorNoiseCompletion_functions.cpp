#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_MonitorNoiseCompletion

#include "Basic.hpp"

#include "BTService_MonitorNoiseCompletion_classes.hpp"
#include "BTService_MonitorNoiseCompletion_parameters.hpp"


namespace SDK
{

// Function BTService_MonitorNoiseCompletion.BTService_MonitorNoiseCompletion_C.ExecuteUbergraph_BTService_MonitorNoiseCompletion
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_MonitorNoiseCompletion_C::ExecuteUbergraph_BTService_MonitorNoiseCompletion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_MonitorNoiseCompletion_C", "ExecuteUbergraph_BTService_MonitorNoiseCompletion");

	Params::BTService_MonitorNoiseCompletion_C_ExecuteUbergraph_BTService_MonitorNoiseCompletion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTService_MonitorNoiseCompletion.BTService_MonitorNoiseCompletion_C.ReceiveTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_MonitorNoiseCompletion_C::ReceiveTick(class AActor* OwnerActor, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_MonitorNoiseCompletion_C", "ReceiveTick");

	Params::BTService_MonitorNoiseCompletion_C_ReceiveTick Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

